{
	"id": "47f489bede895914907adc318b202489",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/staking edu/staking.sol": {
				"content": " // SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract SimpleStaking is Ownable, ReentrancyGuard {\r\n    // Staked token (e.g., EDU)\r\n    IERC20 public stakingToken;\r\n    // Reward token (can be the same as staking token)\r\n    IERC20 public rewardToken;\r\n    \r\n    // Minimum lock period (2 weeks)\r\n    uint256 public constant MINIMUM_LOCK_PERIOD = 2 weeks;\r\n    \r\n    // Annual reward rate in basis points (e.g., 1000 = 10%)\r\n    uint256 public rewardRate = 1000;\r\n    \r\n    struct StakeInfo {\r\n        uint256 amount;        // Amount staked\r\n        uint256 startTime;     // Time when stake was created\r\n        uint256 lastClaimTime; // Last time rewards were claimed\r\n    }\r\n    \r\n    // Mapping of user address to their stake info\r\n    mapping(address => StakeInfo) public stakes;\r\n    \r\n    // Total staked amount\r\n    uint256 public totalStaked;\r\n    \r\n    // Events\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Unstaked(address indexed user, uint256 amount);\r\n    event RewardClaimed(address indexed user, uint256 amount);\r\n    \r\n    constructor(address _stakingToken, address _rewardToken) Ownable(msg.sender) {\r\n        stakingToken = IERC20(_stakingToken);\r\n        rewardToken = IERC20(_rewardToken);\r\n    }\r\n    \r\n    /**\r\n     * @notice Stake tokens\r\n     * @param _amount Amount to stake (in whole tokens, not wei)\r\n     */\r\n    function stake(uint256 _amount) external nonReentrant {\r\n        require(_amount > 0, \"Cannot stake 0\");\r\n        \r\n        // Convert _amount to wei (e18)\r\n        uint256 amountInWei = _amount * 1e18;\r\n        \r\n        // Update rewards before modifying stake\r\n        _updateReward(msg.sender);\r\n        \r\n        // Transfer tokens from user to contract\r\n        require(stakingToken.transferFrom(msg.sender, address(this), amountInWei), \"Transfer failed\");\r\n        \r\n        // Update stake information\r\n        StakeInfo storage userStake = stakes[msg.sender];\r\n        \r\n        // If this is a new stake, set the start time\r\n        if (userStake.amount == 0) {\r\n            userStake.startTime = block.timestamp;\r\n            userStake.lastClaimTime = block.timestamp;\r\n        }\r\n        \r\n        userStake.amount += amountInWei;\r\n        totalStaked += amountInWei;\r\n        \r\n        emit Staked(msg.sender, amountInWei);\r\n    }\r\n    \r\n    /**\r\n     * @notice Unstake tokens after lock period\r\n     * @param _amount Amount to unstake (in whole tokens, not wei)\r\n     */\r\n    function unstake(uint256 _amount) external nonReentrant {\r\n        StakeInfo storage userStake = stakes[msg.sender];\r\n        \r\n        // Convert _amount to wei (e18)\r\n        uint256 amountInWei = _amount * 1e18;\r\n        \r\n        require(userStake.amount >= amountInWei, \"Insufficient staked amount\");\r\n        require(block.timestamp >= userStake.startTime + MINIMUM_LOCK_PERIOD, \"Lock period not ended\");\r\n        \r\n        // Update rewards before modifying stake\r\n        _updateReward(msg.sender);\r\n        \r\n        // Update stake information\r\n        userStake.amount -= amountInWei;\r\n        totalStaked -= amountInWei;\r\n        \r\n        // If fully unstaked, reset start time\r\n        if (userStake.amount == 0) {\r\n            userStake.startTime = 0;\r\n        }\r\n        \r\n        // Transfer tokens back to user\r\n        require(stakingToken.transfer(msg.sender, amountInWei), \"Transfer failed\");\r\n        \r\n        emit Unstaked(msg.sender, amountInWei);\r\n    }\r\n    \r\n    /**\r\n     * @notice Claim accumulated rewards\r\n     */\r\n    function claimReward() external nonReentrant {\r\n        uint256 reward = _updateReward(msg.sender);\r\n        \r\n        if (reward > 0) {\r\n            require(rewardToken.transfer(msg.sender, reward), \"Reward transfer failed\");\r\n            emit RewardClaimed(msg.sender, reward);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @notice Calculate pending rewards for a user\r\n     * @param _user Address of the user\r\n     * @return Pending reward amount\r\n     */\r\n    function pendingReward(address _user) public view returns (uint256) {\r\n        StakeInfo storage userStake = stakes[_user];\r\n        \r\n        if (userStake.amount == 0) {\r\n            return 0;\r\n        }\r\n        \r\n        uint256 timeElapsed = block.timestamp - userStake.lastClaimTime;\r\n        \r\n        // Calculate reward: amount * rate * timeElapsed / (365 days * 10000)\r\n        // Rate is in basis points (1/100 of a percent)\r\n        return (userStake.amount * rewardRate * timeElapsed) / (365 days * 10000);\r\n    }\r\n    \r\n    /**\r\n     * @notice Update reward for a user\r\n     * @param _user Address of the user\r\n     * @return Reward amount\r\n     */\r\n    function _updateReward(address _user) internal returns (uint256) {\r\n        uint256 reward = pendingReward(_user);\r\n        \r\n        if (reward > 0) {\r\n            stakes[_user].lastClaimTime = block.timestamp;\r\n        }\r\n        \r\n        return reward;\r\n    }\r\n    \r\n    /**\r\n     * @notice Set reward rate (owner only)\r\n     * @param _rewardRate New reward rate in basis points\r\n     */\r\n    function setRewardRate(uint256 _rewardRate) external onlyOwner {\r\n        rewardRate = _rewardRate;\r\n    }\r\n    \r\n    /**\r\n     * @notice Get staking information for a user\r\n     * @param _user Address of the user\r\n     * @return amount Amount staked (in whole tokens)\r\n     * @return startTime Time when stake was created\r\n     * @return lockEndTime Time when lock period ends\r\n     * @return pendingRewards Pending rewards (in wei)\r\n     */\r\n    function getStakeInfo(address _user) external view returns (\r\n        uint256 amount,\r\n        uint256 startTime,\r\n        uint256 lockEndTime,\r\n        uint256 pendingRewards\r\n    ) {\r\n        StakeInfo storage userStake = stakes[_user];\r\n        \r\n        return (\r\n            userStake.amount / 1e18, // Convert wei to whole tokens for display\r\n            userStake.startTime,\r\n            userStake.startTime + MINIMUM_LOCK_PERIOD,\r\n            pendingReward(_user)\r\n        );\r\n    }\r\n}\r\n\r\n\r\n//0x2ae15F4EdE5bA81E03489384E22B40be5c2a8Ec6"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/staking edu/staking.sol": {
				"SimpleStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LOCK_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getStakeInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockEndTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "pendingRewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardRate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastClaimTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"getStakeInfo(address)": {
								"params": {
									"_user": "Address of the user"
								},
								"returns": {
									"amount": "Amount staked (in whole tokens)",
									"lockEndTime": "Time when lock period ends",
									"pendingRewards": "Pending rewards (in wei)",
									"startTime": "Time when stake was created"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingReward(address)": {
								"params": {
									"_user": "Address of the user"
								},
								"returns": {
									"_0": "Pending reward amount"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setRewardRate(uint256)": {
								"params": {
									"_rewardRate": "New reward rate in basis points"
								}
							},
							"stake(uint256)": {
								"params": {
									"_amount": "Amount to stake (in whole tokens, not wei)"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unstake(uint256)": {
								"params": {
									"_amount": "Amount to unstake (in whole tokens, not wei)"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/staking edu/staking.sol\":240:6168  contract SimpleStaking is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/staking edu/staking.sol\":652:656  1000 */\n  0x03e8\n    /* \"contracts/staking edu/staking.sol\":624:656  uint256 public rewardRate = 1000 */\n  0x04\n  sstore\n    /* \"contracts/staking edu/staking.sol\":1260:1437  constructor(address _stakingToken, address _rewardToken) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/staking edu/staking.sol\":1325:1335  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/staking edu/staking.sol\":1370:1383  _stakingToken */\n  dup2\n    /* \"contracts/staking edu/staking.sol\":1348:1360  stakingToken */\n  0x02\n  0x00\n    /* \"contracts/staking edu/staking.sol\":1348:1384  stakingToken = IERC20(_stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/staking edu/staking.sol\":1416:1428  _rewardToken */\n  dup1\n    /* \"contracts/staking edu/staking.sol\":1395:1406  rewardToken */\n  0x03\n  0x00\n    /* \"contracts/staking edu/staking.sol\":1395:1429  rewardToken = IERC20(_rewardToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/staking edu/staking.sol\":1260:1437  constructor(address _stakingToken, address _rewardToken) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"contracts/staking edu/staking.sol\":240:6168  contract SimpleStaking is Ownable, ReentrancyGuard {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_22:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_21\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_23:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_22\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_39\n  tag_18\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":949:1068   */\ntag_38:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_40\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_41\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_23\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_24:\n    /* \"#utility.yul\":1445:1469   */\n  tag_43\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_21\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_10:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_45\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_24\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/staking edu/staking.sol\":240:6168  contract SimpleStaking is Ownable, ReentrancyGuard {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/staking edu/staking.sol\":240:6168  contract SimpleStaking is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xc3453153\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc3453153\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf40f0f52\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x16934fc4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x21a40589\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/staking edu/staking.sol\":936:979  mapping(address => StakeInfo) public stakes */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking edu/staking.sol\":496:549  uint256 public constant MINIMUM_LOCK_PERIOD = 2 weeks */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking edu/staking.sol\":2652:3631  function unstake(uint256 _amount) external nonReentrant {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/staking edu/staking.sol\":331:357  IERC20 public stakingToken */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking edu/staking.sol\":624:656  uint256 public rewardRate = 1000 */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking edu/staking.sol\":1020:1046  uint256 public totalStaked */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking edu/staking.sol\":5227:5333  function setRewardRate(uint256 _rewardRate) external onlyOwner {... */\n    tag_11:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/staking edu/staking.sol\":1562:2505  function stake(uint256 _amount) external nonReentrant {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/staking edu/staking.sol\":3703:4000  function claimReward() external nonReentrant {... */\n    tag_13:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/staking edu/staking.sol\":5675:6165  function getStakeInfo(address _user) external view returns (... */\n    tag_14:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/staking edu/staking.sol\":4162:4688  function pendingReward(address _user) public view returns (uint256) {... */\n    tag_16:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking edu/staking.sol\":420:445  IERC20 public rewardToken */\n    tag_17:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking edu/staking.sol\":936:979  mapping(address => StakeInfo) public stakes */\n    tag_24:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/staking edu/staking.sol\":496:549  uint256 public constant MINIMUM_LOCK_PERIOD = 2 weeks */\n    tag_28:\n        /* \"contracts/staking edu/staking.sol\":542:549  2 weeks */\n      0x127500\n        /* \"contracts/staking edu/staking.sol\":496:549  uint256 public constant MINIMUM_LOCK_PERIOD = 2 weeks */\n      dup2\n      jump\t// out\n        /* \"contracts/staking edu/staking.sol\":2652:3631  function unstake(uint256 _amount) external nonReentrant {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_75\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_76\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_75:\n        /* \"contracts/staking edu/staking.sol\":2719:2746  StakeInfo storage userStake */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":2749:2755  stakes */\n      0x05\n        /* \"contracts/staking edu/staking.sol\":2749:2767  stakes[msg.sender] */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":2756:2766  msg.sender */\n      caller\n        /* \"contracts/staking edu/staking.sol\":2749:2767  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking edu/staking.sol\":2719:2767  StakeInfo storage userStake = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/staking edu/staking.sol\":2829:2848  uint256 amountInWei */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":2861:2865  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/staking edu/staking.sol\":2851:2858  _amount */\n      dup4\n        /* \"contracts/staking edu/staking.sol\":2851:2865  _amount * 1e18 */\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"contracts/staking edu/staking.sol\":2829:2865  uint256 amountInWei = _amount * 1e18 */\n      swap1\n      pop\n        /* \"contracts/staking edu/staking.sol\":2914:2925  amountInWei */\n      dup1\n        /* \"contracts/staking edu/staking.sol\":2894:2903  userStake */\n      dup3\n        /* \"contracts/staking edu/staking.sol\":2894:2910  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/staking edu/staking.sol\":2894:2925  userStake.amount >= amountInWei */\n      lt\n      iszero\n        /* \"contracts/staking edu/staking.sol\":2886:2956  require(userStake.amount >= amountInWei, \"Insufficient staked amount\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/staking edu/staking.sol\":542:549  2 weeks */\n      0x127500\n        /* \"contracts/staking edu/staking.sol\":2994:3003  userStake */\n      dup3\n        /* \"contracts/staking edu/staking.sol\":2994:3013  userStake.startTime */\n      0x01\n      add\n      sload\n        /* \"contracts/staking edu/staking.sol\":2994:3035  userStake.startTime + MINIMUM_LOCK_PERIOD */\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"contracts/staking edu/staking.sol\":2975:2990  block.timestamp */\n      timestamp\n        /* \"contracts/staking edu/staking.sol\":2975:3035  block.timestamp >= userStake.startTime + MINIMUM_LOCK_PERIOD */\n      lt\n      iszero\n        /* \"contracts/staking edu/staking.sol\":2967:3061  require(block.timestamp >= userStake.startTime + MINIMUM_LOCK_PERIOD, \"Lock period not ended\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/staking edu/staking.sol\":3132:3157  _updateReward(msg.sender) */\n      tag_88\n        /* \"contracts/staking edu/staking.sol\":3146:3156  msg.sender */\n      caller\n        /* \"contracts/staking edu/staking.sol\":3132:3145  _updateReward */\n      tag_89\n        /* \"contracts/staking edu/staking.sol\":3132:3157  _updateReward(msg.sender) */\n      jump\t// in\n    tag_88:\n      pop\n        /* \"contracts/staking edu/staking.sol\":3235:3246  amountInWei */\n      dup1\n        /* \"contracts/staking edu/staking.sol\":3215:3224  userStake */\n      dup3\n        /* \"contracts/staking edu/staking.sol\":3215:3231  userStake.amount */\n      0x00\n      add\n      0x00\n        /* \"contracts/staking edu/staking.sol\":3215:3246  userStake.amount -= amountInWei */\n      dup3\n      dup3\n      sload\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking edu/staking.sol\":3272:3283  amountInWei */\n      dup1\n        /* \"contracts/staking edu/staking.sol\":3257:3268  totalStaked */\n      0x06\n      0x00\n        /* \"contracts/staking edu/staking.sol\":3257:3283  totalStaked -= amountInWei */\n      dup3\n      dup3\n      sload\n      tag_92\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_92:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking edu/staking.sol\":3376:3377  0 */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":3356:3365  userStake */\n      dup3\n        /* \"contracts/staking edu/staking.sol\":3356:3372  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/staking edu/staking.sol\":3356:3377  userStake.amount == 0 */\n      sub\n        /* \"contracts/staking edu/staking.sol\":3352:3429  if (userStake.amount == 0) {... */\n      tag_93\n      jumpi\n        /* \"contracts/staking edu/staking.sol\":3416:3417  0 */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":3394:3403  userStake */\n      dup3\n        /* \"contracts/staking edu/staking.sol\":3394:3413  userStake.startTime */\n      0x01\n      add\n        /* \"contracts/staking edu/staking.sol\":3394:3417  userStake.startTime = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking edu/staking.sol\":3352:3429  if (userStake.amount == 0) {... */\n    tag_93:\n        /* \"contracts/staking edu/staking.sol\":3498:3510  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/staking edu/staking.sol\":3498:3519  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/staking edu/staking.sol\":3520:3530  msg.sender */\n      caller\n        /* \"contracts/staking edu/staking.sol\":3532:3543  amountInWei */\n      dup4\n        /* \"contracts/staking edu/staking.sol\":3498:3544  stakingToken.transfer(msg.sender, amountInWei) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap3\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contracts/staking edu/staking.sol\":3490:3564  require(stakingToken.transfer(msg.sender, amountInWei), \"Transfer failed\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"contracts/staking edu/staking.sol\":3599:3609  msg.sender */\n      caller\n        /* \"contracts/staking edu/staking.sol\":3590:3623  Unstaked(msg.sender, amountInWei) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75\n        /* \"contracts/staking edu/staking.sol\":3611:3622  amountInWei */\n      dup3\n        /* \"contracts/staking edu/staking.sol\":3590:3623  Unstaked(msg.sender, amountInWei) */\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/staking edu/staking.sol\":2708:3631  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_104\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_105\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_104:\n        /* \"contracts/staking edu/staking.sol\":2652:3631  function unstake(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/staking edu/staking.sol\":331:357  IERC20 public stakingToken */\n    tag_38:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/staking edu/staking.sol\":624:656  uint256 public rewardRate = 1000 */\n    tag_42:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/staking edu/staking.sol\":1020:1046  uint256 public totalStaked */\n    tag_45:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/staking edu/staking.sol\":5227:5333  function setRewardRate(uint256 _rewardRate) external onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/staking edu/staking.sol\":5314:5325  _rewardRate */\n      dup1\n        /* \"contracts/staking edu/staking.sol\":5301:5311  rewardRate */\n      0x04\n        /* \"contracts/staking edu/staking.sol\":5301:5325  rewardRate = _rewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking edu/staking.sol\":5227:5333  function setRewardRate(uint256 _rewardRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/staking edu/staking.sol\":1562:2505  function stake(uint256 _amount) external nonReentrant {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_117\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_76\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/staking edu/staking.sol\":1645:1646  0 */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":1635:1642  _amount */\n      dup2\n        /* \"contracts/staking edu/staking.sol\":1635:1646  _amount > 0 */\n      gt\n        /* \"contracts/staking edu/staking.sol\":1627:1665  require(_amount > 0, \"Cannot stake 0\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contracts/staking edu/staking.sol\":1727:1746  uint256 amountInWei */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":1759:1763  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/staking edu/staking.sol\":1749:1756  _amount */\n      dup3\n        /* \"contracts/staking edu/staking.sol\":1749:1763  _amount * 1e18 */\n      tag_122\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_122:\n        /* \"contracts/staking edu/staking.sol\":1727:1763  uint256 amountInWei = _amount * 1e18 */\n      swap1\n      pop\n        /* \"contracts/staking edu/staking.sol\":1834:1859  _updateReward(msg.sender) */\n      tag_123\n        /* \"contracts/staking edu/staking.sol\":1848:1858  msg.sender */\n      caller\n        /* \"contracts/staking edu/staking.sol\":1834:1847  _updateReward */\n      tag_89\n        /* \"contracts/staking edu/staking.sol\":1834:1859  _updateReward(msg.sender) */\n      jump\t// in\n    tag_123:\n      pop\n        /* \"contracts/staking edu/staking.sol\":1938:1950  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/staking edu/staking.sol\":1938:1963  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/staking edu/staking.sol\":1964:1974  msg.sender */\n      caller\n        /* \"contracts/staking edu/staking.sol\":1984:1988  this */\n      address\n        /* \"contracts/staking edu/staking.sol\":1991:2002  amountInWei */\n      dup5\n        /* \"contracts/staking edu/staking.sol\":1938:2003  stakingToken.transferFrom(msg.sender, address(this), amountInWei) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_128:\n        /* \"contracts/staking edu/staking.sol\":1930:2023  require(stakingToken.transferFrom(msg.sender, address(this), amountInWei), \"Transfer failed\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_102\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"contracts/staking edu/staking.sol\":2081:2108  StakeInfo storage userStake */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":2111:2117  stakes */\n      0x05\n        /* \"contracts/staking edu/staking.sol\":2111:2129  stakes[msg.sender] */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":2118:2128  msg.sender */\n      caller\n        /* \"contracts/staking edu/staking.sol\":2111:2129  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking edu/staking.sol\":2081:2129  StakeInfo storage userStake = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/staking edu/staking.sol\":2229:2230  0 */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":2209:2218  userStake */\n      dup2\n        /* \"contracts/staking edu/staking.sol\":2209:2225  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/staking edu/staking.sol\":2209:2230  userStake.amount == 0 */\n      sub\n        /* \"contracts/staking edu/staking.sol\":2205:2352  if (userStake.amount == 0) {... */\n      tag_131\n      jumpi\n        /* \"contracts/staking edu/staking.sol\":2269:2284  block.timestamp */\n      timestamp\n        /* \"contracts/staking edu/staking.sol\":2247:2256  userStake */\n      dup2\n        /* \"contracts/staking edu/staking.sol\":2247:2266  userStake.startTime */\n      0x01\n      add\n        /* \"contracts/staking edu/staking.sol\":2247:2284  userStake.startTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking edu/staking.sol\":2325:2340  block.timestamp */\n      timestamp\n        /* \"contracts/staking edu/staking.sol\":2299:2308  userStake */\n      dup2\n        /* \"contracts/staking edu/staking.sol\":2299:2322  userStake.lastClaimTime */\n      0x02\n      add\n        /* \"contracts/staking edu/staking.sol\":2299:2340  userStake.lastClaimTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking edu/staking.sol\":2205:2352  if (userStake.amount == 0) {... */\n    tag_131:\n        /* \"contracts/staking edu/staking.sol\":2392:2403  amountInWei */\n      dup2\n        /* \"contracts/staking edu/staking.sol\":2372:2381  userStake */\n      dup2\n        /* \"contracts/staking edu/staking.sol\":2372:2388  userStake.amount */\n      0x00\n      add\n      0x00\n        /* \"contracts/staking edu/staking.sol\":2372:2403  userStake.amount += amountInWei */\n      dup3\n      dup3\n      sload\n      tag_132\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_132:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking edu/staking.sol\":2429:2440  amountInWei */\n      dup2\n        /* \"contracts/staking edu/staking.sol\":2414:2425  totalStaked */\n      0x06\n      0x00\n        /* \"contracts/staking edu/staking.sol\":2414:2440  totalStaked += amountInWei */\n      dup3\n      dup3\n      sload\n      tag_133\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_133:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking edu/staking.sol\":2473:2483  msg.sender */\n      caller\n        /* \"contracts/staking edu/staking.sol\":2466:2497  Staked(msg.sender, amountInWei) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/staking edu/staking.sol\":2485:2496  amountInWei */\n      dup4\n        /* \"contracts/staking edu/staking.sol\":2466:2497  Staked(msg.sender, amountInWei) */\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/staking edu/staking.sol\":1616:2505  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_135\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_105\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/staking edu/staking.sol\":1562:2505  function stake(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/staking edu/staking.sol\":3703:4000  function claimReward() external nonReentrant {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_137\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_76\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/staking edu/staking.sol\":3759:3773  uint256 reward */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":3776:3801  _updateReward(msg.sender) */\n      tag_139\n        /* \"contracts/staking edu/staking.sol\":3790:3800  msg.sender */\n      caller\n        /* \"contracts/staking edu/staking.sol\":3776:3789  _updateReward */\n      tag_89\n        /* \"contracts/staking edu/staking.sol\":3776:3801  _updateReward(msg.sender) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/staking edu/staking.sol\":3759:3801  uint256 reward = _updateReward(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/staking edu/staking.sol\":3835:3836  0 */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":3826:3832  reward */\n      dup2\n        /* \"contracts/staking edu/staking.sol\":3826:3836  reward > 0 */\n      gt\n        /* \"contracts/staking edu/staking.sol\":3822:3993  if (reward > 0) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"contracts/staking edu/staking.sol\":3861:3872  rewardToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/staking edu/staking.sol\":3861:3881  rewardToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/staking edu/staking.sol\":3882:3892  msg.sender */\n      caller\n        /* \"contracts/staking edu/staking.sol\":3894:3900  reward */\n      dup4\n        /* \"contracts/staking edu/staking.sol\":3861:3901  rewardToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_141:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_144:\n        /* \"contracts/staking edu/staking.sol\":3853:3928  require(rewardToken.transfer(msg.sender, reward), \"Reward transfer failed\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"contracts/staking edu/staking.sol\":3962:3972  msg.sender */\n      caller\n        /* \"contracts/staking edu/staking.sol\":3948:3981  RewardClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"contracts/staking edu/staking.sol\":3974:3980  reward */\n      dup3\n        /* \"contracts/staking edu/staking.sol\":3948:3981  RewardClaimed(msg.sender, reward) */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/staking edu/staking.sol\":3822:3993  if (reward > 0) {... */\n    tag_140:\n        /* \"contracts/staking edu/staking.sol\":3748:4000  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_149\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_105\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/staking edu/staking.sol\":3703:4000  function claimReward() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/staking edu/staking.sol\":5675:6165  function getStakeInfo(address _user) external view returns (... */\n    tag_61:\n        /* \"contracts/staking edu/staking.sol\":5745:5759  uint256 amount */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":5770:5787  uint256 startTime */\n      dup1\n        /* \"contracts/staking edu/staking.sol\":5798:5817  uint256 lockEndTime */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":5828:5850  uint256 pendingRewards */\n      dup1\n        /* \"contracts/staking edu/staking.sol\":5869:5896  StakeInfo storage userStake */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":5899:5905  stakes */\n      0x05\n        /* \"contracts/staking edu/staking.sol\":5899:5912  stakes[_user] */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":5906:5911  _user */\n      dup8\n        /* \"contracts/staking edu/staking.sol\":5899:5912  stakes[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking edu/staking.sol\":5869:5912  StakeInfo storage userStake = stakes[_user] */\n      swap1\n      pop\n        /* \"contracts/staking edu/staking.sol\":5974:5978  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/staking edu/staking.sol\":5955:5964  userStake */\n      dup2\n        /* \"contracts/staking edu/staking.sol\":5955:5971  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/staking edu/staking.sol\":5955:5978  userStake.amount / 1e18 */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"contracts/staking edu/staking.sol\":6036:6045  userStake */\n      dup2\n        /* \"contracts/staking edu/staking.sol\":6036:6055  userStake.startTime */\n      0x01\n      add\n      sload\n        /* \"contracts/staking edu/staking.sol\":542:549  2 weeks */\n      0x127500\n        /* \"contracts/staking edu/staking.sol\":6070:6079  userStake */\n      dup4\n        /* \"contracts/staking edu/staking.sol\":6070:6089  userStake.startTime */\n      0x01\n      add\n      sload\n        /* \"contracts/staking edu/staking.sol\":6070:6111  userStake.startTime + MINIMUM_LOCK_PERIOD */\n      tag_153\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_153:\n        /* \"contracts/staking edu/staking.sol\":6126:6146  pendingReward(_user) */\n      tag_154\n        /* \"contracts/staking edu/staking.sol\":6140:6145  _user */\n      dup10\n        /* \"contracts/staking edu/staking.sol\":6126:6139  pendingReward */\n      tag_69\n        /* \"contracts/staking edu/staking.sol\":6126:6146  pendingReward(_user) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/staking edu/staking.sol\":5933:6157  return (... */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      pop\n        /* \"contracts/staking edu/staking.sol\":5675:6165  function getStakeInfo(address _user) external view returns (... */\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/staking edu/staking.sol\":4162:4688  function pendingReward(address _user) public view returns (uint256) {... */\n    tag_69:\n        /* \"contracts/staking edu/staking.sol\":4221:4228  uint256 */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":4241:4268  StakeInfo storage userStake */\n      dup1\n        /* \"contracts/staking edu/staking.sol\":4271:4277  stakes */\n      0x05\n        /* \"contracts/staking edu/staking.sol\":4271:4284  stakes[_user] */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":4278:4283  _user */\n      dup5\n        /* \"contracts/staking edu/staking.sol\":4271:4284  stakes[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking edu/staking.sol\":4241:4284  StakeInfo storage userStake = stakes[_user] */\n      swap1\n      pop\n        /* \"contracts/staking edu/staking.sol\":4329:4330  0 */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":4309:4318  userStake */\n      dup2\n        /* \"contracts/staking edu/staking.sol\":4309:4325  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/staking edu/staking.sol\":4309:4330  userStake.amount == 0 */\n      sub\n        /* \"contracts/staking edu/staking.sol\":4305:4367  if (userStake.amount == 0) {... */\n      tag_162\n      jumpi\n        /* \"contracts/staking edu/staking.sol\":4354:4355  0 */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":4347:4355  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_161)\n        /* \"contracts/staking edu/staking.sol\":4305:4367  if (userStake.amount == 0) {... */\n    tag_162:\n        /* \"contracts/staking edu/staking.sol\":4387:4406  uint256 timeElapsed */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":4427:4436  userStake */\n      dup2\n        /* \"contracts/staking edu/staking.sol\":4427:4450  userStake.lastClaimTime */\n      0x02\n      add\n      sload\n        /* \"contracts/staking edu/staking.sol\":4409:4424  block.timestamp */\n      timestamp\n        /* \"contracts/staking edu/staking.sol\":4409:4450  block.timestamp - userStake.lastClaimTime */\n      tag_163\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_163:\n        /* \"contracts/staking edu/staking.sol\":4387:4450  uint256 timeElapsed = block.timestamp - userStake.lastClaimTime */\n      swap1\n      pop\n        /* \"contracts/staking edu/staking.sol\":4663:4679  365 days * 10000 */\n      0x496cebb800\n        /* \"contracts/staking edu/staking.sol\":4647:4658  timeElapsed */\n      dup2\n        /* \"contracts/staking edu/staking.sol\":4634:4644  rewardRate */\n      sload(0x04)\n        /* \"contracts/staking edu/staking.sol\":4615:4624  userStake */\n      dup5\n        /* \"contracts/staking edu/staking.sol\":4615:4631  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/staking edu/staking.sol\":4615:4644  userStake.amount * rewardRate */\n      tag_164\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_164:\n        /* \"contracts/staking edu/staking.sol\":4615:4658  userStake.amount * rewardRate * timeElapsed */\n      tag_165\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_165:\n        /* \"contracts/staking edu/staking.sol\":4614:4680  (userStake.amount * rewardRate * timeElapsed) / (365 days * 10000) */\n      tag_166\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_166:\n        /* \"contracts/staking edu/staking.sol\":4607:4680  return (userStake.amount * rewardRate * timeElapsed) / (365 days * 10000) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/staking edu/staking.sol\":4162:4688  function pendingReward(address _user) public view returns (uint256) {... */\n    tag_161:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/staking edu/staking.sol\":420:445  IERC20 public rewardToken */\n    tag_72:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contracts/staking edu/staking.sol\":4830:5093  function _updateReward(address _user) internal returns (uint256) {... */\n    tag_89:\n        /* \"contracts/staking edu/staking.sol\":4886:4893  uint256 */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":4906:4920  uint256 reward */\n      dup1\n        /* \"contracts/staking edu/staking.sol\":4923:4943  pendingReward(_user) */\n      tag_172\n        /* \"contracts/staking edu/staking.sol\":4937:4942  _user */\n      dup4\n        /* \"contracts/staking edu/staking.sol\":4923:4936  pendingReward */\n      tag_69\n        /* \"contracts/staking edu/staking.sol\":4923:4943  pendingReward(_user) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/staking edu/staking.sol\":4906:4943  uint256 reward = pendingReward(_user) */\n      swap1\n      pop\n        /* \"contracts/staking edu/staking.sol\":4977:4978  0 */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":4968:4974  reward */\n      dup2\n        /* \"contracts/staking edu/staking.sol\":4968:4978  reward > 0 */\n      gt\n        /* \"contracts/staking edu/staking.sol\":4964:5052  if (reward > 0) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"contracts/staking edu/staking.sol\":5025:5040  block.timestamp */\n      timestamp\n        /* \"contracts/staking edu/staking.sol\":4995:5001  stakes */\n      0x05\n        /* \"contracts/staking edu/staking.sol\":4995:5008  stakes[_user] */\n      0x00\n        /* \"contracts/staking edu/staking.sol\":5002:5007  _user */\n      dup6\n        /* \"contracts/staking edu/staking.sol\":4995:5008  stakes[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking edu/staking.sol\":4995:5022  stakes[_user].lastClaimTime */\n      0x02\n      add\n        /* \"contracts/staking edu/staking.sol\":4995:5040  stakes[_user].lastClaimTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking edu/staking.sol\":4964:5052  if (reward > 0) {... */\n    tag_173:\n        /* \"contracts/staking edu/staking.sol\":5079:5085  reward */\n      dup1\n        /* \"contracts/staking edu/staking.sol\":5072:5085  return reward */\n      swap2\n      pop\n      pop\n        /* \"contracts/staking edu/staking.sol\":4830:5093  function _updateReward(address _user) internal returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_185:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_187:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_188:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_225\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_187\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_189:\n        /* \"#utility.yul\":641:665   */\n      tag_227\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_188\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_228:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_190:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_230\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_189\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_23:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_233\n      tag_185\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":917:1036   */\n    tag_232:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_234\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_190\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_191:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_192:\n        /* \"#utility.yul\":1346:1370   */\n      tag_237\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_191\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1825   */\n    tag_26:\n        /* \"#utility.yul\":1532:1536   */\n      0x00\n        /* \"#utility.yul\":1570:1572   */\n      0x60\n        /* \"#utility.yul\":1559:1568   */\n      dup3\n        /* \"#utility.yul\":1555:1573   */\n      add\n        /* \"#utility.yul\":1547:1573   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1654   */\n      tag_239\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1627:1633   */\n      dup7\n        /* \"#utility.yul\":1583:1654   */\n      tag_192\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1664:1736   */\n      tag_240\n        /* \"#utility.yul\":1732:1734   */\n      0x20\n        /* \"#utility.yul\":1721:1730   */\n      dup4\n        /* \"#utility.yul\":1717:1735   */\n      add\n        /* \"#utility.yul\":1708:1714   */\n      dup6\n        /* \"#utility.yul\":1664:1736   */\n      tag_192\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1746:1818   */\n      tag_241\n        /* \"#utility.yul\":1814:1816   */\n      0x40\n        /* \"#utility.yul\":1803:1812   */\n      dup4\n        /* \"#utility.yul\":1799:1817   */\n      add\n        /* \"#utility.yul\":1790:1796   */\n      dup5\n        /* \"#utility.yul\":1746:1818   */\n      tag_192\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1383:1825   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1831:2053   */\n    tag_30:\n        /* \"#utility.yul\":1924:1928   */\n      0x00\n        /* \"#utility.yul\":1962:1964   */\n      0x20\n        /* \"#utility.yul\":1951:1960   */\n      dup3\n        /* \"#utility.yul\":1947:1965   */\n      add\n        /* \"#utility.yul\":1939:1965   */\n      swap1\n      pop\n        /* \"#utility.yul\":1975:2046   */\n      tag_243\n        /* \"#utility.yul\":2043:2044   */\n      0x00\n        /* \"#utility.yul\":2032:2041   */\n      dup4\n        /* \"#utility.yul\":2028:2045   */\n      add\n        /* \"#utility.yul\":2019:2025   */\n      dup5\n        /* \"#utility.yul\":1975:2046   */\n      tag_192\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1831:2053   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2059:2181   */\n    tag_193:\n        /* \"#utility.yul\":2132:2156   */\n      tag_245\n        /* \"#utility.yul\":2150:2155   */\n      dup2\n        /* \"#utility.yul\":2132:2156   */\n      tag_191\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2125:2130   */\n      dup2\n        /* \"#utility.yul\":2122:2157   */\n      eq\n        /* \"#utility.yul\":2112:2175   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":2171:2172   */\n      0x00\n        /* \"#utility.yul\":2168:2169   */\n      dup1\n        /* \"#utility.yul\":2161:2173   */\n      revert\n        /* \"#utility.yul\":2112:2175   */\n    tag_246:\n        /* \"#utility.yul\":2059:2181   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2187:2326   */\n    tag_194:\n        /* \"#utility.yul\":2233:2238   */\n      0x00\n        /* \"#utility.yul\":2271:2277   */\n      dup2\n        /* \"#utility.yul\":2258:2278   */\n      calldataload\n        /* \"#utility.yul\":2249:2278   */\n      swap1\n      pop\n        /* \"#utility.yul\":2287:2320   */\n      tag_248\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2287:2320   */\n      tag_193\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2187:2326   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2661   */\n    tag_33:\n        /* \"#utility.yul\":2391:2397   */\n      0x00\n        /* \"#utility.yul\":2440:2442   */\n      0x20\n        /* \"#utility.yul\":2428:2437   */\n      dup3\n        /* \"#utility.yul\":2419:2426   */\n      dup5\n        /* \"#utility.yul\":2415:2438   */\n      sub\n        /* \"#utility.yul\":2411:2443   */\n      slt\n        /* \"#utility.yul\":2408:2527   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":2446:2525   */\n      tag_251\n      tag_185\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2408:2527   */\n    tag_250:\n        /* \"#utility.yul\":2566:2567   */\n      0x00\n        /* \"#utility.yul\":2591:2644   */\n      tag_252\n        /* \"#utility.yul\":2636:2643   */\n      dup5\n        /* \"#utility.yul\":2627:2633   */\n      dup3\n        /* \"#utility.yul\":2616:2625   */\n      dup6\n        /* \"#utility.yul\":2612:2634   */\n      add\n        /* \"#utility.yul\":2591:2644   */\n      tag_194\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2581:2644   */\n      swap2\n      pop\n        /* \"#utility.yul\":2537:2654   */\n      pop\n        /* \"#utility.yul\":2332:2661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2667:2727   */\n    tag_195:\n        /* \"#utility.yul\":2695:2698   */\n      0x00\n        /* \"#utility.yul\":2716:2721   */\n      dup2\n        /* \"#utility.yul\":2709:2721   */\n      swap1\n      pop\n        /* \"#utility.yul\":2667:2727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2733:2875   */\n    tag_196:\n        /* \"#utility.yul\":2783:2792   */\n      0x00\n        /* \"#utility.yul\":2816:2869   */\n      tag_255\n        /* \"#utility.yul\":2834:2868   */\n      tag_256\n        /* \"#utility.yul\":2843:2867   */\n      tag_257\n        /* \"#utility.yul\":2861:2866   */\n      dup5\n        /* \"#utility.yul\":2843:2867   */\n      tag_187\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2834:2868   */\n      tag_195\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":2816:2869   */\n      tag_187\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2803:2869   */\n      swap1\n      pop\n        /* \"#utility.yul\":2733:2875   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2881:3007   */\n    tag_197:\n        /* \"#utility.yul\":2931:2940   */\n      0x00\n        /* \"#utility.yul\":2964:3001   */\n      tag_259\n        /* \"#utility.yul\":2995:3000   */\n      dup3\n        /* \"#utility.yul\":2964:3001   */\n      tag_196\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2951:3001   */\n      swap1\n      pop\n        /* \"#utility.yul\":2881:3007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3013:3153   */\n    tag_198:\n        /* \"#utility.yul\":3077:3086   */\n      0x00\n        /* \"#utility.yul\":3110:3147   */\n      tag_261\n        /* \"#utility.yul\":3141:3146   */\n      dup3\n        /* \"#utility.yul\":3110:3147   */\n      tag_197\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3097:3147   */\n      swap1\n      pop\n        /* \"#utility.yul\":3013:3153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3159:3318   */\n    tag_199:\n        /* \"#utility.yul\":3260:3311   */\n      tag_263\n        /* \"#utility.yul\":3305:3310   */\n      dup2\n        /* \"#utility.yul\":3260:3311   */\n      tag_198\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3255:3258   */\n      dup3\n        /* \"#utility.yul\":3248:3312   */\n      mstore\n        /* \"#utility.yul\":3159:3318   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3324:3574   */\n    tag_40:\n        /* \"#utility.yul\":3431:3435   */\n      0x00\n        /* \"#utility.yul\":3469:3471   */\n      0x20\n        /* \"#utility.yul\":3458:3467   */\n      dup3\n        /* \"#utility.yul\":3454:3472   */\n      add\n        /* \"#utility.yul\":3446:3472   */\n      swap1\n      pop\n        /* \"#utility.yul\":3482:3567   */\n      tag_265\n        /* \"#utility.yul\":3564:3565   */\n      0x00\n        /* \"#utility.yul\":3553:3562   */\n      dup4\n        /* \"#utility.yul\":3549:3566   */\n      add\n        /* \"#utility.yul\":3540:3546   */\n      dup5\n        /* \"#utility.yul\":3482:3567   */\n      tag_199\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3324:3574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3580:3698   */\n    tag_200:\n        /* \"#utility.yul\":3667:3691   */\n      tag_267\n        /* \"#utility.yul\":3685:3690   */\n      dup2\n        /* \"#utility.yul\":3667:3691   */\n      tag_188\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3662:3665   */\n      dup3\n        /* \"#utility.yul\":3655:3692   */\n      mstore\n        /* \"#utility.yul\":3580:3698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3704:3926   */\n    tag_50:\n        /* \"#utility.yul\":3797:3801   */\n      0x00\n        /* \"#utility.yul\":3835:3837   */\n      0x20\n        /* \"#utility.yul\":3824:3833   */\n      dup3\n        /* \"#utility.yul\":3820:3838   */\n      add\n        /* \"#utility.yul\":3812:3838   */\n      swap1\n      pop\n        /* \"#utility.yul\":3848:3919   */\n      tag_269\n        /* \"#utility.yul\":3916:3917   */\n      0x00\n        /* \"#utility.yul\":3905:3914   */\n      dup4\n        /* \"#utility.yul\":3901:3918   */\n      add\n        /* \"#utility.yul\":3892:3898   */\n      dup5\n        /* \"#utility.yul\":3848:3919   */\n      tag_200\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3704:3926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3932:4485   */\n    tag_63:\n        /* \"#utility.yul\":4109:4113   */\n      0x00\n        /* \"#utility.yul\":4147:4150   */\n      0x80\n        /* \"#utility.yul\":4136:4145   */\n      dup3\n        /* \"#utility.yul\":4132:4151   */\n      add\n        /* \"#utility.yul\":4124:4151   */\n      swap1\n      pop\n        /* \"#utility.yul\":4161:4232   */\n      tag_271\n        /* \"#utility.yul\":4229:4230   */\n      0x00\n        /* \"#utility.yul\":4218:4227   */\n      dup4\n        /* \"#utility.yul\":4214:4231   */\n      add\n        /* \"#utility.yul\":4205:4211   */\n      dup8\n        /* \"#utility.yul\":4161:4232   */\n      tag_192\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4242:4314   */\n      tag_272\n        /* \"#utility.yul\":4310:4312   */\n      0x20\n        /* \"#utility.yul\":4299:4308   */\n      dup4\n        /* \"#utility.yul\":4295:4313   */\n      add\n        /* \"#utility.yul\":4286:4292   */\n      dup7\n        /* \"#utility.yul\":4242:4314   */\n      tag_192\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4324:4396   */\n      tag_273\n        /* \"#utility.yul\":4392:4394   */\n      0x40\n        /* \"#utility.yul\":4381:4390   */\n      dup4\n        /* \"#utility.yul\":4377:4395   */\n      add\n        /* \"#utility.yul\":4368:4374   */\n      dup6\n        /* \"#utility.yul\":4324:4396   */\n      tag_192\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4406:4478   */\n      tag_274\n        /* \"#utility.yul\":4474:4476   */\n      0x60\n        /* \"#utility.yul\":4463:4472   */\n      dup4\n        /* \"#utility.yul\":4459:4477   */\n      add\n        /* \"#utility.yul\":4450:4456   */\n      dup5\n        /* \"#utility.yul\":4406:4478   */\n      tag_192\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":3932:4485   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4491:4671   */\n    tag_201:\n        /* \"#utility.yul\":4539:4616   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4536:4537   */\n      0x00\n        /* \"#utility.yul\":4529:4617   */\n      mstore\n        /* \"#utility.yul\":4636:4640   */\n      0x11\n        /* \"#utility.yul\":4633:4634   */\n      0x04\n        /* \"#utility.yul\":4626:4641   */\n      mstore\n        /* \"#utility.yul\":4660:4664   */\n      0x24\n        /* \"#utility.yul\":4657:4658   */\n      0x00\n        /* \"#utility.yul\":4650:4665   */\n      revert\n        /* \"#utility.yul\":4677:5087   */\n    tag_79:\n        /* \"#utility.yul\":4717:4724   */\n      0x00\n        /* \"#utility.yul\":4740:4760   */\n      tag_277\n        /* \"#utility.yul\":4758:4759   */\n      dup3\n        /* \"#utility.yul\":4740:4760   */\n      tag_191\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4735:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4774:4794   */\n      tag_278\n        /* \"#utility.yul\":4792:4793   */\n      dup4\n        /* \"#utility.yul\":4774:4794   */\n      tag_191\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4769:4794   */\n      swap3\n      pop\n        /* \"#utility.yul\":4829:4830   */\n      dup3\n        /* \"#utility.yul\":4826:4827   */\n      dup3\n        /* \"#utility.yul\":4822:4831   */\n      mul\n        /* \"#utility.yul\":4851:4881   */\n      tag_279\n        /* \"#utility.yul\":4869:4880   */\n      dup2\n        /* \"#utility.yul\":4851:4881   */\n      tag_191\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4840:4881   */\n      swap2\n      pop\n        /* \"#utility.yul\":5030:5031   */\n      dup3\n        /* \"#utility.yul\":5021:5028   */\n      dup3\n        /* \"#utility.yul\":5017:5032   */\n      div\n        /* \"#utility.yul\":5014:5015   */\n      dup5\n        /* \"#utility.yul\":5011:5033   */\n      eq\n        /* \"#utility.yul\":4991:4992   */\n      dup4\n        /* \"#utility.yul\":4984:4993   */\n      iszero\n        /* \"#utility.yul\":4964:5047   */\n      or\n        /* \"#utility.yul\":4941:5080   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":5060:5078   */\n      tag_281\n      tag_201\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4941:5080   */\n    tag_280:\n        /* \"#utility.yul\":4725:5087   */\n      pop\n        /* \"#utility.yul\":4677:5087   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5093:5262   */\n    tag_202:\n        /* \"#utility.yul\":5177:5188   */\n      0x00\n        /* \"#utility.yul\":5211:5217   */\n      dup3\n        /* \"#utility.yul\":5206:5209   */\n      dup3\n        /* \"#utility.yul\":5199:5218   */\n      mstore\n        /* \"#utility.yul\":5251:5255   */\n      0x20\n        /* \"#utility.yul\":5246:5249   */\n      dup3\n        /* \"#utility.yul\":5242:5256   */\n      add\n        /* \"#utility.yul\":5227:5256   */\n      swap1\n      pop\n        /* \"#utility.yul\":5093:5262   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5268:5444   */\n    tag_203:\n        /* \"#utility.yul\":5408:5436   */\n      0x496e73756666696369656e74207374616b656420616d6f756e74000000000000\n        /* \"#utility.yul\":5404:5405   */\n      0x00\n        /* \"#utility.yul\":5396:5402   */\n      dup3\n        /* \"#utility.yul\":5392:5406   */\n      add\n        /* \"#utility.yul\":5385:5437   */\n      mstore\n        /* \"#utility.yul\":5268:5444   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5450:5816   */\n    tag_204:\n        /* \"#utility.yul\":5592:5595   */\n      0x00\n        /* \"#utility.yul\":5613:5680   */\n      tag_285\n        /* \"#utility.yul\":5677:5679   */\n      0x1a\n        /* \"#utility.yul\":5672:5675   */\n      dup4\n        /* \"#utility.yul\":5613:5680   */\n      tag_202\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5606:5680   */\n      swap2\n      pop\n        /* \"#utility.yul\":5689:5782   */\n      tag_286\n        /* \"#utility.yul\":5778:5781   */\n      dup3\n        /* \"#utility.yul\":5689:5782   */\n      tag_203\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5807:5809   */\n      0x20\n        /* \"#utility.yul\":5802:5805   */\n      dup3\n        /* \"#utility.yul\":5798:5810   */\n      add\n        /* \"#utility.yul\":5791:5810   */\n      swap1\n      pop\n        /* \"#utility.yul\":5450:5816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5822:6241   */\n    tag_82:\n        /* \"#utility.yul\":5988:5992   */\n      0x00\n        /* \"#utility.yul\":6026:6028   */\n      0x20\n        /* \"#utility.yul\":6015:6024   */\n      dup3\n        /* \"#utility.yul\":6011:6029   */\n      add\n        /* \"#utility.yul\":6003:6029   */\n      swap1\n      pop\n        /* \"#utility.yul\":6075:6084   */\n      dup2\n        /* \"#utility.yul\":6069:6073   */\n      dup2\n        /* \"#utility.yul\":6065:6085   */\n      sub\n        /* \"#utility.yul\":6061:6062   */\n      0x00\n        /* \"#utility.yul\":6050:6059   */\n      dup4\n        /* \"#utility.yul\":6046:6063   */\n      add\n        /* \"#utility.yul\":6039:6086   */\n      mstore\n        /* \"#utility.yul\":6103:6234   */\n      tag_288\n        /* \"#utility.yul\":6229:6233   */\n      dup2\n        /* \"#utility.yul\":6103:6234   */\n      tag_204\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":6095:6234   */\n      swap1\n      pop\n        /* \"#utility.yul\":5822:6241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6247:6438   */\n    tag_84:\n        /* \"#utility.yul\":6287:6290   */\n      0x00\n        /* \"#utility.yul\":6306:6326   */\n      tag_290\n        /* \"#utility.yul\":6324:6325   */\n      dup3\n        /* \"#utility.yul\":6306:6326   */\n      tag_191\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6301:6326   */\n      swap2\n      pop\n        /* \"#utility.yul\":6340:6360   */\n      tag_291\n        /* \"#utility.yul\":6358:6359   */\n      dup4\n        /* \"#utility.yul\":6340:6360   */\n      tag_191\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6335:6360   */\n      swap3\n      pop\n        /* \"#utility.yul\":6383:6384   */\n      dup3\n        /* \"#utility.yul\":6380:6381   */\n      dup3\n        /* \"#utility.yul\":6376:6385   */\n      add\n        /* \"#utility.yul\":6369:6385   */\n      swap1\n      pop\n        /* \"#utility.yul\":6404:6407   */\n      dup1\n        /* \"#utility.yul\":6401:6402   */\n      dup3\n        /* \"#utility.yul\":6398:6408   */\n      gt\n        /* \"#utility.yul\":6395:6431   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":6411:6429   */\n      tag_293\n      tag_201\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6395:6431   */\n    tag_292:\n        /* \"#utility.yul\":6247:6438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6444:6615   */\n    tag_205:\n        /* \"#utility.yul\":6584:6607   */\n      0x4c6f636b20706572696f64206e6f7420656e6465640000000000000000000000\n        /* \"#utility.yul\":6580:6581   */\n      0x00\n        /* \"#utility.yul\":6572:6578   */\n      dup3\n        /* \"#utility.yul\":6568:6582   */\n      add\n        /* \"#utility.yul\":6561:6608   */\n      mstore\n        /* \"#utility.yul\":6444:6615   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6621:6987   */\n    tag_206:\n        /* \"#utility.yul\":6763:6766   */\n      0x00\n        /* \"#utility.yul\":6784:6851   */\n      tag_296\n        /* \"#utility.yul\":6848:6850   */\n      0x15\n        /* \"#utility.yul\":6843:6846   */\n      dup4\n        /* \"#utility.yul\":6784:6851   */\n      tag_202\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":6777:6851   */\n      swap2\n      pop\n        /* \"#utility.yul\":6860:6953   */\n      tag_297\n        /* \"#utility.yul\":6949:6952   */\n      dup3\n        /* \"#utility.yul\":6860:6953   */\n      tag_205\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":6978:6980   */\n      0x20\n        /* \"#utility.yul\":6973:6976   */\n      dup3\n        /* \"#utility.yul\":6969:6981   */\n      add\n        /* \"#utility.yul\":6962:6981   */\n      swap1\n      pop\n        /* \"#utility.yul\":6621:6987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6993:7412   */\n    tag_87:\n        /* \"#utility.yul\":7159:7163   */\n      0x00\n        /* \"#utility.yul\":7197:7199   */\n      0x20\n        /* \"#utility.yul\":7186:7195   */\n      dup3\n        /* \"#utility.yul\":7182:7200   */\n      add\n        /* \"#utility.yul\":7174:7200   */\n      swap1\n      pop\n        /* \"#utility.yul\":7246:7255   */\n      dup2\n        /* \"#utility.yul\":7240:7244   */\n      dup2\n        /* \"#utility.yul\":7236:7256   */\n      sub\n        /* \"#utility.yul\":7232:7233   */\n      0x00\n        /* \"#utility.yul\":7221:7230   */\n      dup4\n        /* \"#utility.yul\":7217:7234   */\n      add\n        /* \"#utility.yul\":7210:7257   */\n      mstore\n        /* \"#utility.yul\":7274:7405   */\n      tag_299\n        /* \"#utility.yul\":7400:7404   */\n      dup2\n        /* \"#utility.yul\":7274:7405   */\n      tag_206\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":7266:7405   */\n      swap1\n      pop\n        /* \"#utility.yul\":6993:7412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7418:7612   */\n    tag_91:\n        /* \"#utility.yul\":7458:7462   */\n      0x00\n        /* \"#utility.yul\":7478:7498   */\n      tag_301\n        /* \"#utility.yul\":7496:7497   */\n      dup3\n        /* \"#utility.yul\":7478:7498   */\n      tag_191\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7473:7498   */\n      swap2\n      pop\n        /* \"#utility.yul\":7512:7532   */\n      tag_302\n        /* \"#utility.yul\":7530:7531   */\n      dup4\n        /* \"#utility.yul\":7512:7532   */\n      tag_191\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":7507:7532   */\n      swap3\n      pop\n        /* \"#utility.yul\":7556:7557   */\n      dup3\n        /* \"#utility.yul\":7553:7554   */\n      dup3\n        /* \"#utility.yul\":7549:7558   */\n      sub\n        /* \"#utility.yul\":7541:7558   */\n      swap1\n      pop\n        /* \"#utility.yul\":7580:7581   */\n      dup2\n        /* \"#utility.yul\":7574:7578   */\n      dup2\n        /* \"#utility.yul\":7571:7582   */\n      gt\n        /* \"#utility.yul\":7568:7605   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":7585:7603   */\n      tag_304\n      tag_201\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7568:7605   */\n    tag_303:\n        /* \"#utility.yul\":7418:7612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7618:7950   */\n    tag_95:\n        /* \"#utility.yul\":7739:7743   */\n      0x00\n        /* \"#utility.yul\":7777:7779   */\n      0x40\n        /* \"#utility.yul\":7766:7775   */\n      dup3\n        /* \"#utility.yul\":7762:7780   */\n      add\n        /* \"#utility.yul\":7754:7780   */\n      swap1\n      pop\n        /* \"#utility.yul\":7790:7861   */\n      tag_306\n        /* \"#utility.yul\":7858:7859   */\n      0x00\n        /* \"#utility.yul\":7847:7856   */\n      dup4\n        /* \"#utility.yul\":7843:7860   */\n      add\n        /* \"#utility.yul\":7834:7840   */\n      dup6\n        /* \"#utility.yul\":7790:7861   */\n      tag_200\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7871:7943   */\n      tag_307\n        /* \"#utility.yul\":7939:7941   */\n      0x20\n        /* \"#utility.yul\":7928:7937   */\n      dup4\n        /* \"#utility.yul\":7924:7942   */\n      add\n        /* \"#utility.yul\":7915:7921   */\n      dup5\n        /* \"#utility.yul\":7871:7943   */\n      tag_192\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7618:7950   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7956:8046   */\n    tag_207:\n        /* \"#utility.yul\":7990:7997   */\n      0x00\n        /* \"#utility.yul\":8033:8038   */\n      dup2\n        /* \"#utility.yul\":8026:8039   */\n      iszero\n        /* \"#utility.yul\":8019:8040   */\n      iszero\n        /* \"#utility.yul\":8008:8040   */\n      swap1\n      pop\n        /* \"#utility.yul\":7956:8046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8052:8168   */\n    tag_208:\n        /* \"#utility.yul\":8122:8143   */\n      tag_310\n        /* \"#utility.yul\":8137:8142   */\n      dup2\n        /* \"#utility.yul\":8122:8143   */\n      tag_207\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8115:8120   */\n      dup2\n        /* \"#utility.yul\":8112:8144   */\n      eq\n        /* \"#utility.yul\":8102:8162   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":8158:8159   */\n      0x00\n        /* \"#utility.yul\":8155:8156   */\n      dup1\n        /* \"#utility.yul\":8148:8160   */\n      revert\n        /* \"#utility.yul\":8102:8162   */\n    tag_311:\n        /* \"#utility.yul\":8052:8168   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8174:8311   */\n    tag_209:\n        /* \"#utility.yul\":8228:8233   */\n      0x00\n        /* \"#utility.yul\":8259:8265   */\n      dup2\n        /* \"#utility.yul\":8253:8266   */\n      mload\n        /* \"#utility.yul\":8244:8266   */\n      swap1\n      pop\n        /* \"#utility.yul\":8275:8305   */\n      tag_313\n        /* \"#utility.yul\":8299:8304   */\n      dup2\n        /* \"#utility.yul\":8275:8305   */\n      tag_208\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":8174:8311   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8317:8662   */\n    tag_99:\n        /* \"#utility.yul\":8384:8390   */\n      0x00\n        /* \"#utility.yul\":8433:8435   */\n      0x20\n        /* \"#utility.yul\":8421:8430   */\n      dup3\n        /* \"#utility.yul\":8412:8419   */\n      dup5\n        /* \"#utility.yul\":8408:8431   */\n      sub\n        /* \"#utility.yul\":8404:8436   */\n      slt\n        /* \"#utility.yul\":8401:8520   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":8439:8518   */\n      tag_316\n      tag_185\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":8401:8520   */\n    tag_315:\n        /* \"#utility.yul\":8559:8560   */\n      0x00\n        /* \"#utility.yul\":8584:8645   */\n      tag_317\n        /* \"#utility.yul\":8637:8644   */\n      dup5\n        /* \"#utility.yul\":8628:8634   */\n      dup3\n        /* \"#utility.yul\":8617:8626   */\n      dup6\n        /* \"#utility.yul\":8613:8635   */\n      add\n        /* \"#utility.yul\":8584:8645   */\n      tag_209\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":8574:8645   */\n      swap2\n      pop\n        /* \"#utility.yul\":8530:8655   */\n      pop\n        /* \"#utility.yul\":8317:8662   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8668:8833   */\n    tag_210:\n        /* \"#utility.yul\":8808:8825   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":8804:8805   */\n      0x00\n        /* \"#utility.yul\":8796:8802   */\n      dup3\n        /* \"#utility.yul\":8792:8806   */\n      add\n        /* \"#utility.yul\":8785:8826   */\n      mstore\n        /* \"#utility.yul\":8668:8833   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8839:9205   */\n    tag_211:\n        /* \"#utility.yul\":8981:8984   */\n      0x00\n        /* \"#utility.yul\":9002:9069   */\n      tag_320\n        /* \"#utility.yul\":9066:9068   */\n      0x0f\n        /* \"#utility.yul\":9061:9064   */\n      dup4\n        /* \"#utility.yul\":9002:9069   */\n      tag_202\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":8995:9069   */\n      swap2\n      pop\n        /* \"#utility.yul\":9078:9171   */\n      tag_321\n        /* \"#utility.yul\":9167:9170   */\n      dup3\n        /* \"#utility.yul\":9078:9171   */\n      tag_210\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":9196:9198   */\n      0x20\n        /* \"#utility.yul\":9191:9194   */\n      dup3\n        /* \"#utility.yul\":9187:9199   */\n      add\n        /* \"#utility.yul\":9180:9199   */\n      swap1\n      pop\n        /* \"#utility.yul\":8839:9205   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9211:9630   */\n    tag_102:\n        /* \"#utility.yul\":9377:9381   */\n      0x00\n        /* \"#utility.yul\":9415:9417   */\n      0x20\n        /* \"#utility.yul\":9404:9413   */\n      dup3\n        /* \"#utility.yul\":9400:9418   */\n      add\n        /* \"#utility.yul\":9392:9418   */\n      swap1\n      pop\n        /* \"#utility.yul\":9464:9473   */\n      dup2\n        /* \"#utility.yul\":9458:9462   */\n      dup2\n        /* \"#utility.yul\":9454:9474   */\n      sub\n        /* \"#utility.yul\":9450:9451   */\n      0x00\n        /* \"#utility.yul\":9439:9448   */\n      dup4\n        /* \"#utility.yul\":9435:9452   */\n      add\n        /* \"#utility.yul\":9428:9475   */\n      mstore\n        /* \"#utility.yul\":9492:9623   */\n      tag_323\n        /* \"#utility.yul\":9618:9622   */\n      dup2\n        /* \"#utility.yul\":9492:9623   */\n      tag_211\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":9484:9623   */\n      swap1\n      pop\n        /* \"#utility.yul\":9211:9630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9636:9800   */\n    tag_212:\n        /* \"#utility.yul\":9776:9792   */\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n        /* \"#utility.yul\":9772:9773   */\n      0x00\n        /* \"#utility.yul\":9764:9770   */\n      dup3\n        /* \"#utility.yul\":9760:9774   */\n      add\n        /* \"#utility.yul\":9753:9793   */\n      mstore\n        /* \"#utility.yul\":9636:9800   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9806:10172   */\n    tag_213:\n        /* \"#utility.yul\":9948:9951   */\n      0x00\n        /* \"#utility.yul\":9969:10036   */\n      tag_326\n        /* \"#utility.yul\":10033:10035   */\n      0x0e\n        /* \"#utility.yul\":10028:10031   */\n      dup4\n        /* \"#utility.yul\":9969:10036   */\n      tag_202\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":9962:10036   */\n      swap2\n      pop\n        /* \"#utility.yul\":10045:10138   */\n      tag_327\n        /* \"#utility.yul\":10134:10137   */\n      dup3\n        /* \"#utility.yul\":10045:10138   */\n      tag_212\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":10163:10165   */\n      0x20\n        /* \"#utility.yul\":10158:10161   */\n      dup3\n        /* \"#utility.yul\":10154:10166   */\n      add\n        /* \"#utility.yul\":10147:10166   */\n      swap1\n      pop\n        /* \"#utility.yul\":9806:10172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10178:10597   */\n    tag_121:\n        /* \"#utility.yul\":10344:10348   */\n      0x00\n        /* \"#utility.yul\":10382:10384   */\n      0x20\n        /* \"#utility.yul\":10371:10380   */\n      dup3\n        /* \"#utility.yul\":10367:10385   */\n      add\n        /* \"#utility.yul\":10359:10385   */\n      swap1\n      pop\n        /* \"#utility.yul\":10431:10440   */\n      dup2\n        /* \"#utility.yul\":10425:10429   */\n      dup2\n        /* \"#utility.yul\":10421:10441   */\n      sub\n        /* \"#utility.yul\":10417:10418   */\n      0x00\n        /* \"#utility.yul\":10406:10415   */\n      dup4\n        /* \"#utility.yul\":10402:10419   */\n      add\n        /* \"#utility.yul\":10395:10442   */\n      mstore\n        /* \"#utility.yul\":10459:10590   */\n      tag_329\n        /* \"#utility.yul\":10585:10589   */\n      dup2\n        /* \"#utility.yul\":10459:10590   */\n      tag_213\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":10451:10590   */\n      swap1\n      pop\n        /* \"#utility.yul\":10178:10597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10603:11045   */\n    tag_125:\n        /* \"#utility.yul\":10752:10756   */\n      0x00\n        /* \"#utility.yul\":10790:10792   */\n      0x60\n        /* \"#utility.yul\":10779:10788   */\n      dup3\n        /* \"#utility.yul\":10775:10793   */\n      add\n        /* \"#utility.yul\":10767:10793   */\n      swap1\n      pop\n        /* \"#utility.yul\":10803:10874   */\n      tag_331\n        /* \"#utility.yul\":10871:10872   */\n      0x00\n        /* \"#utility.yul\":10860:10869   */\n      dup4\n        /* \"#utility.yul\":10856:10873   */\n      add\n        /* \"#utility.yul\":10847:10853   */\n      dup7\n        /* \"#utility.yul\":10803:10874   */\n      tag_200\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":10884:10956   */\n      tag_332\n        /* \"#utility.yul\":10952:10954   */\n      0x20\n        /* \"#utility.yul\":10941:10950   */\n      dup4\n        /* \"#utility.yul\":10937:10955   */\n      add\n        /* \"#utility.yul\":10928:10934   */\n      dup6\n        /* \"#utility.yul\":10884:10956   */\n      tag_200\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":10966:11038   */\n      tag_333\n        /* \"#utility.yul\":11034:11036   */\n      0x40\n        /* \"#utility.yul\":11023:11032   */\n      dup4\n        /* \"#utility.yul\":11019:11037   */\n      add\n        /* \"#utility.yul\":11010:11016   */\n      dup5\n        /* \"#utility.yul\":10966:11038   */\n      tag_192\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":10603:11045   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11051:11223   */\n    tag_214:\n        /* \"#utility.yul\":11191:11215   */\n      0x526577617264207472616e73666572206661696c656400000000000000000000\n        /* \"#utility.yul\":11187:11188   */\n      0x00\n        /* \"#utility.yul\":11179:11185   */\n      dup3\n        /* \"#utility.yul\":11175:11189   */\n      add\n        /* \"#utility.yul\":11168:11216   */\n      mstore\n        /* \"#utility.yul\":11051:11223   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11229:11595   */\n    tag_215:\n        /* \"#utility.yul\":11371:11374   */\n      0x00\n        /* \"#utility.yul\":11392:11459   */\n      tag_336\n        /* \"#utility.yul\":11456:11458   */\n      0x16\n        /* \"#utility.yul\":11451:11454   */\n      dup4\n        /* \"#utility.yul\":11392:11459   */\n      tag_202\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":11385:11459   */\n      swap2\n      pop\n        /* \"#utility.yul\":11468:11561   */\n      tag_337\n        /* \"#utility.yul\":11557:11560   */\n      dup3\n        /* \"#utility.yul\":11468:11561   */\n      tag_214\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":11586:11588   */\n      0x20\n        /* \"#utility.yul\":11581:11584   */\n      dup3\n        /* \"#utility.yul\":11577:11589   */\n      add\n        /* \"#utility.yul\":11570:11589   */\n      swap1\n      pop\n        /* \"#utility.yul\":11229:11595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11601:12020   */\n    tag_147:\n        /* \"#utility.yul\":11767:11771   */\n      0x00\n        /* \"#utility.yul\":11805:11807   */\n      0x20\n        /* \"#utility.yul\":11794:11803   */\n      dup3\n        /* \"#utility.yul\":11790:11808   */\n      add\n        /* \"#utility.yul\":11782:11808   */\n      swap1\n      pop\n        /* \"#utility.yul\":11854:11863   */\n      dup2\n        /* \"#utility.yul\":11848:11852   */\n      dup2\n        /* \"#utility.yul\":11844:11864   */\n      sub\n        /* \"#utility.yul\":11840:11841   */\n      0x00\n        /* \"#utility.yul\":11829:11838   */\n      dup4\n        /* \"#utility.yul\":11825:11842   */\n      add\n        /* \"#utility.yul\":11818:11865   */\n      mstore\n        /* \"#utility.yul\":11882:12013   */\n      tag_339\n        /* \"#utility.yul\":12008:12012   */\n      dup2\n        /* \"#utility.yul\":11882:12013   */\n      tag_215\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":11874:12013   */\n      swap1\n      pop\n        /* \"#utility.yul\":11601:12020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12026:12206   */\n    tag_216:\n        /* \"#utility.yul\":12074:12151   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12071:12072   */\n      0x00\n        /* \"#utility.yul\":12064:12152   */\n      mstore\n        /* \"#utility.yul\":12171:12175   */\n      0x12\n        /* \"#utility.yul\":12168:12169   */\n      0x04\n        /* \"#utility.yul\":12161:12176   */\n      mstore\n        /* \"#utility.yul\":12195:12199   */\n      0x24\n        /* \"#utility.yul\":12192:12193   */\n      0x00\n        /* \"#utility.yul\":12185:12200   */\n      revert\n        /* \"#utility.yul\":12212:12397   */\n    tag_152:\n        /* \"#utility.yul\":12252:12253   */\n      0x00\n        /* \"#utility.yul\":12269:12289   */\n      tag_342\n        /* \"#utility.yul\":12287:12288   */\n      dup3\n        /* \"#utility.yul\":12269:12289   */\n      tag_191\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":12264:12289   */\n      swap2\n      pop\n        /* \"#utility.yul\":12303:12323   */\n      tag_343\n        /* \"#utility.yul\":12321:12322   */\n      dup4\n        /* \"#utility.yul\":12303:12323   */\n      tag_191\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":12298:12323   */\n      swap3\n      pop\n        /* \"#utility.yul\":12342:12343   */\n      dup3\n        /* \"#utility.yul\":12332:12367   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":12347:12365   */\n      tag_345\n      tag_216\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":12332:12367   */\n    tag_344:\n        /* \"#utility.yul\":12389:12390   */\n      dup3\n        /* \"#utility.yul\":12386:12387   */\n      dup3\n        /* \"#utility.yul\":12382:12391   */\n      div\n        /* \"#utility.yul\":12377:12391   */\n      swap1\n      pop\n        /* \"#utility.yul\":12212:12397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12403:12584   */\n    tag_217:\n        /* \"#utility.yul\":12543:12576   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":12539:12540   */\n      0x00\n        /* \"#utility.yul\":12531:12537   */\n      dup3\n        /* \"#utility.yul\":12527:12541   */\n      add\n        /* \"#utility.yul\":12520:12577   */\n      mstore\n        /* \"#utility.yul\":12403:12584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12590:12956   */\n    tag_218:\n        /* \"#utility.yul\":12732:12735   */\n      0x00\n        /* \"#utility.yul\":12753:12820   */\n      tag_348\n        /* \"#utility.yul\":12817:12819   */\n      0x1f\n        /* \"#utility.yul\":12812:12815   */\n      dup4\n        /* \"#utility.yul\":12753:12820   */\n      tag_202\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":12746:12820   */\n      swap2\n      pop\n        /* \"#utility.yul\":12829:12922   */\n      tag_349\n        /* \"#utility.yul\":12918:12921   */\n      dup3\n        /* \"#utility.yul\":12829:12922   */\n      tag_217\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":12947:12949   */\n      0x20\n        /* \"#utility.yul\":12942:12945   */\n      dup3\n        /* \"#utility.yul\":12938:12950   */\n      add\n        /* \"#utility.yul\":12931:12950   */\n      swap1\n      pop\n        /* \"#utility.yul\":12590:12956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12962:13381   */\n    tag_170:\n        /* \"#utility.yul\":13128:13132   */\n      0x00\n        /* \"#utility.yul\":13166:13168   */\n      0x20\n        /* \"#utility.yul\":13155:13164   */\n      dup3\n        /* \"#utility.yul\":13151:13169   */\n      add\n        /* \"#utility.yul\":13143:13169   */\n      swap1\n      pop\n        /* \"#utility.yul\":13215:13224   */\n      dup2\n        /* \"#utility.yul\":13209:13213   */\n      dup2\n        /* \"#utility.yul\":13205:13225   */\n      sub\n        /* \"#utility.yul\":13201:13202   */\n      0x00\n        /* \"#utility.yul\":13190:13199   */\n      dup4\n        /* \"#utility.yul\":13186:13203   */\n      add\n        /* \"#utility.yul\":13179:13226   */\n      mstore\n        /* \"#utility.yul\":13243:13374   */\n      tag_351\n        /* \"#utility.yul\":13369:13373   */\n      dup2\n        /* \"#utility.yul\":13243:13374   */\n      tag_218\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":13235:13374   */\n      swap1\n      pop\n        /* \"#utility.yul\":12962:13381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203679cd24df9016be778c4f68134a152a379d741cc8e9a8cf715aee02761897d364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_397": {
									"entryPoint": null,
									"id": 397,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 326,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:5",
										"nodeType": "YulBlock",
										"src": "0:1707:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "939:413:5",
													"nodeType": "YulBlock",
													"src": "939:413:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:5",
																"nodeType": "YulBlock",
																"src": "985:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:5"
																			},
																			"nativeSrc": "987:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:5"
																		},
																		"nativeSrc": "987:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:5"
																		},
																		"nativeSrc": "956:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:5",
																		"nodeType": "YulLiteral",
																		"src": "981:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:5"
																},
																"nativeSrc": "952:32:5",
																"nodeType": "YulFunctionCall",
																"src": "952:32:5"
															},
															"nativeSrc": "949:119:5",
															"nodeType": "YulIf",
															"src": "949:119:5"
														},
														{
															"nativeSrc": "1078:128:5",
															"nodeType": "YulBlock",
															"src": "1078:128:5",
															"statements": [
																{
																	"nativeSrc": "1093:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:5"
																				},
																				"nativeSrc": "1164:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:5"
																		},
																		"nativeSrc": "1132:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:5",
															"nodeType": "YulBlock",
															"src": "1216:129:5",
															"statements": [
																{
																	"nativeSrc": "1231:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:5"
																				},
																				"nativeSrc": "1303:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:5"
																		},
																		"nativeSrc": "1271:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:5",
														"nodeType": "YulTypedName",
														"src": "901:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:5",
														"nodeType": "YulTypedName",
														"src": "912:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:5",
														"nodeType": "YulTypedName",
														"src": "924:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:5",
														"nodeType": "YulTypedName",
														"src": "932:6:5",
														"type": ""
													}
												],
												"src": "845:507:5"
											},
											{
												"body": {
													"nativeSrc": "1423:53:5",
													"nodeType": "YulBlock",
													"src": "1423:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:5"
																		},
																		"nativeSrc": "1445:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:5"
																},
																"nativeSrc": "1433:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:5"
															},
															"nativeSrc": "1433:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:5",
														"nodeType": "YulTypedName",
														"src": "1411:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:5",
														"nodeType": "YulTypedName",
														"src": "1418:3:5",
														"type": ""
													}
												],
												"src": "1358:118:5"
											},
											{
												"body": {
													"nativeSrc": "1580:124:5",
													"nodeType": "YulBlock",
													"src": "1580:124:5",
													"statements": [
														{
															"nativeSrc": "1590:26:5",
															"nodeType": "YulAssignment",
															"src": "1590:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:5"
																},
																"nativeSrc": "1598:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:5"
																		},
																		"nativeSrc": "1679:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:5"
																},
																"nativeSrc": "1626:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:5"
															},
															"nativeSrc": "1626:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:5",
														"nodeType": "YulTypedName",
														"src": "1552:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:5",
														"nodeType": "YulTypedName",
														"src": "1564:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:5",
														"nodeType": "YulTypedName",
														"src": "1575:4:5",
														"type": ""
													}
												],
												"src": "1482:222:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526103e8600455348015610015575f80fd5b506040516116ea3803806116ea83398181016040528101906100379190610265565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a8575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009f91906102b2565b60405180910390fd5b6100b78161014660201b60201c565b50600180819055508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506102cb565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102348261020b565b9050919050565b6102448161022a565b811461024e575f80fd5b50565b5f8151905061025f8161023b565b92915050565b5f806040838503121561027b5761027a610207565b5b5f61028885828601610251565b925050602061029985828601610251565b9150509250929050565b6102ac8161022a565b82525050565b5f6020820190506102c55f8301846102a3565b92915050565b611412806102d85f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80638da5cb5b11610095578063c345315311610064578063c345315314610227578063f2fde38b1461025a578063f40f0f5214610276578063f7c618c1146102a6576100f3565b80638da5cb5b146101c75780639e447fc6146101e5578063a694fc3a14610201578063b88a802f1461021d576100f3565b8063715018a6116100d1578063715018a61461016357806372f702f31461016d5780637b0a47ee1461018b578063817b1cd2146101a9576100f3565b806316934fc4146100f757806321a40589146101295780632e17de7814610147575b5f80fd5b610111600480360381019061010c9190610daa565b6102c4565b60405161012093929190610ded565b60405180910390f35b6101316102ea565b60405161013e9190610e22565b60405180910390f35b610161600480360381019061015c9190610e65565b6102f1565b005b61016b610570565b005b610175610583565b6040516101829190610eeb565b60405180910390f35b6101936105a8565b6040516101a09190610e22565b60405180910390f35b6101b16105ae565b6040516101be9190610e22565b60405180910390f35b6101cf6105b4565b6040516101dc9190610f13565b60405180910390f35b6101ff60048036038101906101fa9190610e65565b6105db565b005b61021b60048036038101906102169190610e65565b6105ed565b005b61022561081e565b005b610241600480360381019061023c9190610daa565b61096f565b6040516102519493929190610f2c565b60405180910390f35b610274600480360381019061026f9190610daa565b6109fb565b005b610290600480360381019061028b9190610daa565b610a7f565b60405161029d9190610e22565b60405180910390f35b6102ae610b1c565b6040516102bb9190610eeb565b60405180910390f35b6005602052805f5260405f205f91509050805f0154908060010154908060020154905083565b6212750081565b6102f9610b41565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f670de0b6b3a76400008361034e9190610f9c565b905080825f01541015610396576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038d90611037565b60405180910390fd5b6212750082600101546103a99190611055565b4210156103eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e2906110d2565b60405180910390fd5b6103f433610b90565b5080825f015f82825461040791906110f0565b925050819055508060065f82825461041f91906110f0565b925050819055505f825f01540361043a575f82600101819055505b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610496929190611123565b6020604051808303815f875af11580156104b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104d6919061117f565b610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c906111f4565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f758260405161055b9190610e22565b60405180910390a2505061056d610bf4565b50565b610578610bfd565b6105815f610c84565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60065481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105e3610bfd565b8060048190555050565b6105f5610b41565b5f8111610637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062e9061125c565b60405180910390fd5b5f670de0b6b3a76400008261064c9190610f9c565b905061065733610b90565b5060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106b69392919061127a565b6020604051808303815f875af11580156106d2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f6919061117f565b610735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072c906111f4565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015403610792574281600101819055504281600201819055505b81815f015f8282546107a49190611055565b925050819055508160065f8282546107bc9190611055565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d836040516108099190610e22565b60405180910390a2505061081b610bf4565b50565b610826610b41565b5f61083033610b90565b90505f8111156109645760035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610896929190611123565b6020604051808303815f875af11580156108b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108d6919061117f565b610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090c906112f9565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72418260405161095b9190610e22565b60405180910390a25b5061096d610bf4565b565b5f805f805f60055f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050670de0b6b3a7640000815f01546109ca9190611344565b81600101546212750083600101546109e29190611055565b6109eb89610a7f565b9450945094509450509193509193565b610a03610bfd565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a73575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a6a9190610f13565b60405180910390fd5b610a7c81610c84565b50565b5f8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015403610ad3575f915050610b17565b5f816002015442610ae491906110f0565b905064496cebb80081600454845f0154610afe9190610f9c565b610b089190610f9c565b610b129190611344565b925050505b919050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260015403610b86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7d906113be565b60405180910390fd5b6002600181905550565b5f80610b9b83610a7f565b90505f811115610beb574260055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600201819055505b80915050919050565b60018081905550565b610c05610d45565b73ffffffffffffffffffffffffffffffffffffffff16610c236105b4565b73ffffffffffffffffffffffffffffffffffffffff1614610c8257610c46610d45565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c799190610f13565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d7982610d50565b9050919050565b610d8981610d6f565b8114610d93575f80fd5b50565b5f81359050610da481610d80565b92915050565b5f60208284031215610dbf57610dbe610d4c565b5b5f610dcc84828501610d96565b91505092915050565b5f819050919050565b610de781610dd5565b82525050565b5f606082019050610e005f830186610dde565b610e0d6020830185610dde565b610e1a6040830184610dde565b949350505050565b5f602082019050610e355f830184610dde565b92915050565b610e4481610dd5565b8114610e4e575f80fd5b50565b5f81359050610e5f81610e3b565b92915050565b5f60208284031215610e7a57610e79610d4c565b5b5f610e8784828501610e51565b91505092915050565b5f819050919050565b5f610eb3610eae610ea984610d50565b610e90565b610d50565b9050919050565b5f610ec482610e99565b9050919050565b5f610ed582610eba565b9050919050565b610ee581610ecb565b82525050565b5f602082019050610efe5f830184610edc565b92915050565b610f0d81610d6f565b82525050565b5f602082019050610f265f830184610f04565b92915050565b5f608082019050610f3f5f830187610dde565b610f4c6020830186610dde565b610f596040830185610dde565b610f666060830184610dde565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610fa682610dd5565b9150610fb183610dd5565b9250828202610fbf81610dd5565b91508282048414831517610fd657610fd5610f6f565b5b5092915050565b5f82825260208201905092915050565b7f496e73756666696369656e74207374616b656420616d6f756e740000000000005f82015250565b5f611021601a83610fdd565b915061102c82610fed565b602082019050919050565b5f6020820190508181035f83015261104e81611015565b9050919050565b5f61105f82610dd5565b915061106a83610dd5565b925082820190508082111561108257611081610f6f565b5b92915050565b7f4c6f636b20706572696f64206e6f7420656e64656400000000000000000000005f82015250565b5f6110bc601583610fdd565b91506110c782611088565b602082019050919050565b5f6020820190508181035f8301526110e9816110b0565b9050919050565b5f6110fa82610dd5565b915061110583610dd5565b925082820390508181111561111d5761111c610f6f565b5b92915050565b5f6040820190506111365f830185610f04565b6111436020830184610dde565b9392505050565b5f8115159050919050565b61115e8161114a565b8114611168575f80fd5b50565b5f8151905061117981611155565b92915050565b5f6020828403121561119457611193610d4c565b5b5f6111a18482850161116b565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f6111de600f83610fdd565b91506111e9826111aa565b602082019050919050565b5f6020820190508181035f83015261120b816111d2565b9050919050565b7f43616e6e6f74207374616b6520300000000000000000000000000000000000005f82015250565b5f611246600e83610fdd565b915061125182611212565b602082019050919050565b5f6020820190508181035f8301526112738161123a565b9050919050565b5f60608201905061128d5f830186610f04565b61129a6020830185610f04565b6112a76040830184610dde565b949350505050565b7f526577617264207472616e73666572206661696c6564000000000000000000005f82015250565b5f6112e3601683610fdd565b91506112ee826112af565b602082019050919050565b5f6020820190508181035f830152611310816112d7565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61134e82610dd5565b915061135983610dd5565b92508261136957611368611317565b5b828204905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6113a8601f83610fdd565b91506113b382611374565b602082019050919050565b5f6020820190508181035f8301526113d58161139c565b905091905056fea26469706673582212203679cd24df9016be778c4f68134a152a379d741cc8e9a8cf715aee02761897d364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x3E8 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x16EA CODESIZE SUB DUP1 PUSH2 0x16EA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x37 SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB7 DUP2 PUSH2 0x146 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x2CB JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x234 DUP3 PUSH2 0x20B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x244 DUP2 PUSH2 0x22A JUMP JUMPDEST DUP2 EQ PUSH2 0x24E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25F DUP2 PUSH2 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27B JUMPI PUSH2 0x27A PUSH2 0x207 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x288 DUP6 DUP3 DUP7 ADD PUSH2 0x251 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x299 DUP6 DUP3 DUP7 ADD PUSH2 0x251 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC DUP2 PUSH2 0x22A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C5 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1412 DUP1 PUSH2 0x2D8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC3453153 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC3453153 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xF40F0F52 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x2A6 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x21D JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1A9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x21A40589 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x2F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH2 0x570 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x583 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x225 PUSH2 0x81E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x9FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH3 0x127500 DUP2 JUMP JUMPDEST PUSH2 0x2F9 PUSH2 0xB41 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38D SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x127500 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F4 CALLER PUSH2 0xB90 JUMP JUMPDEST POP DUP1 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH0 ADD SLOAD SUB PUSH2 0x43A JUMPI PUSH0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x496 SWAP3 SWAP2 SWAP1 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50C SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP3 PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x56D PUSH2 0xBF4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x578 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x581 PUSH0 PUSH2 0xC84 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5E3 PUSH2 0xBFD JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x5F5 PUSH2 0xB41 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x64C SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST SWAP1 POP PUSH2 0x657 CALLER PUSH2 0xB90 JUMP JUMPDEST POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0x792 JUMPI TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7BC SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0x809 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x81B PUSH2 0xBF4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x826 PUSH2 0xB41 JUMP JUMPDEST PUSH0 PUSH2 0x830 CALLER PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x964 JUMPI PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x896 SWAP3 SWAP2 SWAP1 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D6 SWAP2 SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x95B SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP PUSH2 0x96D PUSH2 0xBF4 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH0 ADD SLOAD PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x1344 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD PUSH3 0x127500 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x9E2 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0x9EB DUP10 PUSH2 0xA7F JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH2 0xA03 PUSH2 0xBFD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA73 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7C DUP2 PUSH2 0xC84 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0xAD3 JUMPI PUSH0 SWAP2 POP POP PUSH2 0xB17 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xAE4 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP PUSH5 0x496CEBB800 DUP2 PUSH1 0x4 SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x1344 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7D SWAP1 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB9B DUP4 PUSH2 0xA7F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xBEB JUMPI TIMESTAMP PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xC05 PUSH2 0xD45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC23 PUSH2 0x5B4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC82 JUMPI PUSH2 0xC46 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC79 SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD79 DUP3 PUSH2 0xD50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD89 DUP2 PUSH2 0xD6F JUMP JUMPDEST DUP2 EQ PUSH2 0xD93 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDA4 DUP2 PUSH2 0xD80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBF JUMPI PUSH2 0xDBE PUSH2 0xD4C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDCC DUP5 DUP3 DUP6 ADD PUSH2 0xD96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE7 DUP2 PUSH2 0xDD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE00 PUSH0 DUP4 ADD DUP7 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xE0D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xE1A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE35 PUSH0 DUP4 ADD DUP5 PUSH2 0xDDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE44 DUP2 PUSH2 0xDD5 JUMP JUMPDEST DUP2 EQ PUSH2 0xE4E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5F DUP2 PUSH2 0xE3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7A JUMPI PUSH2 0xE79 PUSH2 0xD4C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE87 DUP5 DUP3 DUP6 ADD PUSH2 0xE51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEB3 PUSH2 0xEAE PUSH2 0xEA9 DUP5 PUSH2 0xD50 JUMP JUMPDEST PUSH2 0xE90 JUMP JUMPDEST PUSH2 0xD50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEC4 DUP3 PUSH2 0xE99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xED5 DUP3 PUSH2 0xEBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE5 DUP2 PUSH2 0xECB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFE PUSH0 DUP4 ADD DUP5 PUSH2 0xEDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF0D DUP2 PUSH2 0xD6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF26 PUSH0 DUP4 ADD DUP5 PUSH2 0xF04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xF3F PUSH0 DUP4 ADD DUP8 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xF4C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xF59 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xF66 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xDDE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xFA6 DUP3 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xFB1 DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xFBF DUP2 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xFD6 JUMPI PUSH2 0xFD5 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B656420616D6F756E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1021 PUSH1 0x1A DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP2 POP PUSH2 0x102C DUP3 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x104E DUP2 PUSH2 0x1015 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x105F DUP3 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x106A DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1082 JUMPI PUSH2 0x1081 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6F636B20706572696F64206E6F7420656E6465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10BC PUSH1 0x15 DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP2 POP PUSH2 0x10C7 DUP3 PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10E9 DUP2 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10FA DUP3 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1105 DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x111D JUMPI PUSH2 0x111C PUSH2 0xF6F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1136 PUSH0 DUP4 ADD DUP6 PUSH2 0xF04 JUMP JUMPDEST PUSH2 0x1143 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDDE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x115E DUP2 PUSH2 0x114A JUMP JUMPDEST DUP2 EQ PUSH2 0x1168 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1179 DUP2 PUSH2 0x1155 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1194 JUMPI PUSH2 0x1193 PUSH2 0xD4C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11A1 DUP5 DUP3 DUP6 ADD PUSH2 0x116B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11DE PUSH1 0xF DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP2 POP PUSH2 0x11E9 DUP3 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x120B DUP2 PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1246 PUSH1 0xE DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP2 POP PUSH2 0x1251 DUP3 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1273 DUP2 PUSH2 0x123A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x128D PUSH0 DUP4 ADD DUP7 PUSH2 0xF04 JUMP JUMPDEST PUSH2 0x129A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF04 JUMP JUMPDEST PUSH2 0x12A7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x526577617264207472616E73666572206661696C656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12E3 PUSH1 0x16 DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP2 POP PUSH2 0x12EE DUP3 PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1310 DUP2 PUSH2 0x12D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x134E DUP3 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1359 DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1369 JUMPI PUSH2 0x1368 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13A8 PUSH1 0x1F DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP2 POP PUSH2 0x13B3 DUP3 PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13D5 DUP2 PUSH2 0x139C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH26 0xCD24DF9016BE778C4F68134A152A379D741CC8E9A8CF715AEE02 PUSH23 0x1897D364736F6C634300081A0033000000000000000000 ",
							"sourceMap": "240:5928:4:-:0;;;652:4;624:32;;1260:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1325:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:1;1821:7;:22;;;;1370:13:4::1;1348:12;;:36;;;;;;;;;;;;;;;;;;1416:12;1395:11;;:34;;;;;;;;;;;;;;;;;;1260:177:::0;;240:5928;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;240:5928:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MINIMUM_LOCK_PERIOD_338": {
									"entryPoint": 746,
									"id": 338,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3069,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_302": {
									"entryPoint": 3397,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 3060,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 2881,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3204,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateReward_677": {
									"entryPoint": 2960,
									"id": 677,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimReward_602": {
									"entryPoint": 2078,
									"id": 602,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getStakeInfo_727": {
									"entryPoint": 2415,
									"id": 727,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@owner_67": {
									"entryPoint": 1460,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingReward_647": {
									"entryPoint": 2687,
									"id": 647,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1392,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardRate_341": {
									"entryPoint": 1448,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_335": {
									"entryPoint": 2844,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRewardRate_690": {
									"entryPoint": 1499,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_482": {
									"entryPoint": 1517,
									"id": 482,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_353": {
									"entryPoint": 708,
									"id": 353,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingToken_332": {
									"entryPoint": 1411,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_355": {
									"entryPoint": 1454,
									"id": 355,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2555,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_567": {
									"entryPoint": 753,
									"id": 567,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack": {
									"entryPoint": 3804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4730,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4387,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3884,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$290_to_t_address": {
									"entryPoint": 3787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16": {
									"entryPoint": 4077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157": {
									"entryPoint": 4232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce": {
									"entryPoint": 4783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13384:5",
										"nodeType": "YulBlock",
										"src": "0:13384:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "907:263:5",
													"nodeType": "YulBlock",
													"src": "907:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:5",
																"nodeType": "YulBlock",
																"src": "953:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:5"
																			},
																			"nativeSrc": "955:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:5"
																		},
																		"nativeSrc": "955:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:5"
																		},
																		"nativeSrc": "924:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:5",
																		"nodeType": "YulLiteral",
																		"src": "949:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:5"
																},
																"nativeSrc": "920:32:5",
																"nodeType": "YulFunctionCall",
																"src": "920:32:5"
															},
															"nativeSrc": "917:119:5",
															"nodeType": "YulIf",
															"src": "917:119:5"
														},
														{
															"nativeSrc": "1046:117:5",
															"nodeType": "YulBlock",
															"src": "1046:117:5",
															"statements": [
																{
																	"nativeSrc": "1061:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:5"
																				},
																				"nativeSrc": "1121:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:5"
																		},
																		"nativeSrc": "1100:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:5",
														"nodeType": "YulTypedName",
														"src": "877:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:5",
														"nodeType": "YulTypedName",
														"src": "888:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:5",
														"nodeType": "YulTypedName",
														"src": "900:6:5",
														"type": ""
													}
												],
												"src": "841:329:5"
											},
											{
												"body": {
													"nativeSrc": "1221:32:5",
													"nodeType": "YulBlock",
													"src": "1221:32:5",
													"statements": [
														{
															"nativeSrc": "1231:16:5",
															"nodeType": "YulAssignment",
															"src": "1231:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:5",
																"nodeType": "YulIdentifier",
																"src": "1242:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:5",
														"nodeType": "YulTypedName",
														"src": "1203:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:5",
														"nodeType": "YulTypedName",
														"src": "1213:7:5",
														"type": ""
													}
												],
												"src": "1176:77:5"
											},
											{
												"body": {
													"nativeSrc": "1324:53:5",
													"nodeType": "YulBlock",
													"src": "1324:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:5"
																		},
																		"nativeSrc": "1346:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:5"
																},
																"nativeSrc": "1334:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:5"
															},
															"nativeSrc": "1334:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:5",
														"nodeType": "YulTypedName",
														"src": "1312:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:5",
														"nodeType": "YulTypedName",
														"src": "1319:3:5",
														"type": ""
													}
												],
												"src": "1259:118:5"
											},
											{
												"body": {
													"nativeSrc": "1537:288:5",
													"nodeType": "YulBlock",
													"src": "1537:288:5",
													"statements": [
														{
															"nativeSrc": "1547:26:5",
															"nodeType": "YulAssignment",
															"src": "1547:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1559:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1570:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1555:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:5"
																},
																"nativeSrc": "1555:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1555:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1547:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1547:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1627:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:5"
																		},
																		"nativeSrc": "1636:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1583:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1583:43:5"
																},
																"nativeSrc": "1583:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1583:71:5"
															},
															"nativeSrc": "1583:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1583:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1708:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1721:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1721:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1732:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1732:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1717:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1717:3:5"
																		},
																		"nativeSrc": "1717:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1717:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1664:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1664:43:5"
																},
																"nativeSrc": "1664:72:5",
																"nodeType": "YulFunctionCall",
																"src": "1664:72:5"
															},
															"nativeSrc": "1664:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "1664:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "1790:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1803:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1803:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1814:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1814:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1799:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:5"
																		},
																		"nativeSrc": "1799:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1746:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1746:43:5"
																},
																"nativeSrc": "1746:72:5",
																"nodeType": "YulFunctionCall",
																"src": "1746:72:5"
															},
															"nativeSrc": "1746:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "1746:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1493:9:5",
														"nodeType": "YulTypedName",
														"src": "1493:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1505:6:5",
														"nodeType": "YulTypedName",
														"src": "1505:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1513:6:5",
														"nodeType": "YulTypedName",
														"src": "1513:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1521:6:5",
														"nodeType": "YulTypedName",
														"src": "1521:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1532:4:5",
														"nodeType": "YulTypedName",
														"src": "1532:4:5",
														"type": ""
													}
												],
												"src": "1383:442:5"
											},
											{
												"body": {
													"nativeSrc": "1929:124:5",
													"nodeType": "YulBlock",
													"src": "1929:124:5",
													"statements": [
														{
															"nativeSrc": "1939:26:5",
															"nodeType": "YulAssignment",
															"src": "1939:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1951:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1951:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1962:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1962:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1947:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1947:3:5"
																},
																"nativeSrc": "1947:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1947:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1939:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1939:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2019:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2019:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2032:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2032:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2043:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2043:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2028:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:5"
																		},
																		"nativeSrc": "2028:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2028:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1975:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1975:43:5"
																},
																"nativeSrc": "1975:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1975:71:5"
															},
															"nativeSrc": "1975:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1975:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1831:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1901:9:5",
														"nodeType": "YulTypedName",
														"src": "1901:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1913:6:5",
														"nodeType": "YulTypedName",
														"src": "1913:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1924:4:5",
														"nodeType": "YulTypedName",
														"src": "1924:4:5",
														"type": ""
													}
												],
												"src": "1831:222:5"
											},
											{
												"body": {
													"nativeSrc": "2102:79:5",
													"nodeType": "YulBlock",
													"src": "2102:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2159:16:5",
																"nodeType": "YulBlock",
																"src": "2159:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2168:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2168:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2171:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2171:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2161:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2161:6:5"
																			},
																			"nativeSrc": "2161:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2161:12:5"
																		},
																		"nativeSrc": "2161:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2161:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2125:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2125:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2150:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2150:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2132:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2132:17:5"
																				},
																				"nativeSrc": "2132:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2132:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2122:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2122:2:5"
																		},
																		"nativeSrc": "2122:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2115:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2115:6:5"
																},
																"nativeSrc": "2115:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2115:43:5"
															},
															"nativeSrc": "2112:63:5",
															"nodeType": "YulIf",
															"src": "2112:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2059:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2095:5:5",
														"nodeType": "YulTypedName",
														"src": "2095:5:5",
														"type": ""
													}
												],
												"src": "2059:122:5"
											},
											{
												"body": {
													"nativeSrc": "2239:87:5",
													"nodeType": "YulBlock",
													"src": "2239:87:5",
													"statements": [
														{
															"nativeSrc": "2249:29:5",
															"nodeType": "YulAssignment",
															"src": "2249:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2271:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2271:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2258:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2258:12:5"
																},
																"nativeSrc": "2258:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2258:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2249:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2249:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2314:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2314:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2287:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2287:26:5"
																},
																"nativeSrc": "2287:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2287:33:5"
															},
															"nativeSrc": "2287:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2287:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2187:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2217:6:5",
														"nodeType": "YulTypedName",
														"src": "2217:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2225:3:5",
														"nodeType": "YulTypedName",
														"src": "2225:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2233:5:5",
														"nodeType": "YulTypedName",
														"src": "2233:5:5",
														"type": ""
													}
												],
												"src": "2187:139:5"
											},
											{
												"body": {
													"nativeSrc": "2398:263:5",
													"nodeType": "YulBlock",
													"src": "2398:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2444:83:5",
																"nodeType": "YulBlock",
																"src": "2444:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2446:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2446:77:5"
																			},
																			"nativeSrc": "2446:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2446:79:5"
																		},
																		"nativeSrc": "2446:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2446:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2419:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2419:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2428:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2428:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2415:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2415:3:5"
																		},
																		"nativeSrc": "2415:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2415:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2440:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2440:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2411:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2411:3:5"
																},
																"nativeSrc": "2411:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2411:32:5"
															},
															"nativeSrc": "2408:119:5",
															"nodeType": "YulIf",
															"src": "2408:119:5"
														},
														{
															"nativeSrc": "2537:117:5",
															"nodeType": "YulBlock",
															"src": "2537:117:5",
															"statements": [
																{
																	"nativeSrc": "2552:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2552:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2566:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2566:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2556:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2556:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2581:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2581:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2616:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2616:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2627:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2627:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2612:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2612:3:5"
																				},
																				"nativeSrc": "2612:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2612:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2636:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2636:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2591:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2591:20:5"
																		},
																		"nativeSrc": "2591:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2591:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2581:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2581:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2332:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2368:9:5",
														"nodeType": "YulTypedName",
														"src": "2368:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2379:7:5",
														"nodeType": "YulTypedName",
														"src": "2379:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2391:6:5",
														"nodeType": "YulTypedName",
														"src": "2391:6:5",
														"type": ""
													}
												],
												"src": "2332:329:5"
											},
											{
												"body": {
													"nativeSrc": "2699:28:5",
													"nodeType": "YulBlock",
													"src": "2699:28:5",
													"statements": [
														{
															"nativeSrc": "2709:12:5",
															"nodeType": "YulAssignment",
															"src": "2709:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "2716:5:5",
																"nodeType": "YulIdentifier",
																"src": "2716:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2709:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2667:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2685:5:5",
														"nodeType": "YulTypedName",
														"src": "2685:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2695:3:5",
														"nodeType": "YulTypedName",
														"src": "2695:3:5",
														"type": ""
													}
												],
												"src": "2667:60:5"
											},
											{
												"body": {
													"nativeSrc": "2793:82:5",
													"nodeType": "YulBlock",
													"src": "2793:82:5",
													"statements": [
														{
															"nativeSrc": "2803:66:5",
															"nodeType": "YulAssignment",
															"src": "2803:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2861:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2861:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2843:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2843:17:5"
																				},
																				"nativeSrc": "2843:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2843:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2834:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "2834:8:5"
																		},
																		"nativeSrc": "2834:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2834:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2816:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2816:17:5"
																},
																"nativeSrc": "2816:53:5",
																"nodeType": "YulFunctionCall",
																"src": "2816:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2803:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2803:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2733:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2773:5:5",
														"nodeType": "YulTypedName",
														"src": "2773:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2783:9:5",
														"nodeType": "YulTypedName",
														"src": "2783:9:5",
														"type": ""
													}
												],
												"src": "2733:142:5"
											},
											{
												"body": {
													"nativeSrc": "2941:66:5",
													"nodeType": "YulBlock",
													"src": "2941:66:5",
													"statements": [
														{
															"nativeSrc": "2951:50:5",
															"nodeType": "YulAssignment",
															"src": "2951:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2995:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2995:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2964:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2964:30:5"
																},
																"nativeSrc": "2964:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2964:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2951:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2951:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2881:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2921:5:5",
														"nodeType": "YulTypedName",
														"src": "2921:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2931:9:5",
														"nodeType": "YulTypedName",
														"src": "2931:9:5",
														"type": ""
													}
												],
												"src": "2881:126:5"
											},
											{
												"body": {
													"nativeSrc": "3087:66:5",
													"nodeType": "YulBlock",
													"src": "3087:66:5",
													"statements": [
														{
															"nativeSrc": "3097:50:5",
															"nodeType": "YulAssignment",
															"src": "3097:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3141:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3141:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3110:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3110:30:5"
																},
																"nativeSrc": "3110:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3110:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3097:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3097:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$290_to_t_address",
												"nativeSrc": "3013:140:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3067:5:5",
														"nodeType": "YulTypedName",
														"src": "3067:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3077:9:5",
														"nodeType": "YulTypedName",
														"src": "3077:9:5",
														"type": ""
													}
												],
												"src": "3013:140:5"
											},
											{
												"body": {
													"nativeSrc": "3238:80:5",
													"nodeType": "YulBlock",
													"src": "3238:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3255:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3255:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3305:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3305:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$290_to_t_address",
																			"nativeSrc": "3260:44:5",
																			"nodeType": "YulIdentifier",
																			"src": "3260:44:5"
																		},
																		"nativeSrc": "3260:51:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3260:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3248:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3248:6:5"
																},
																"nativeSrc": "3248:64:5",
																"nodeType": "YulFunctionCall",
																"src": "3248:64:5"
															},
															"nativeSrc": "3248:64:5",
															"nodeType": "YulExpressionStatement",
															"src": "3248:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
												"nativeSrc": "3159:159:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3226:5:5",
														"nodeType": "YulTypedName",
														"src": "3226:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3233:3:5",
														"nodeType": "YulTypedName",
														"src": "3233:3:5",
														"type": ""
													}
												],
												"src": "3159:159:5"
											},
											{
												"body": {
													"nativeSrc": "3436:138:5",
													"nodeType": "YulBlock",
													"src": "3436:138:5",
													"statements": [
														{
															"nativeSrc": "3446:26:5",
															"nodeType": "YulAssignment",
															"src": "3446:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3458:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3458:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3469:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3469:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3454:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3454:3:5"
																},
																"nativeSrc": "3454:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3454:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3446:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3446:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3540:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3540:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3553:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3553:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3564:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3564:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3549:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3549:3:5"
																		},
																		"nativeSrc": "3549:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3549:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
																	"nativeSrc": "3482:57:5",
																	"nodeType": "YulIdentifier",
																	"src": "3482:57:5"
																},
																"nativeSrc": "3482:85:5",
																"nodeType": "YulFunctionCall",
																"src": "3482:85:5"
															},
															"nativeSrc": "3482:85:5",
															"nodeType": "YulExpressionStatement",
															"src": "3482:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed",
												"nativeSrc": "3324:250:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3408:9:5",
														"nodeType": "YulTypedName",
														"src": "3408:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3420:6:5",
														"nodeType": "YulTypedName",
														"src": "3420:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3431:4:5",
														"nodeType": "YulTypedName",
														"src": "3431:4:5",
														"type": ""
													}
												],
												"src": "3324:250:5"
											},
											{
												"body": {
													"nativeSrc": "3645:53:5",
													"nodeType": "YulBlock",
													"src": "3645:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3662:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3662:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3685:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3685:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3667:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3667:17:5"
																		},
																		"nativeSrc": "3667:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3667:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3655:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3655:6:5"
																},
																"nativeSrc": "3655:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3655:37:5"
															},
															"nativeSrc": "3655:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3655:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3580:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3633:5:5",
														"nodeType": "YulTypedName",
														"src": "3633:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3640:3:5",
														"nodeType": "YulTypedName",
														"src": "3640:3:5",
														"type": ""
													}
												],
												"src": "3580:118:5"
											},
											{
												"body": {
													"nativeSrc": "3802:124:5",
													"nodeType": "YulBlock",
													"src": "3802:124:5",
													"statements": [
														{
															"nativeSrc": "3812:26:5",
															"nodeType": "YulAssignment",
															"src": "3812:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3824:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3824:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3835:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3835:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3820:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3820:3:5"
																},
																"nativeSrc": "3820:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3820:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3812:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3812:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3892:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3892:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3905:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3916:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3916:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3901:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:5"
																		},
																		"nativeSrc": "3901:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3848:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3848:43:5"
																},
																"nativeSrc": "3848:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3848:71:5"
															},
															"nativeSrc": "3848:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3848:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3704:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3774:9:5",
														"nodeType": "YulTypedName",
														"src": "3774:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3786:6:5",
														"nodeType": "YulTypedName",
														"src": "3786:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3797:4:5",
														"nodeType": "YulTypedName",
														"src": "3797:4:5",
														"type": ""
													}
												],
												"src": "3704:222:5"
											},
											{
												"body": {
													"nativeSrc": "4114:371:5",
													"nodeType": "YulBlock",
													"src": "4114:371:5",
													"statements": [
														{
															"nativeSrc": "4124:27:5",
															"nodeType": "YulAssignment",
															"src": "4124:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4136:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4136:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4147:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4147:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4132:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4132:3:5"
																},
																"nativeSrc": "4132:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4132:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4124:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4124:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4205:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4205:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4218:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4218:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4229:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4229:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4214:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4214:3:5"
																		},
																		"nativeSrc": "4214:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4214:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4161:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4161:43:5"
																},
																"nativeSrc": "4161:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4161:71:5"
															},
															"nativeSrc": "4161:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4161:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4286:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4286:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4299:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4299:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4310:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4310:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4295:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4295:3:5"
																		},
																		"nativeSrc": "4295:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4295:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4242:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4242:43:5"
																},
																"nativeSrc": "4242:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4242:72:5"
															},
															"nativeSrc": "4242:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4242:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4368:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4368:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4381:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4381:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4392:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4392:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4377:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:5"
																		},
																		"nativeSrc": "4377:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4377:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4324:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4324:43:5"
																},
																"nativeSrc": "4324:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4324:72:5"
															},
															"nativeSrc": "4324:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4324:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4450:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4450:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4463:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4463:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4474:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4474:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4459:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4459:3:5"
																		},
																		"nativeSrc": "4459:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4459:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4406:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4406:43:5"
																},
																"nativeSrc": "4406:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4406:72:5"
															},
															"nativeSrc": "4406:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4406:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3932:553:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4062:9:5",
														"nodeType": "YulTypedName",
														"src": "4062:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4074:6:5",
														"nodeType": "YulTypedName",
														"src": "4074:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4082:6:5",
														"nodeType": "YulTypedName",
														"src": "4082:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4090:6:5",
														"nodeType": "YulTypedName",
														"src": "4090:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4098:6:5",
														"nodeType": "YulTypedName",
														"src": "4098:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4109:4:5",
														"nodeType": "YulTypedName",
														"src": "4109:4:5",
														"type": ""
													}
												],
												"src": "3932:553:5"
											},
											{
												"body": {
													"nativeSrc": "4519:152:5",
													"nodeType": "YulBlock",
													"src": "4519:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4536:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4536:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4539:77:5",
																		"nodeType": "YulLiteral",
																		"src": "4539:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4529:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:5"
																},
																"nativeSrc": "4529:88:5",
																"nodeType": "YulFunctionCall",
																"src": "4529:88:5"
															},
															"nativeSrc": "4529:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "4529:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4633:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4633:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4636:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4636:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4626:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4626:6:5"
																},
																"nativeSrc": "4626:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4626:15:5"
															},
															"nativeSrc": "4626:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4626:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4657:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4657:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4660:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4660:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4650:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4650:6:5"
																},
																"nativeSrc": "4650:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4650:15:5"
															},
															"nativeSrc": "4650:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4650:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4491:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "4491:180:5"
											},
											{
												"body": {
													"nativeSrc": "4725:362:5",
													"nodeType": "YulBlock",
													"src": "4725:362:5",
													"statements": [
														{
															"nativeSrc": "4735:25:5",
															"nodeType": "YulAssignment",
															"src": "4735:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4758:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4758:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4740:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4740:17:5"
																},
																"nativeSrc": "4740:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4740:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4735:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4735:1:5"
																}
															]
														},
														{
															"nativeSrc": "4769:25:5",
															"nodeType": "YulAssignment",
															"src": "4769:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4792:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4792:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4774:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4774:17:5"
																},
																"nativeSrc": "4774:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4774:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4769:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4769:1:5"
																}
															]
														},
														{
															"nativeSrc": "4803:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4803:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4826:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4826:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4829:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4829:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4822:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4822:3:5"
																},
																"nativeSrc": "4822:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4822:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4807:11:5",
																	"nodeType": "YulTypedName",
																	"src": "4807:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4840:41:5",
															"nodeType": "YulAssignment",
															"src": "4840:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4869:11:5",
																		"nodeType": "YulIdentifier",
																		"src": "4869:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4851:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4851:17:5"
																},
																"nativeSrc": "4851:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4851:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4840:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4840:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5058:22:5",
																"nodeType": "YulBlock",
																"src": "5058:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5060:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "5060:16:5"
																			},
																			"nativeSrc": "5060:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5060:18:5"
																		},
																		"nativeSrc": "5060:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5060:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4991:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "4991:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4984:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "4984:6:5"
																				},
																				"nativeSrc": "4984:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4984:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5014:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "5014:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5021:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "5021:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5030:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "5030:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5017:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "5017:3:5"
																						},
																						"nativeSrc": "5017:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "5017:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5011:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "5011:2:5"
																				},
																				"nativeSrc": "5011:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5011:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4964:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4964:2:5"
																		},
																		"nativeSrc": "4964:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4964:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4944:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4944:6:5"
																},
																"nativeSrc": "4944:113:5",
																"nodeType": "YulFunctionCall",
																"src": "4944:113:5"
															},
															"nativeSrc": "4941:139:5",
															"nodeType": "YulIf",
															"src": "4941:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4677:410:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4708:1:5",
														"nodeType": "YulTypedName",
														"src": "4708:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4711:1:5",
														"nodeType": "YulTypedName",
														"src": "4711:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4717:7:5",
														"nodeType": "YulTypedName",
														"src": "4717:7:5",
														"type": ""
													}
												],
												"src": "4677:410:5"
											},
											{
												"body": {
													"nativeSrc": "5189:73:5",
													"nodeType": "YulBlock",
													"src": "5189:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5206:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5206:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5211:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5211:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5199:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:5"
																},
																"nativeSrc": "5199:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5199:19:5"
															},
															"nativeSrc": "5199:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "5199:19:5"
														},
														{
															"nativeSrc": "5227:29:5",
															"nodeType": "YulAssignment",
															"src": "5227:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5246:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5246:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5251:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5251:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5242:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5242:3:5"
																},
																"nativeSrc": "5242:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5242:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5227:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "5227:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5093:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5161:3:5",
														"nodeType": "YulTypedName",
														"src": "5161:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5166:6:5",
														"nodeType": "YulTypedName",
														"src": "5166:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5177:11:5",
														"nodeType": "YulTypedName",
														"src": "5177:11:5",
														"type": ""
													}
												],
												"src": "5093:169:5"
											},
											{
												"body": {
													"nativeSrc": "5374:70:5",
													"nodeType": "YulBlock",
													"src": "5374:70:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5396:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5396:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5404:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5404:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5392:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5392:3:5"
																		},
																		"nativeSrc": "5392:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5392:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b656420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "5408:28:5",
																		"nodeType": "YulLiteral",
																		"src": "5408:28:5",
																		"type": "",
																		"value": "Insufficient staked amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5385:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5385:6:5"
																},
																"nativeSrc": "5385:52:5",
																"nodeType": "YulFunctionCall",
																"src": "5385:52:5"
															},
															"nativeSrc": "5385:52:5",
															"nodeType": "YulExpressionStatement",
															"src": "5385:52:5"
														}
													]
												},
												"name": "store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
												"nativeSrc": "5268:176:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5366:6:5",
														"nodeType": "YulTypedName",
														"src": "5366:6:5",
														"type": ""
													}
												],
												"src": "5268:176:5"
											},
											{
												"body": {
													"nativeSrc": "5596:220:5",
													"nodeType": "YulBlock",
													"src": "5596:220:5",
													"statements": [
														{
															"nativeSrc": "5606:74:5",
															"nodeType": "YulAssignment",
															"src": "5606:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5672:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5672:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5677:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5677:2:5",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5613:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5613:58:5"
																},
																"nativeSrc": "5613:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5613:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5606:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5606:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5778:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5778:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
																	"nativeSrc": "5689:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5689:88:5"
																},
																"nativeSrc": "5689:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5689:93:5"
															},
															"nativeSrc": "5689:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5689:93:5"
														},
														{
															"nativeSrc": "5791:19:5",
															"nodeType": "YulAssignment",
															"src": "5791:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5802:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5802:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5807:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5807:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5798:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5798:3:5"
																},
																"nativeSrc": "5798:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5798:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5791:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5791:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5450:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5584:3:5",
														"nodeType": "YulTypedName",
														"src": "5584:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5592:3:5",
														"nodeType": "YulTypedName",
														"src": "5592:3:5",
														"type": ""
													}
												],
												"src": "5450:366:5"
											},
											{
												"body": {
													"nativeSrc": "5993:248:5",
													"nodeType": "YulBlock",
													"src": "5993:248:5",
													"statements": [
														{
															"nativeSrc": "6003:26:5",
															"nodeType": "YulAssignment",
															"src": "6003:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6015:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6015:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6026:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6026:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6011:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6011:3:5"
																},
																"nativeSrc": "6011:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6011:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6003:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6003:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6050:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6050:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6061:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6061:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6046:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6046:3:5"
																		},
																		"nativeSrc": "6046:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6046:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6069:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6069:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6075:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6075:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6065:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6065:3:5"
																		},
																		"nativeSrc": "6065:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6065:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6039:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6039:6:5"
																},
																"nativeSrc": "6039:47:5",
																"nodeType": "YulFunctionCall",
																"src": "6039:47:5"
															},
															"nativeSrc": "6039:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "6039:47:5"
														},
														{
															"nativeSrc": "6095:139:5",
															"nodeType": "YulAssignment",
															"src": "6095:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6229:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6229:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6103:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "6103:124:5"
																},
																"nativeSrc": "6103:131:5",
																"nodeType": "YulFunctionCall",
																"src": "6103:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6095:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6095:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5822:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5973:9:5",
														"nodeType": "YulTypedName",
														"src": "5973:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5988:4:5",
														"nodeType": "YulTypedName",
														"src": "5988:4:5",
														"type": ""
													}
												],
												"src": "5822:419:5"
											},
											{
												"body": {
													"nativeSrc": "6291:147:5",
													"nodeType": "YulBlock",
													"src": "6291:147:5",
													"statements": [
														{
															"nativeSrc": "6301:25:5",
															"nodeType": "YulAssignment",
															"src": "6301:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6324:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6324:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6306:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6306:17:5"
																},
																"nativeSrc": "6306:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6306:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6301:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6301:1:5"
																}
															]
														},
														{
															"nativeSrc": "6335:25:5",
															"nodeType": "YulAssignment",
															"src": "6335:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6358:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6358:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6340:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6340:17:5"
																},
																"nativeSrc": "6340:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6340:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6335:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6335:1:5"
																}
															]
														},
														{
															"nativeSrc": "6369:16:5",
															"nodeType": "YulAssignment",
															"src": "6369:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6380:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6380:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6383:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6383:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6376:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6376:3:5"
																},
																"nativeSrc": "6376:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6376:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6369:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6369:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6409:22:5",
																"nodeType": "YulBlock",
																"src": "6409:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6411:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6411:16:5"
																			},
																			"nativeSrc": "6411:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6411:18:5"
																		},
																		"nativeSrc": "6411:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6411:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6401:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6401:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6404:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6404:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6398:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6398:2:5"
																},
																"nativeSrc": "6398:10:5",
																"nodeType": "YulFunctionCall",
																"src": "6398:10:5"
															},
															"nativeSrc": "6395:36:5",
															"nodeType": "YulIf",
															"src": "6395:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6247:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6278:1:5",
														"nodeType": "YulTypedName",
														"src": "6278:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6281:1:5",
														"nodeType": "YulTypedName",
														"src": "6281:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6287:3:5",
														"nodeType": "YulTypedName",
														"src": "6287:3:5",
														"type": ""
													}
												],
												"src": "6247:191:5"
											},
											{
												"body": {
													"nativeSrc": "6550:65:5",
													"nodeType": "YulBlock",
													"src": "6550:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6572:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6572:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6580:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6580:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6568:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6568:3:5"
																		},
																		"nativeSrc": "6568:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6568:14:5"
																	},
																	{
																		"hexValue": "4c6f636b20706572696f64206e6f7420656e646564",
																		"kind": "string",
																		"nativeSrc": "6584:23:5",
																		"nodeType": "YulLiteral",
																		"src": "6584:23:5",
																		"type": "",
																		"value": "Lock period not ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6561:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6561:6:5"
																},
																"nativeSrc": "6561:47:5",
																"nodeType": "YulFunctionCall",
																"src": "6561:47:5"
															},
															"nativeSrc": "6561:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "6561:47:5"
														}
													]
												},
												"name": "store_literal_in_memory_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157",
												"nativeSrc": "6444:171:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6542:6:5",
														"nodeType": "YulTypedName",
														"src": "6542:6:5",
														"type": ""
													}
												],
												"src": "6444:171:5"
											},
											{
												"body": {
													"nativeSrc": "6767:220:5",
													"nodeType": "YulBlock",
													"src": "6767:220:5",
													"statements": [
														{
															"nativeSrc": "6777:74:5",
															"nodeType": "YulAssignment",
															"src": "6777:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6843:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6843:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6848:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6848:2:5",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6784:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6784:58:5"
																},
																"nativeSrc": "6784:67:5",
																"nodeType": "YulFunctionCall",
																"src": "6784:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6777:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6777:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6949:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6949:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157",
																	"nativeSrc": "6860:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6860:88:5"
																},
																"nativeSrc": "6860:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6860:93:5"
															},
															"nativeSrc": "6860:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6860:93:5"
														},
														{
															"nativeSrc": "6962:19:5",
															"nodeType": "YulAssignment",
															"src": "6962:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6973:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6973:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6978:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6978:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6969:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6969:3:5"
																},
																"nativeSrc": "6969:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6969:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6962:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6962:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6621:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6755:3:5",
														"nodeType": "YulTypedName",
														"src": "6755:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6763:3:5",
														"nodeType": "YulTypedName",
														"src": "6763:3:5",
														"type": ""
													}
												],
												"src": "6621:366:5"
											},
											{
												"body": {
													"nativeSrc": "7164:248:5",
													"nodeType": "YulBlock",
													"src": "7164:248:5",
													"statements": [
														{
															"nativeSrc": "7174:26:5",
															"nodeType": "YulAssignment",
															"src": "7174:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7186:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7186:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7197:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7197:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7182:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7182:3:5"
																},
																"nativeSrc": "7182:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7182:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7174:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7174:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7221:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7221:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7232:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7232:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7217:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7217:3:5"
																		},
																		"nativeSrc": "7217:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7217:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7240:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7240:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7246:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7246:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7236:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7236:3:5"
																		},
																		"nativeSrc": "7236:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7236:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7210:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7210:6:5"
																},
																"nativeSrc": "7210:47:5",
																"nodeType": "YulFunctionCall",
																"src": "7210:47:5"
															},
															"nativeSrc": "7210:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "7210:47:5"
														},
														{
															"nativeSrc": "7266:139:5",
															"nodeType": "YulAssignment",
															"src": "7266:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7400:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7400:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7274:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "7274:124:5"
																},
																"nativeSrc": "7274:131:5",
																"nodeType": "YulFunctionCall",
																"src": "7274:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7266:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7266:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6993:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7144:9:5",
														"nodeType": "YulTypedName",
														"src": "7144:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7159:4:5",
														"nodeType": "YulTypedName",
														"src": "7159:4:5",
														"type": ""
													}
												],
												"src": "6993:419:5"
											},
											{
												"body": {
													"nativeSrc": "7463:149:5",
													"nodeType": "YulBlock",
													"src": "7463:149:5",
													"statements": [
														{
															"nativeSrc": "7473:25:5",
															"nodeType": "YulAssignment",
															"src": "7473:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7496:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7496:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7478:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7478:17:5"
																},
																"nativeSrc": "7478:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7478:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7473:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7473:1:5"
																}
															]
														},
														{
															"nativeSrc": "7507:25:5",
															"nodeType": "YulAssignment",
															"src": "7507:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7530:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7530:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7512:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7512:17:5"
																},
																"nativeSrc": "7512:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7512:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7507:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7507:1:5"
																}
															]
														},
														{
															"nativeSrc": "7541:17:5",
															"nodeType": "YulAssignment",
															"src": "7541:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7553:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7553:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7556:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7556:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7549:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7549:3:5"
																},
																"nativeSrc": "7549:9:5",
																"nodeType": "YulFunctionCall",
																"src": "7549:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7541:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7541:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7583:22:5",
																"nodeType": "YulBlock",
																"src": "7583:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7585:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "7585:16:5"
																			},
																			"nativeSrc": "7585:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7585:18:5"
																		},
																		"nativeSrc": "7585:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7585:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7574:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7574:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7580:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7580:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7571:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "7571:2:5"
																},
																"nativeSrc": "7571:11:5",
																"nodeType": "YulFunctionCall",
																"src": "7571:11:5"
															},
															"nativeSrc": "7568:37:5",
															"nodeType": "YulIf",
															"src": "7568:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7418:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7449:1:5",
														"nodeType": "YulTypedName",
														"src": "7449:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7452:1:5",
														"nodeType": "YulTypedName",
														"src": "7452:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7458:4:5",
														"nodeType": "YulTypedName",
														"src": "7458:4:5",
														"type": ""
													}
												],
												"src": "7418:194:5"
											},
											{
												"body": {
													"nativeSrc": "7744:206:5",
													"nodeType": "YulBlock",
													"src": "7744:206:5",
													"statements": [
														{
															"nativeSrc": "7754:26:5",
															"nodeType": "YulAssignment",
															"src": "7754:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7766:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7766:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7777:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7777:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7762:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7762:3:5"
																},
																"nativeSrc": "7762:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7762:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7754:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7754:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7834:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7834:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7847:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7847:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7858:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7858:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7843:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7843:3:5"
																		},
																		"nativeSrc": "7843:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7843:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7790:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7790:43:5"
																},
																"nativeSrc": "7790:71:5",
																"nodeType": "YulFunctionCall",
																"src": "7790:71:5"
															},
															"nativeSrc": "7790:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "7790:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7915:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7915:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7928:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7928:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7939:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7939:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7924:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7924:3:5"
																		},
																		"nativeSrc": "7924:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7924:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7871:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7871:43:5"
																},
																"nativeSrc": "7871:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7871:72:5"
															},
															"nativeSrc": "7871:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7871:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7618:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7708:9:5",
														"nodeType": "YulTypedName",
														"src": "7708:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7720:6:5",
														"nodeType": "YulTypedName",
														"src": "7720:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7728:6:5",
														"nodeType": "YulTypedName",
														"src": "7728:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7739:4:5",
														"nodeType": "YulTypedName",
														"src": "7739:4:5",
														"type": ""
													}
												],
												"src": "7618:332:5"
											},
											{
												"body": {
													"nativeSrc": "7998:48:5",
													"nodeType": "YulBlock",
													"src": "7998:48:5",
													"statements": [
														{
															"nativeSrc": "8008:32:5",
															"nodeType": "YulAssignment",
															"src": "8008:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8033:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8033:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8026:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8026:6:5"
																		},
																		"nativeSrc": "8026:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8026:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8019:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8019:6:5"
																},
																"nativeSrc": "8019:21:5",
																"nodeType": "YulFunctionCall",
																"src": "8019:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8008:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "8008:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7956:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7980:5:5",
														"nodeType": "YulTypedName",
														"src": "7980:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7990:7:5",
														"nodeType": "YulTypedName",
														"src": "7990:7:5",
														"type": ""
													}
												],
												"src": "7956:90:5"
											},
											{
												"body": {
													"nativeSrc": "8092:76:5",
													"nodeType": "YulBlock",
													"src": "8092:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8146:16:5",
																"nodeType": "YulBlock",
																"src": "8146:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8155:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8155:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8158:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8158:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8148:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8148:6:5"
																			},
																			"nativeSrc": "8148:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8148:12:5"
																		},
																		"nativeSrc": "8148:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8148:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8115:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8115:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8137:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "8137:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8122:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "8122:14:5"
																				},
																				"nativeSrc": "8122:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8122:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8112:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "8112:2:5"
																		},
																		"nativeSrc": "8112:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8112:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8105:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8105:6:5"
																},
																"nativeSrc": "8105:40:5",
																"nodeType": "YulFunctionCall",
																"src": "8105:40:5"
															},
															"nativeSrc": "8102:60:5",
															"nodeType": "YulIf",
															"src": "8102:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8052:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8085:5:5",
														"nodeType": "YulTypedName",
														"src": "8085:5:5",
														"type": ""
													}
												],
												"src": "8052:116:5"
											},
											{
												"body": {
													"nativeSrc": "8234:77:5",
													"nodeType": "YulBlock",
													"src": "8234:77:5",
													"statements": [
														{
															"nativeSrc": "8244:22:5",
															"nodeType": "YulAssignment",
															"src": "8244:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8259:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8259:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8253:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8253:5:5"
																},
																"nativeSrc": "8253:13:5",
																"nodeType": "YulFunctionCall",
																"src": "8253:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8244:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8244:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8299:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8299:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8275:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "8275:23:5"
																},
																"nativeSrc": "8275:30:5",
																"nodeType": "YulFunctionCall",
																"src": "8275:30:5"
															},
															"nativeSrc": "8275:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "8275:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8174:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8212:6:5",
														"nodeType": "YulTypedName",
														"src": "8212:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8220:3:5",
														"nodeType": "YulTypedName",
														"src": "8220:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8228:5:5",
														"nodeType": "YulTypedName",
														"src": "8228:5:5",
														"type": ""
													}
												],
												"src": "8174:137:5"
											},
											{
												"body": {
													"nativeSrc": "8391:271:5",
													"nodeType": "YulBlock",
													"src": "8391:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8437:83:5",
																"nodeType": "YulBlock",
																"src": "8437:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8439:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "8439:77:5"
																			},
																			"nativeSrc": "8439:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8439:79:5"
																		},
																		"nativeSrc": "8439:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8439:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8412:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8412:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8421:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8421:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8408:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8408:3:5"
																		},
																		"nativeSrc": "8408:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8408:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8433:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8433:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8404:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8404:3:5"
																},
																"nativeSrc": "8404:32:5",
																"nodeType": "YulFunctionCall",
																"src": "8404:32:5"
															},
															"nativeSrc": "8401:119:5",
															"nodeType": "YulIf",
															"src": "8401:119:5"
														},
														{
															"nativeSrc": "8530:125:5",
															"nodeType": "YulBlock",
															"src": "8530:125:5",
															"statements": [
																{
																	"nativeSrc": "8545:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8545:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8559:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8559:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8549:6:5",
																			"nodeType": "YulTypedName",
																			"src": "8549:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8574:71:5",
																	"nodeType": "YulAssignment",
																	"src": "8574:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8617:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "8617:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8628:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8628:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8613:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8613:3:5"
																				},
																				"nativeSrc": "8613:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8613:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8637:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8637:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "8584:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "8584:28:5"
																		},
																		"nativeSrc": "8584:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8584:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8574:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8574:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8317:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8361:9:5",
														"nodeType": "YulTypedName",
														"src": "8361:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8372:7:5",
														"nodeType": "YulTypedName",
														"src": "8372:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8384:6:5",
														"nodeType": "YulTypedName",
														"src": "8384:6:5",
														"type": ""
													}
												],
												"src": "8317:345:5"
											},
											{
												"body": {
													"nativeSrc": "8774:59:5",
													"nodeType": "YulBlock",
													"src": "8774:59:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8804:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8804:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8792:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8792:3:5"
																		},
																		"nativeSrc": "8792:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8792:14:5"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "8808:17:5",
																		"nodeType": "YulLiteral",
																		"src": "8808:17:5",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8785:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8785:6:5"
																},
																"nativeSrc": "8785:41:5",
																"nodeType": "YulFunctionCall",
																"src": "8785:41:5"
															},
															"nativeSrc": "8785:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "8785:41:5"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "8668:165:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8766:6:5",
														"nodeType": "YulTypedName",
														"src": "8766:6:5",
														"type": ""
													}
												],
												"src": "8668:165:5"
											},
											{
												"body": {
													"nativeSrc": "8985:220:5",
													"nodeType": "YulBlock",
													"src": "8985:220:5",
													"statements": [
														{
															"nativeSrc": "8995:74:5",
															"nodeType": "YulAssignment",
															"src": "8995:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9061:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9061:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9066:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9066:2:5",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9002:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9002:58:5"
																},
																"nativeSrc": "9002:67:5",
																"nodeType": "YulFunctionCall",
																"src": "9002:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8995:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8995:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9167:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9167:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "9078:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "9078:88:5"
																},
																"nativeSrc": "9078:93:5",
																"nodeType": "YulFunctionCall",
																"src": "9078:93:5"
															},
															"nativeSrc": "9078:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "9078:93:5"
														},
														{
															"nativeSrc": "9180:19:5",
															"nodeType": "YulAssignment",
															"src": "9180:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9191:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9191:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9196:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9196:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9187:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9187:3:5"
																},
																"nativeSrc": "9187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9187:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9180:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9180:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8839:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8973:3:5",
														"nodeType": "YulTypedName",
														"src": "8973:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8981:3:5",
														"nodeType": "YulTypedName",
														"src": "8981:3:5",
														"type": ""
													}
												],
												"src": "8839:366:5"
											},
											{
												"body": {
													"nativeSrc": "9382:248:5",
													"nodeType": "YulBlock",
													"src": "9382:248:5",
													"statements": [
														{
															"nativeSrc": "9392:26:5",
															"nodeType": "YulAssignment",
															"src": "9392:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9404:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9404:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9415:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9415:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9400:3:5"
																},
																"nativeSrc": "9400:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9400:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9392:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9392:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9439:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9439:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9450:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9450:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9435:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9435:3:5"
																		},
																		"nativeSrc": "9435:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9435:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9458:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9458:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9464:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9464:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9454:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9454:3:5"
																		},
																		"nativeSrc": "9454:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9454:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9428:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9428:6:5"
																},
																"nativeSrc": "9428:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9428:47:5"
															},
															"nativeSrc": "9428:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9428:47:5"
														},
														{
															"nativeSrc": "9484:139:5",
															"nodeType": "YulAssignment",
															"src": "9484:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9618:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9618:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9492:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "9492:124:5"
																},
																"nativeSrc": "9492:131:5",
																"nodeType": "YulFunctionCall",
																"src": "9492:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9484:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9484:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9211:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9362:9:5",
														"nodeType": "YulTypedName",
														"src": "9362:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9377:4:5",
														"nodeType": "YulTypedName",
														"src": "9377:4:5",
														"type": ""
													}
												],
												"src": "9211:419:5"
											},
											{
												"body": {
													"nativeSrc": "9742:58:5",
													"nodeType": "YulBlock",
													"src": "9742:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9764:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9764:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9772:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9772:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9760:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9760:3:5"
																		},
																		"nativeSrc": "9760:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9760:14:5"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nativeSrc": "9776:16:5",
																		"nodeType": "YulLiteral",
																		"src": "9776:16:5",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9753:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9753:6:5"
																},
																"nativeSrc": "9753:40:5",
																"nodeType": "YulFunctionCall",
																"src": "9753:40:5"
															},
															"nativeSrc": "9753:40:5",
															"nodeType": "YulExpressionStatement",
															"src": "9753:40:5"
														}
													]
												},
												"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
												"nativeSrc": "9636:164:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9734:6:5",
														"nodeType": "YulTypedName",
														"src": "9734:6:5",
														"type": ""
													}
												],
												"src": "9636:164:5"
											},
											{
												"body": {
													"nativeSrc": "9952:220:5",
													"nodeType": "YulBlock",
													"src": "9952:220:5",
													"statements": [
														{
															"nativeSrc": "9962:74:5",
															"nodeType": "YulAssignment",
															"src": "9962:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10028:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10028:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10033:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10033:2:5",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9969:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9969:58:5"
																},
																"nativeSrc": "9969:67:5",
																"nodeType": "YulFunctionCall",
																"src": "9969:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9962:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9962:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10134:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10134:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																	"nativeSrc": "10045:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "10045:88:5"
																},
																"nativeSrc": "10045:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10045:93:5"
															},
															"nativeSrc": "10045:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "10045:93:5"
														},
														{
															"nativeSrc": "10147:19:5",
															"nodeType": "YulAssignment",
															"src": "10147:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10158:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10158:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10163:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10163:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10154:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10154:3:5"
																},
																"nativeSrc": "10154:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10154:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10147:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10147:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9806:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9940:3:5",
														"nodeType": "YulTypedName",
														"src": "9940:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9948:3:5",
														"nodeType": "YulTypedName",
														"src": "9948:3:5",
														"type": ""
													}
												],
												"src": "9806:366:5"
											},
											{
												"body": {
													"nativeSrc": "10349:248:5",
													"nodeType": "YulBlock",
													"src": "10349:248:5",
													"statements": [
														{
															"nativeSrc": "10359:26:5",
															"nodeType": "YulAssignment",
															"src": "10359:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10371:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10371:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10382:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10382:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10367:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10367:3:5"
																},
																"nativeSrc": "10367:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10367:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10359:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10359:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10406:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10406:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10417:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10417:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10402:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10402:3:5"
																		},
																		"nativeSrc": "10402:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10402:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10425:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10425:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10431:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10431:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10421:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10421:3:5"
																		},
																		"nativeSrc": "10421:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10421:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10395:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10395:6:5"
																},
																"nativeSrc": "10395:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10395:47:5"
															},
															"nativeSrc": "10395:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10395:47:5"
														},
														{
															"nativeSrc": "10451:139:5",
															"nodeType": "YulAssignment",
															"src": "10451:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10585:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10585:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10459:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10459:124:5"
																},
																"nativeSrc": "10459:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10459:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10451:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10451:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10178:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10329:9:5",
														"nodeType": "YulTypedName",
														"src": "10329:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10344:4:5",
														"nodeType": "YulTypedName",
														"src": "10344:4:5",
														"type": ""
													}
												],
												"src": "10178:419:5"
											},
											{
												"body": {
													"nativeSrc": "10757:288:5",
													"nodeType": "YulBlock",
													"src": "10757:288:5",
													"statements": [
														{
															"nativeSrc": "10767:26:5",
															"nodeType": "YulAssignment",
															"src": "10767:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10779:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10779:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10790:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10790:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10775:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:5"
																},
																"nativeSrc": "10775:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10775:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10767:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10767:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10847:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10847:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10860:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10860:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10871:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10871:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10856:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10856:3:5"
																		},
																		"nativeSrc": "10856:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10856:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10803:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10803:43:5"
																},
																"nativeSrc": "10803:71:5",
																"nodeType": "YulFunctionCall",
																"src": "10803:71:5"
															},
															"nativeSrc": "10803:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "10803:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10928:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10928:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10941:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10941:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10952:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10952:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10937:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10937:3:5"
																		},
																		"nativeSrc": "10937:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10937:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10884:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10884:43:5"
																},
																"nativeSrc": "10884:72:5",
																"nodeType": "YulFunctionCall",
																"src": "10884:72:5"
															},
															"nativeSrc": "10884:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "10884:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11010:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11010:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11023:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11023:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11034:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11034:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11019:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11019:3:5"
																		},
																		"nativeSrc": "11019:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11019:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10966:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10966:43:5"
																},
																"nativeSrc": "10966:72:5",
																"nodeType": "YulFunctionCall",
																"src": "10966:72:5"
															},
															"nativeSrc": "10966:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "10966:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10603:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10713:9:5",
														"nodeType": "YulTypedName",
														"src": "10713:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10725:6:5",
														"nodeType": "YulTypedName",
														"src": "10725:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10733:6:5",
														"nodeType": "YulTypedName",
														"src": "10733:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10741:6:5",
														"nodeType": "YulTypedName",
														"src": "10741:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10752:4:5",
														"nodeType": "YulTypedName",
														"src": "10752:4:5",
														"type": ""
													}
												],
												"src": "10603:442:5"
											},
											{
												"body": {
													"nativeSrc": "11157:66:5",
													"nodeType": "YulBlock",
													"src": "11157:66:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11179:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11179:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11187:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11187:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11175:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11175:3:5"
																		},
																		"nativeSrc": "11175:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11175:14:5"
																	},
																	{
																		"hexValue": "526577617264207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "11191:24:5",
																		"nodeType": "YulLiteral",
																		"src": "11191:24:5",
																		"type": "",
																		"value": "Reward transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11168:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:5"
																},
																"nativeSrc": "11168:48:5",
																"nodeType": "YulFunctionCall",
																"src": "11168:48:5"
															},
															"nativeSrc": "11168:48:5",
															"nodeType": "YulExpressionStatement",
															"src": "11168:48:5"
														}
													]
												},
												"name": "store_literal_in_memory_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce",
												"nativeSrc": "11051:172:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11149:6:5",
														"nodeType": "YulTypedName",
														"src": "11149:6:5",
														"type": ""
													}
												],
												"src": "11051:172:5"
											},
											{
												"body": {
													"nativeSrc": "11375:220:5",
													"nodeType": "YulBlock",
													"src": "11375:220:5",
													"statements": [
														{
															"nativeSrc": "11385:74:5",
															"nodeType": "YulAssignment",
															"src": "11385:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11451:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11451:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11456:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11456:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11392:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "11392:58:5"
																},
																"nativeSrc": "11392:67:5",
																"nodeType": "YulFunctionCall",
																"src": "11392:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11385:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11385:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11557:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11557:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce",
																	"nativeSrc": "11468:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "11468:88:5"
																},
																"nativeSrc": "11468:93:5",
																"nodeType": "YulFunctionCall",
																"src": "11468:93:5"
															},
															"nativeSrc": "11468:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "11468:93:5"
														},
														{
															"nativeSrc": "11570:19:5",
															"nodeType": "YulAssignment",
															"src": "11570:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11581:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11581:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11586:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11586:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11577:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11577:3:5"
																},
																"nativeSrc": "11577:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11577:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11570:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11570:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11229:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11363:3:5",
														"nodeType": "YulTypedName",
														"src": "11363:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11371:3:5",
														"nodeType": "YulTypedName",
														"src": "11371:3:5",
														"type": ""
													}
												],
												"src": "11229:366:5"
											},
											{
												"body": {
													"nativeSrc": "11772:248:5",
													"nodeType": "YulBlock",
													"src": "11772:248:5",
													"statements": [
														{
															"nativeSrc": "11782:26:5",
															"nodeType": "YulAssignment",
															"src": "11782:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11794:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11794:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11805:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11805:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11790:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11790:3:5"
																},
																"nativeSrc": "11790:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11790:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11782:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11782:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11829:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11829:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11840:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11840:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11825:3:5"
																		},
																		"nativeSrc": "11825:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11825:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11848:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "11848:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11854:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11854:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11844:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11844:3:5"
																		},
																		"nativeSrc": "11844:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11844:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11818:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11818:6:5"
																},
																"nativeSrc": "11818:47:5",
																"nodeType": "YulFunctionCall",
																"src": "11818:47:5"
															},
															"nativeSrc": "11818:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "11818:47:5"
														},
														{
															"nativeSrc": "11874:139:5",
															"nodeType": "YulAssignment",
															"src": "11874:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12008:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "12008:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11882:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "11882:124:5"
																},
																"nativeSrc": "11882:131:5",
																"nodeType": "YulFunctionCall",
																"src": "11882:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11874:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11874:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11601:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11752:9:5",
														"nodeType": "YulTypedName",
														"src": "11752:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11767:4:5",
														"nodeType": "YulTypedName",
														"src": "11767:4:5",
														"type": ""
													}
												],
												"src": "11601:419:5"
											},
											{
												"body": {
													"nativeSrc": "12054:152:5",
													"nodeType": "YulBlock",
													"src": "12054:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12071:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12071:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12074:77:5",
																		"nodeType": "YulLiteral",
																		"src": "12074:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12064:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12064:6:5"
																},
																"nativeSrc": "12064:88:5",
																"nodeType": "YulFunctionCall",
																"src": "12064:88:5"
															},
															"nativeSrc": "12064:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "12064:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12168:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12168:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12171:4:5",
																		"nodeType": "YulLiteral",
																		"src": "12171:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12161:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12161:6:5"
																},
																"nativeSrc": "12161:15:5",
																"nodeType": "YulFunctionCall",
																"src": "12161:15:5"
															},
															"nativeSrc": "12161:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "12161:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12192:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12192:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12195:4:5",
																		"nodeType": "YulLiteral",
																		"src": "12195:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12185:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12185:6:5"
																},
																"nativeSrc": "12185:15:5",
																"nodeType": "YulFunctionCall",
																"src": "12185:15:5"
															},
															"nativeSrc": "12185:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "12185:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12026:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "12026:180:5"
											},
											{
												"body": {
													"nativeSrc": "12254:143:5",
													"nodeType": "YulBlock",
													"src": "12254:143:5",
													"statements": [
														{
															"nativeSrc": "12264:25:5",
															"nodeType": "YulAssignment",
															"src": "12264:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12287:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "12287:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12269:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "12269:17:5"
																},
																"nativeSrc": "12269:20:5",
																"nodeType": "YulFunctionCall",
																"src": "12269:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12264:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "12264:1:5"
																}
															]
														},
														{
															"nativeSrc": "12298:25:5",
															"nodeType": "YulAssignment",
															"src": "12298:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12321:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "12321:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12303:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "12303:17:5"
																},
																"nativeSrc": "12303:20:5",
																"nodeType": "YulFunctionCall",
																"src": "12303:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12298:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "12298:1:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12345:22:5",
																"nodeType": "YulBlock",
																"src": "12345:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12347:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "12347:16:5"
																			},
																			"nativeSrc": "12347:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "12347:18:5"
																		},
																		"nativeSrc": "12347:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "12347:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12342:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "12342:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12335:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12335:6:5"
																},
																"nativeSrc": "12335:9:5",
																"nodeType": "YulFunctionCall",
																"src": "12335:9:5"
															},
															"nativeSrc": "12332:35:5",
															"nodeType": "YulIf",
															"src": "12332:35:5"
														},
														{
															"nativeSrc": "12377:14:5",
															"nodeType": "YulAssignment",
															"src": "12377:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12386:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "12386:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12389:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "12389:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12382:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12382:3:5"
																},
																"nativeSrc": "12382:9:5",
																"nodeType": "YulFunctionCall",
																"src": "12382:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12377:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "12377:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12212:185:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12243:1:5",
														"nodeType": "YulTypedName",
														"src": "12243:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12246:1:5",
														"nodeType": "YulTypedName",
														"src": "12246:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12252:1:5",
														"nodeType": "YulTypedName",
														"src": "12252:1:5",
														"type": ""
													}
												],
												"src": "12212:185:5"
											},
											{
												"body": {
													"nativeSrc": "12509:75:5",
													"nodeType": "YulBlock",
													"src": "12509:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12531:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "12531:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12539:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12539:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12527:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12527:3:5"
																		},
																		"nativeSrc": "12527:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12527:14:5"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "12543:33:5",
																		"nodeType": "YulLiteral",
																		"src": "12543:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12520:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12520:6:5"
																},
																"nativeSrc": "12520:57:5",
																"nodeType": "YulFunctionCall",
																"src": "12520:57:5"
															},
															"nativeSrc": "12520:57:5",
															"nodeType": "YulExpressionStatement",
															"src": "12520:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "12403:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12501:6:5",
														"nodeType": "YulTypedName",
														"src": "12501:6:5",
														"type": ""
													}
												],
												"src": "12403:181:5"
											},
											{
												"body": {
													"nativeSrc": "12736:220:5",
													"nodeType": "YulBlock",
													"src": "12736:220:5",
													"statements": [
														{
															"nativeSrc": "12746:74:5",
															"nodeType": "YulAssignment",
															"src": "12746:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12812:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12812:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12817:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12817:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12753:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "12753:58:5"
																},
																"nativeSrc": "12753:67:5",
																"nodeType": "YulFunctionCall",
																"src": "12753:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12746:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12746:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12918:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12918:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "12829:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "12829:88:5"
																},
																"nativeSrc": "12829:93:5",
																"nodeType": "YulFunctionCall",
																"src": "12829:93:5"
															},
															"nativeSrc": "12829:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "12829:93:5"
														},
														{
															"nativeSrc": "12931:19:5",
															"nodeType": "YulAssignment",
															"src": "12931:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12942:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12942:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12947:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12947:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12938:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12938:3:5"
																},
																"nativeSrc": "12938:12:5",
																"nodeType": "YulFunctionCall",
																"src": "12938:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12931:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12931:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12590:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12724:3:5",
														"nodeType": "YulTypedName",
														"src": "12724:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12732:3:5",
														"nodeType": "YulTypedName",
														"src": "12732:3:5",
														"type": ""
													}
												],
												"src": "12590:366:5"
											},
											{
												"body": {
													"nativeSrc": "13133:248:5",
													"nodeType": "YulBlock",
													"src": "13133:248:5",
													"statements": [
														{
															"nativeSrc": "13143:26:5",
															"nodeType": "YulAssignment",
															"src": "13143:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13155:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "13155:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13166:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13166:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13151:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13151:3:5"
																},
																"nativeSrc": "13151:18:5",
																"nodeType": "YulFunctionCall",
																"src": "13151:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13143:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "13143:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13190:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13190:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13201:1:5",
																				"nodeType": "YulLiteral",
																				"src": "13201:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13186:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13186:3:5"
																		},
																		"nativeSrc": "13186:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13186:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13209:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "13209:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13215:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13215:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13205:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13205:3:5"
																		},
																		"nativeSrc": "13205:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13205:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13179:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13179:6:5"
																},
																"nativeSrc": "13179:47:5",
																"nodeType": "YulFunctionCall",
																"src": "13179:47:5"
															},
															"nativeSrc": "13179:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "13179:47:5"
														},
														{
															"nativeSrc": "13235:139:5",
															"nodeType": "YulAssignment",
															"src": "13235:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13369:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "13369:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13243:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "13243:124:5"
																},
																"nativeSrc": "13243:131:5",
																"nodeType": "YulFunctionCall",
																"src": "13243:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13235:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "13235:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12962:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13113:9:5",
														"nodeType": "YulTypedName",
														"src": "13113:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13128:4:5",
														"nodeType": "YulTypedName",
														"src": "13128:4:5",
														"type": ""
													}
												],
												"src": "12962:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$290_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$290_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient staked amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157(memPtr) {\n\n        mstore(add(memPtr, 0), \"Lock period not ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC3453153 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC3453153 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xF40F0F52 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x2A6 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x21D JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1A9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x21A40589 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x2F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH2 0x570 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x583 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x225 PUSH2 0x81E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x9FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH3 0x127500 DUP2 JUMP JUMPDEST PUSH2 0x2F9 PUSH2 0xB41 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38D SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x127500 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F4 CALLER PUSH2 0xB90 JUMP JUMPDEST POP DUP1 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH0 ADD SLOAD SUB PUSH2 0x43A JUMPI PUSH0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x496 SWAP3 SWAP2 SWAP1 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50C SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP3 PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x56D PUSH2 0xBF4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x578 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x581 PUSH0 PUSH2 0xC84 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5E3 PUSH2 0xBFD JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x5F5 PUSH2 0xB41 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x64C SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST SWAP1 POP PUSH2 0x657 CALLER PUSH2 0xB90 JUMP JUMPDEST POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0x792 JUMPI TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7BC SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0x809 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x81B PUSH2 0xBF4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x826 PUSH2 0xB41 JUMP JUMPDEST PUSH0 PUSH2 0x830 CALLER PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x964 JUMPI PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x896 SWAP3 SWAP2 SWAP1 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D6 SWAP2 SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x95B SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP PUSH2 0x96D PUSH2 0xBF4 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH0 ADD SLOAD PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x1344 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD PUSH3 0x127500 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x9E2 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0x9EB DUP10 PUSH2 0xA7F JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH2 0xA03 PUSH2 0xBFD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA73 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7C DUP2 PUSH2 0xC84 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0xAD3 JUMPI PUSH0 SWAP2 POP POP PUSH2 0xB17 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xAE4 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP PUSH5 0x496CEBB800 DUP2 PUSH1 0x4 SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x1344 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7D SWAP1 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB9B DUP4 PUSH2 0xA7F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xBEB JUMPI TIMESTAMP PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xC05 PUSH2 0xD45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC23 PUSH2 0x5B4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC82 JUMPI PUSH2 0xC46 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC79 SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD79 DUP3 PUSH2 0xD50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD89 DUP2 PUSH2 0xD6F JUMP JUMPDEST DUP2 EQ PUSH2 0xD93 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDA4 DUP2 PUSH2 0xD80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBF JUMPI PUSH2 0xDBE PUSH2 0xD4C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDCC DUP5 DUP3 DUP6 ADD PUSH2 0xD96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE7 DUP2 PUSH2 0xDD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE00 PUSH0 DUP4 ADD DUP7 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xE0D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xE1A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE35 PUSH0 DUP4 ADD DUP5 PUSH2 0xDDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE44 DUP2 PUSH2 0xDD5 JUMP JUMPDEST DUP2 EQ PUSH2 0xE4E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5F DUP2 PUSH2 0xE3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7A JUMPI PUSH2 0xE79 PUSH2 0xD4C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE87 DUP5 DUP3 DUP6 ADD PUSH2 0xE51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEB3 PUSH2 0xEAE PUSH2 0xEA9 DUP5 PUSH2 0xD50 JUMP JUMPDEST PUSH2 0xE90 JUMP JUMPDEST PUSH2 0xD50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEC4 DUP3 PUSH2 0xE99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xED5 DUP3 PUSH2 0xEBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE5 DUP2 PUSH2 0xECB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFE PUSH0 DUP4 ADD DUP5 PUSH2 0xEDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF0D DUP2 PUSH2 0xD6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF26 PUSH0 DUP4 ADD DUP5 PUSH2 0xF04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xF3F PUSH0 DUP4 ADD DUP8 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xF4C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xF59 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xF66 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xDDE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xFA6 DUP3 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xFB1 DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xFBF DUP2 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xFD6 JUMPI PUSH2 0xFD5 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B656420616D6F756E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1021 PUSH1 0x1A DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP2 POP PUSH2 0x102C DUP3 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x104E DUP2 PUSH2 0x1015 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x105F DUP3 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x106A DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1082 JUMPI PUSH2 0x1081 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6F636B20706572696F64206E6F7420656E6465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10BC PUSH1 0x15 DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP2 POP PUSH2 0x10C7 DUP3 PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10E9 DUP2 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10FA DUP3 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1105 DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x111D JUMPI PUSH2 0x111C PUSH2 0xF6F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1136 PUSH0 DUP4 ADD DUP6 PUSH2 0xF04 JUMP JUMPDEST PUSH2 0x1143 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDDE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x115E DUP2 PUSH2 0x114A JUMP JUMPDEST DUP2 EQ PUSH2 0x1168 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1179 DUP2 PUSH2 0x1155 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1194 JUMPI PUSH2 0x1193 PUSH2 0xD4C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11A1 DUP5 DUP3 DUP6 ADD PUSH2 0x116B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11DE PUSH1 0xF DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP2 POP PUSH2 0x11E9 DUP3 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x120B DUP2 PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1246 PUSH1 0xE DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP2 POP PUSH2 0x1251 DUP3 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1273 DUP2 PUSH2 0x123A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x128D PUSH0 DUP4 ADD DUP7 PUSH2 0xF04 JUMP JUMPDEST PUSH2 0x129A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF04 JUMP JUMPDEST PUSH2 0x12A7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x526577617264207472616E73666572206661696C656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12E3 PUSH1 0x16 DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP2 POP PUSH2 0x12EE DUP3 PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1310 DUP2 PUSH2 0x12D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x134E DUP3 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1359 DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1369 JUMPI PUSH2 0x1368 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13A8 PUSH1 0x1F DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP2 POP PUSH2 0x13B3 DUP3 PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13D5 DUP2 PUSH2 0x139C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH26 0xCD24DF9016BE778C4F68134A152A379D741CC8E9A8CF715AEE02 PUSH23 0x1897D364736F6C634300081A0033000000000000000000 ",
							"sourceMap": "240:5928:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;936:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;496:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2652:979;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;331:26:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;624:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1020:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5227:106:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1562:943;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3703:297;;;:::i;:::-;;5675:490;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4162:526:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;420:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;936:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;496:53::-;542:7;496:53;:::o;2652:979::-;2261:21:1;:19;:21::i;:::-;2719:27:4::1;2749:6;:18;2756:10;2749:18;;;;;;;;;;;;;;;2719:48;;2829:19;2861:4;2851:7;:14;;;;:::i;:::-;2829:36;;2914:11;2894:9;:16;;;:31;;2886:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;542:7;2994:9;:19;;;:41;;;;:::i;:::-;2975:15;:60;;2967:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;3132:25;3146:10;3132:13;:25::i;:::-;;3235:11;3215:9;:16;;;:31;;;;;;;:::i;:::-;;;;;;;;3272:11;3257;;:26;;;;;;;:::i;:::-;;;;;;;;3376:1;3356:9;:16;;;:21:::0;3352:77:::1;;3416:1;3394:9;:19;;:23;;;;3352:77;3498:12;;;;;;;;;;;:21;;;3520:10;3532:11;3498:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3490:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;3599:10;3590:33;;;3611:11;3590:33;;;;;;:::i;:::-;;;;;;;;2708:923;;2303:20:1::0;:18;:20::i;:::-;2652:979:4;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;331:26:4:-;;;;;;;;;;;;;:::o;624:32::-;;;;:::o;1020:26::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;5227:106:4:-;1531:13:0;:11;:13::i;:::-;5314:11:4::1;5301:10;:24;;;;5227:106:::0;:::o;1562:943::-;2261:21:1;:19;:21::i;:::-;1645:1:4::1;1635:7;:11;1627:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1727:19;1759:4;1749:7;:14;;;;:::i;:::-;1727:36;;1834:25;1848:10;1834:13;:25::i;:::-;;1938:12;;;;;;;;;;;:25;;;1964:10;1984:4;1991:11;1938:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1930:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:27;2111:6;:18;2118:10;2111:18;;;;;;;;;;;;;;;2081:48;;2229:1;2209:9;:16;;;:21:::0;2205:147:::1;;2269:15;2247:9;:19;;:37;;;;2325:15;2299:9;:23;;:41;;;;2205:147;2392:11;2372:9;:16;;;:31;;;;;;;:::i;:::-;;;;;;;;2429:11;2414;;:26;;;;;;;:::i;:::-;;;;;;;;2473:10;2466:31;;;2485:11;2466:31;;;;;;:::i;:::-;;;;;;;;1616:889;;2303:20:1::0;:18;:20::i;:::-;1562:943:4;:::o;3703:297::-;2261:21:1;:19;:21::i;:::-;3759:14:4::1;3776:25;3790:10;3776:13;:25::i;:::-;3759:42;;3835:1;3826:6;:10;3822:171;;;3861:11;;;;;;;;;;;:20;;;3882:10;3894:6;3861:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3853:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;3962:10;3948:33;;;3974:6;3948:33;;;;;;:::i;:::-;;;;;;;;3822:171;3748:252;2303:20:1::0;:18;:20::i;:::-;3703:297:4:o;5675:490::-;5745:14;5770:17;5798:19;5828:22;5869:27;5899:6;:13;5906:5;5899:13;;;;;;;;;;;;;;;5869:43;;5974:4;5955:9;:16;;;:23;;;;:::i;:::-;6036:9;:19;;;542:7;6070:9;:19;;;:41;;;;:::i;:::-;6126:20;6140:5;6126:13;:20::i;:::-;5933:224;;;;;;;;;5675:490;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;4162:526:4:-;4221:7;4241:27;4271:6;:13;4278:5;4271:13;;;;;;;;;;;;;;;4241:43;;4329:1;4309:9;:16;;;:21;4305:62;;4354:1;4347:8;;;;;4305:62;4387:19;4427:9;:23;;;4409:15;:41;;;;:::i;:::-;4387:63;;4663:16;4647:11;4634:10;;4615:9;:16;;;:29;;;;:::i;:::-;:43;;;;:::i;:::-;4614:66;;;;:::i;:::-;4607:73;;;;4162:526;;;;:::o;420:25::-;;;;;;;;;;;;;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;4830:263:4:-;4886:7;4906:14;4923:20;4937:5;4923:13;:20::i;:::-;4906:37;;4977:1;4968:6;:10;4964:88;;;5025:15;4995:6;:13;5002:5;4995:13;;;;;;;;;;;;;;;:27;;:45;;;;4964:88;5079:6;5072:13;;;4830:263;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:442::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1664:72;1732:2;1721:9;1717:18;1708:6;1664:72;:::i;:::-;1746;1814:2;1803:9;1799:18;1790:6;1746:72;:::i;:::-;1383:442;;;;;;:::o;1831:222::-;1924:4;1962:2;1951:9;1947:18;1939:26;;1975:71;2043:1;2032:9;2028:17;2019:6;1975:71;:::i;:::-;1831:222;;;;:::o;2059:122::-;2132:24;2150:5;2132:24;:::i;:::-;2125:5;2122:35;2112:63;;2171:1;2168;2161:12;2112:63;2059:122;:::o;2187:139::-;2233:5;2271:6;2258:20;2249:29;;2287:33;2314:5;2287:33;:::i;:::-;2187:139;;;;:::o;2332:329::-;2391:6;2440:2;2428:9;2419:7;2415:23;2411:32;2408:119;;;2446:79;;:::i;:::-;2408:119;2566:1;2591:53;2636:7;2627:6;2616:9;2612:22;2591:53;:::i;:::-;2581:63;;2537:117;2332:329;;;;:::o;2667:60::-;2695:3;2716:5;2709:12;;2667:60;;;:::o;2733:142::-;2783:9;2816:53;2834:34;2843:24;2861:5;2843:24;:::i;:::-;2834:34;:::i;:::-;2816:53;:::i;:::-;2803:66;;2733:142;;;:::o;2881:126::-;2931:9;2964:37;2995:5;2964:37;:::i;:::-;2951:50;;2881:126;;;:::o;3013:140::-;3077:9;3110:37;3141:5;3110:37;:::i;:::-;3097:50;;3013:140;;;:::o;3159:159::-;3260:51;3305:5;3260:51;:::i;:::-;3255:3;3248:64;3159:159;;:::o;3324:250::-;3431:4;3469:2;3458:9;3454:18;3446:26;;3482:85;3564:1;3553:9;3549:17;3540:6;3482:85;:::i;:::-;3324:250;;;;:::o;3580:118::-;3667:24;3685:5;3667:24;:::i;:::-;3662:3;3655:37;3580:118;;:::o;3704:222::-;3797:4;3835:2;3824:9;3820:18;3812:26;;3848:71;3916:1;3905:9;3901:17;3892:6;3848:71;:::i;:::-;3704:222;;;;:::o;3932:553::-;4109:4;4147:3;4136:9;4132:19;4124:27;;4161:71;4229:1;4218:9;4214:17;4205:6;4161:71;:::i;:::-;4242:72;4310:2;4299:9;4295:18;4286:6;4242:72;:::i;:::-;4324;4392:2;4381:9;4377:18;4368:6;4324:72;:::i;:::-;4406;4474:2;4463:9;4459:18;4450:6;4406:72;:::i;:::-;3932:553;;;;;;;:::o;4491:180::-;4539:77;4536:1;4529:88;4636:4;4633:1;4626:15;4660:4;4657:1;4650:15;4677:410;4717:7;4740:20;4758:1;4740:20;:::i;:::-;4735:25;;4774:20;4792:1;4774:20;:::i;:::-;4769:25;;4829:1;4826;4822:9;4851:30;4869:11;4851:30;:::i;:::-;4840:41;;5030:1;5021:7;5017:15;5014:1;5011:22;4991:1;4984:9;4964:83;4941:139;;5060:18;;:::i;:::-;4941:139;4725:362;4677:410;;;;:::o;5093:169::-;5177:11;5211:6;5206:3;5199:19;5251:4;5246:3;5242:14;5227:29;;5093:169;;;;:::o;5268:176::-;5408:28;5404:1;5396:6;5392:14;5385:52;5268:176;:::o;5450:366::-;5592:3;5613:67;5677:2;5672:3;5613:67;:::i;:::-;5606:74;;5689:93;5778:3;5689:93;:::i;:::-;5807:2;5802:3;5798:12;5791:19;;5450:366;;;:::o;5822:419::-;5988:4;6026:2;6015:9;6011:18;6003:26;;6075:9;6069:4;6065:20;6061:1;6050:9;6046:17;6039:47;6103:131;6229:4;6103:131;:::i;:::-;6095:139;;5822:419;;;:::o;6247:191::-;6287:3;6306:20;6324:1;6306:20;:::i;:::-;6301:25;;6340:20;6358:1;6340:20;:::i;:::-;6335:25;;6383:1;6380;6376:9;6369:16;;6404:3;6401:1;6398:10;6395:36;;;6411:18;;:::i;:::-;6395:36;6247:191;;;;:::o;6444:171::-;6584:23;6580:1;6572:6;6568:14;6561:47;6444:171;:::o;6621:366::-;6763:3;6784:67;6848:2;6843:3;6784:67;:::i;:::-;6777:74;;6860:93;6949:3;6860:93;:::i;:::-;6978:2;6973:3;6969:12;6962:19;;6621:366;;;:::o;6993:419::-;7159:4;7197:2;7186:9;7182:18;7174:26;;7246:9;7240:4;7236:20;7232:1;7221:9;7217:17;7210:47;7274:131;7400:4;7274:131;:::i;:::-;7266:139;;6993:419;;;:::o;7418:194::-;7458:4;7478:20;7496:1;7478:20;:::i;:::-;7473:25;;7512:20;7530:1;7512:20;:::i;:::-;7507:25;;7556:1;7553;7549:9;7541:17;;7580:1;7574:4;7571:11;7568:37;;;7585:18;;:::i;:::-;7568:37;7418:194;;;;:::o;7618:332::-;7739:4;7777:2;7766:9;7762:18;7754:26;;7790:71;7858:1;7847:9;7843:17;7834:6;7790:71;:::i;:::-;7871:72;7939:2;7928:9;7924:18;7915:6;7871:72;:::i;:::-;7618:332;;;;;:::o;7956:90::-;7990:7;8033:5;8026:13;8019:21;8008:32;;7956:90;;;:::o;8052:116::-;8122:21;8137:5;8122:21;:::i;:::-;8115:5;8112:32;8102:60;;8158:1;8155;8148:12;8102:60;8052:116;:::o;8174:137::-;8228:5;8259:6;8253:13;8244:22;;8275:30;8299:5;8275:30;:::i;:::-;8174:137;;;;:::o;8317:345::-;8384:6;8433:2;8421:9;8412:7;8408:23;8404:32;8401:119;;;8439:79;;:::i;:::-;8401:119;8559:1;8584:61;8637:7;8628:6;8617:9;8613:22;8584:61;:::i;:::-;8574:71;;8530:125;8317:345;;;;:::o;8668:165::-;8808:17;8804:1;8796:6;8792:14;8785:41;8668:165;:::o;8839:366::-;8981:3;9002:67;9066:2;9061:3;9002:67;:::i;:::-;8995:74;;9078:93;9167:3;9078:93;:::i;:::-;9196:2;9191:3;9187:12;9180:19;;8839:366;;;:::o;9211:419::-;9377:4;9415:2;9404:9;9400:18;9392:26;;9464:9;9458:4;9454:20;9450:1;9439:9;9435:17;9428:47;9492:131;9618:4;9492:131;:::i;:::-;9484:139;;9211:419;;;:::o;9636:164::-;9776:16;9772:1;9764:6;9760:14;9753:40;9636:164;:::o;9806:366::-;9948:3;9969:67;10033:2;10028:3;9969:67;:::i;:::-;9962:74;;10045:93;10134:3;10045:93;:::i;:::-;10163:2;10158:3;10154:12;10147:19;;9806:366;;;:::o;10178:419::-;10344:4;10382:2;10371:9;10367:18;10359:26;;10431:9;10425:4;10421:20;10417:1;10406:9;10402:17;10395:47;10459:131;10585:4;10459:131;:::i;:::-;10451:139;;10178:419;;;:::o;10603:442::-;10752:4;10790:2;10779:9;10775:18;10767:26;;10803:71;10871:1;10860:9;10856:17;10847:6;10803:71;:::i;:::-;10884:72;10952:2;10941:9;10937:18;10928:6;10884:72;:::i;:::-;10966;11034:2;11023:9;11019:18;11010:6;10966:72;:::i;:::-;10603:442;;;;;;:::o;11051:172::-;11191:24;11187:1;11179:6;11175:14;11168:48;11051:172;:::o;11229:366::-;11371:3;11392:67;11456:2;11451:3;11392:67;:::i;:::-;11385:74;;11468:93;11557:3;11468:93;:::i;:::-;11586:2;11581:3;11577:12;11570:19;;11229:366;;;:::o;11601:419::-;11767:4;11805:2;11794:9;11790:18;11782:26;;11854:9;11848:4;11844:20;11840:1;11829:9;11825:17;11818:47;11882:131;12008:4;11882:131;:::i;:::-;11874:139;;11601:419;;;:::o;12026:180::-;12074:77;12071:1;12064:88;12171:4;12168:1;12161:15;12195:4;12192:1;12185:15;12212:185;12252:1;12269:20;12287:1;12269:20;:::i;:::-;12264:25;;12303:20;12321:1;12303:20;:::i;:::-;12298:25;;12342:1;12332:35;;12347:18;;:::i;:::-;12332:35;12389:1;12386;12382:9;12377:14;;12212:185;;;;:::o;12403:181::-;12543:33;12539:1;12531:6;12527:14;12520:57;12403:181;:::o;12590:366::-;12732:3;12753:67;12817:2;12812:3;12753:67;:::i;:::-;12746:74;;12829:93;12918:3;12829:93;:::i;:::-;12947:2;12942:3;12938:12;12931:19;;12590:366;;;:::o;12962:419::-;13128:4;13166:2;13155:9;13151:18;13143:26;;13215:9;13209:4;13205:20;13201:1;13190:9;13186:17;13179:47;13243:131;13369:4;13243:131;:::i;:::-;13235:139;;12962:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1027600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MINIMUM_LOCK_PERIOD()": "371",
								"claimReward()": "infinite",
								"getStakeInfo(address)": "infinite",
								"owner()": "2538",
								"pendingReward(address)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardRate()": "2492",
								"rewardToken()": "infinite",
								"setRewardRate(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakes(address)": "infinite",
								"stakingToken()": "infinite",
								"totalStaked()": "2514",
								"transferOwnership(address)": "infinite",
								"unstake(uint256)": "infinite"
							},
							"internal": {
								"_updateReward(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 240,
									"end": 6168,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 240,
									"end": 6168,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 240,
									"end": 6168,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 652,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "3E8"
								},
								{
									"begin": 624,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 624,
									"end": 656,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1260,
									"end": 1437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1335,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1370,
									"end": 1383,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1360,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1348,
									"end": 1360,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1384,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1416,
									"end": 1428,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1406,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1395,
									"end": 1406,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1429,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1260,
									"end": 1437,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 240,
									"end": 6168,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 240,
									"end": 6168,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 240,
									"end": 6168,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 240,
									"end": 6168,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 240,
									"end": 6168,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 6168,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 240,
									"end": 6168,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 6168,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 6168,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 240,
									"end": 6168,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 6168,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203679cd24df9016be778c4f68134a152a379d741cc8e9a8cf715aee02761897d364736f6c634300081a0033",
									".code": [
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "C3453153"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "C3453153"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "F40F0F52"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "F7C618C1"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "9E447FC6"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "A694FC3A"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "B88A802F"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "72F702F3"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "7B0A47EE"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "817B1CD2"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "16934FC4"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "21A40589"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "2E17DE78"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 6168,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 936,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 936,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 936,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 496,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 496,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2652,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2652,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 357,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 331,
											"end": 357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 331,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 331,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 331,
											"end": 357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 357,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 331,
											"end": 357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 357,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 624,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 624,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1020,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1020,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5227,
											"end": 5333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 5227,
											"end": 5333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1562,
											"end": 2505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1562,
											"end": 2505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 4000,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3703,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3703,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3703,
											"end": 4000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 4000,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3703,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 4000,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 5675,
											"end": 6165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5675,
											"end": 6165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5675,
											"end": 6165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4162,
											"end": 4688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4162,
											"end": 4688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4162,
											"end": 4688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 420,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 936,
											"end": 979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 542,
											"end": 549,
											"name": "PUSH",
											"source": 4,
											"value": "127500"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 496,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2766,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2767,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2719,
											"end": 2767,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2719,
											"end": 2767,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2829,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2851,
											"end": 2858,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2851,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2851,
											"end": 2865,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2851,
											"end": 2865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2829,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2829,
											"end": 2865,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2914,
											"end": 2925,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2894,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2894,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2910,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2894,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2894,
											"end": 2925,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2894,
											"end": 2925,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2886,
											"end": 2956,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2886,
											"end": 2956,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 542,
											"end": 549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "127500"
										},
										{
											"begin": 2994,
											"end": 3003,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2994,
											"end": 3013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2994,
											"end": 3035,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2994,
											"end": 3035,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3035,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2994,
											"end": 3035,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 2990,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3035,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3035,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2967,
											"end": 3061,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2967,
											"end": 3061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3146,
											"end": 3156,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3132,
											"end": 3157,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3157,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3132,
											"end": 3157,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3157,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3246,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3224,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3215,
											"end": 3246,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3246,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3272,
											"end": 3283,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3257,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3257,
											"end": 3283,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3283,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3365,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3356,
											"end": 3372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3372,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3356,
											"end": 3372,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3356,
											"end": 3377,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3403,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3394,
											"end": 3413,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3417,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3417,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3417,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3417,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3498,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3510,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3510,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3510,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3498,
											"end": 3510,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3510,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3510,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3498,
											"end": 3510,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3498,
											"end": 3519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 3520,
											"end": 3530,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3543,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3498,
											"end": 3544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3544,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3498,
											"end": 3544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3498,
											"end": 3544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3490,
											"end": 3564,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3490,
											"end": 3564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3599,
											"end": 3609,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "F5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
										},
										{
											"begin": 3611,
											"end": 3622,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3590,
											"end": 3623,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3623,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 3631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 3631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 3631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 3631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 357,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 331,
											"end": 357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 331,
											"end": 357,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 331,
											"end": 357,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 331,
											"end": 357,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 331,
											"end": 357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 624,
											"end": 656,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 624,
											"end": 656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5325,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5301,
											"end": 5325,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5325,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5325,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1646,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1627,
											"end": 1665,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1627,
											"end": 1665,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1749,
											"end": 1756,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1749,
											"end": 1763,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1749,
											"end": 1763,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1749,
											"end": 1763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1763,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1834,
											"end": 1859,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1848,
											"end": 1858,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1834,
											"end": 1847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1834,
											"end": 1859,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1834,
											"end": 1859,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1834,
											"end": 1859,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1834,
											"end": 1859,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1938,
											"end": 1950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1950,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1938,
											"end": 1950,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1950,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1938,
											"end": 1950,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1938,
											"end": 1963,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1964,
											"end": 1974,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 1988,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2002,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1938,
											"end": 2003,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 2003,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1938,
											"end": 2003,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1938,
											"end": 2003,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1930,
											"end": 2023,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1930,
											"end": 2023,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2128,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2129,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2129,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2129,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2218,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2225,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2230,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2205,
											"end": 2352,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2284,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2247,
											"end": 2266,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2284,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2340,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2299,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2299,
											"end": 2322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2299,
											"end": 2322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2299,
											"end": 2340,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2299,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2299,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2299,
											"end": 2340,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2352,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2205,
											"end": 2352,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2372,
											"end": 2403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2414,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2414,
											"end": 2440,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2440,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2483,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 2485,
											"end": 2496,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2466,
											"end": 2497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2497,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1616,
											"end": 2505,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1616,
											"end": 2505,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 2505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 4000,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3703,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 3773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3790,
											"end": 3800,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3776,
											"end": 3801,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3801,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3776,
											"end": 3801,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3759,
											"end": 3801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3759,
											"end": 3801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3826,
											"end": 3836,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3993,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3822,
											"end": 3993,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3861,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3861,
											"end": 3872,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3861,
											"end": 3872,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3861,
											"end": 3881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 3882,
											"end": 3892,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3861,
											"end": 3901,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3901,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3861,
											"end": 3901,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3861,
											"end": 3901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3853,
											"end": 3928,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3853,
											"end": 3928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 3972,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 3974,
											"end": 3980,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3948,
											"end": 3981,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3981,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3822,
											"end": 3993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3748,
											"end": 4000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3703,
											"end": 4000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5745,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5798,
											"end": 5817,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5899,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5906,
											"end": 5911,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5974,
											"end": 5978,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5955,
											"end": 5964,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5955,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5955,
											"end": 5971,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5955,
											"end": 5971,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5955,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5955,
											"end": 5978,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5955,
											"end": 5978,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5955,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 5955,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5955,
											"end": 5978,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5955,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6045,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6055,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6036,
											"end": 6055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6055,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 542,
											"end": 549,
											"name": "PUSH",
											"source": 4,
											"value": "127500"
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6089,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6070,
											"end": 6089,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6089,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 6070,
											"end": 6111,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6070,
											"end": 6111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6111,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 6070,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 6140,
											"end": 6145,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 6126,
											"end": 6146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6146,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 6126,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5933,
											"end": 6157,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5933,
											"end": 6157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5933,
											"end": 6157,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5933,
											"end": 6157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5933,
											"end": 6157,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5933,
											"end": 6157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5933,
											"end": 6157,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5933,
											"end": 6157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5933,
											"end": 6157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 6165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4221,
											"end": 4228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4283,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4284,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4284,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4284,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4325,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4325,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4325,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4330,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4305,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4305,
											"end": 4367,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4354,
											"end": 4355,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4355,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4347,
											"end": 4355,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4305,
											"end": 4367,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4305,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4427,
											"end": 4450,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4427,
											"end": 4450,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4427,
											"end": 4450,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4424,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4409,
											"end": 4450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4409,
											"end": 4450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4450,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4409,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4663,
											"end": 4679,
											"name": "PUSH",
											"source": 4,
											"value": "496CEBB800"
										},
										{
											"begin": 4647,
											"end": 4658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4634,
											"end": 4644,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4634,
											"end": 4644,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4624,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4631,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4631,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4615,
											"end": 4644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4615,
											"end": 4644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4644,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4615,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4615,
											"end": 4658,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4615,
											"end": 4658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4658,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4615,
											"end": 4658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4614,
											"end": 4680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4614,
											"end": 4680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4680,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4614,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4607,
											"end": 4680,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4607,
											"end": 4680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4607,
											"end": 4680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4607,
											"end": 4680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 420,
											"end": 445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 5093,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4830,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4886,
											"end": 4893,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4906,
											"end": 4920,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4937,
											"end": 4942,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4923,
											"end": 4943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 4943,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4923,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 4943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 4943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4977,
											"end": 4978,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 4974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4978,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 5052,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4964,
											"end": 5052,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5040,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5001,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5007,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5022,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4995,
											"end": 5022,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5040,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 5052,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4964,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5079,
											"end": 5085,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5085,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4830,
											"end": 5093,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4830,
											"end": 5093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4830,
											"end": 5093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4830,
											"end": 5093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1583,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1721,
											"end": 1730,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1717,
											"end": 1735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1664,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1814,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1812,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1746,
											"end": 1818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1924,
											"end": 1928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1964,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2043,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2025,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1975,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 2046,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 1975,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 2053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2181,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2059,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2150,
											"end": 2155,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2132,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2157,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2172,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2278,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2287,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2661,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2332,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2442,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2437,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2426,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2438,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2443,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2527,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 2408,
											"end": 2527,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2446,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 2446,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2446,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2446,
											"end": 2525,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 2446,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2527,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 2408,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 2636,
											"end": 2643,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2633,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2612,
											"end": 2634,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2591,
											"end": 2644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2644,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 2591,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2644,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2661,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2661,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2695,
											"end": 2698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2667,
											"end": 2727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2834,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2843,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2834,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2868,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2834,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2816,
											"end": 2869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 2869,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2816,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 2995,
											"end": 3000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2964,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 3001,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 2964,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 3001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 3001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3153,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3013,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3077,
											"end": 3086,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 3141,
											"end": 3146,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3110,
											"end": 3147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3147,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 3110,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3097,
											"end": 3147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3097,
											"end": 3147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3318,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3159,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3260,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 3305,
											"end": 3310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3260,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3260,
											"end": 3311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3260,
											"end": 3311,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 3260,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3258,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3312,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3574,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3431,
											"end": 3435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3471,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3467,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 3564,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3562,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3546,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3482,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3567,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 3482,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3574,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3574,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3698,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3580,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 3685,
											"end": 3690,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3667,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 3667,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3665,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3655,
											"end": 3692,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3837,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 3838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 3838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3848,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 3916,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3905,
											"end": 3914,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3898,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3848,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3848,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3848,
											"end": 3919,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 3848,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4485,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3932,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4147,
											"end": 4150,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4136,
											"end": 4145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4132,
											"end": 4151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4161,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 4229,
											"end": 4230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4227,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4231,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4205,
											"end": 4211,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4161,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4161,
											"end": 4232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4161,
											"end": 4232,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 4161,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 4310,
											"end": 4312,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4299,
											"end": 4308,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 4292,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4242,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4314,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 4242,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 4392,
											"end": 4394,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4381,
											"end": 4390,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4374,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4324,
											"end": 4396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4396,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 4324,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4406,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4463,
											"end": 4472,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4406,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4406,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4406,
											"end": 4478,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 4406,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4485,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4485,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4671,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4491,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4536,
											"end": 4537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4617,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4636,
											"end": 4640,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4633,
											"end": 4634,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4626,
											"end": 4641,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4660,
											"end": 4664,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4657,
											"end": 4658,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4650,
											"end": 4665,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 5087,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4677,
											"end": 5087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4740,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 4758,
											"end": 4759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4740,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4740,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4740,
											"end": 4760,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 4740,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4760,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4774,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 4792,
											"end": 4793,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4774,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4774,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4774,
											"end": 4794,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 4774,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4794,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4830,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4826,
											"end": 4827,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4822,
											"end": 4831,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 4869,
											"end": 4880,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4851,
											"end": 4881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4881,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 4851,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4881,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5030,
											"end": 5031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5028,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5032,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5014,
											"end": 5015,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4991,
											"end": 4992,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 4993,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4964,
											"end": 5047,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 4941,
											"end": 5080,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 5060,
											"end": 5078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 5080,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 4941,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4725,
											"end": 5087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 5087,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 5087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 5087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 5087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 5087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5262,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5093,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5209,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5251,
											"end": 5255,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5246,
											"end": 5249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5227,
											"end": 5256,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5227,
											"end": 5256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5262,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5268,
											"end": 5444,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5268,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5408,
											"end": 5436,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E74207374616B656420616D6F756E74000000000000"
										},
										{
											"begin": 5404,
											"end": 5405,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5268,
											"end": 5444,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5268,
											"end": 5444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5450,
											"end": 5816,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 5450,
											"end": 5816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5613,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 5677,
											"end": 5679,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 5672,
											"end": 5675,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5613,
											"end": 5680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5680,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 5613,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5680,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5689,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 5778,
											"end": 5781,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5689,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5689,
											"end": 5782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5689,
											"end": 5782,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 5689,
											"end": 5782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5807,
											"end": 5809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5802,
											"end": 5805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5450,
											"end": 5816,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5450,
											"end": 5816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5450,
											"end": 5816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5450,
											"end": 5816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 6241,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 5822,
											"end": 6241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5988,
											"end": 5992,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6026,
											"end": 6028,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6015,
											"end": 6024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6011,
											"end": 6029,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6003,
											"end": 6029,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6003,
											"end": 6029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6084,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6069,
											"end": 6073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6065,
											"end": 6085,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6061,
											"end": 6062,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6059,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6046,
											"end": 6063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6039,
											"end": 6086,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 6229,
											"end": 6233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 6103,
											"end": 6234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6234,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 6103,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6095,
											"end": 6234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6095,
											"end": 6234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 6241,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 6241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 6241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 6241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6247,
											"end": 6438,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6247,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6287,
											"end": 6290,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6306,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 6324,
											"end": 6325,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 6306,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6326,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 6306,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6301,
											"end": 6326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6301,
											"end": 6326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 6358,
											"end": 6359,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 6340,
											"end": 6360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6360,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 6340,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6335,
											"end": 6360,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6335,
											"end": 6360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6383,
											"end": 6384,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6380,
											"end": 6381,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6369,
											"end": 6385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6369,
											"end": 6385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6407,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6401,
											"end": 6402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6398,
											"end": 6408,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6395,
											"end": 6431,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6395,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 6395,
											"end": 6431,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 6411,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 6411,
											"end": 6429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6429,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 6411,
											"end": 6429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6395,
											"end": 6431,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 6395,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6247,
											"end": 6438,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6247,
											"end": 6438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6247,
											"end": 6438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6247,
											"end": 6438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6247,
											"end": 6438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6444,
											"end": 6615,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 6444,
											"end": 6615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6584,
											"end": 6607,
											"name": "PUSH",
											"source": 5,
											"value": "4C6F636B20706572696F64206E6F7420656E6465640000000000000000000000"
										},
										{
											"begin": 6580,
											"end": 6581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6572,
											"end": 6578,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6568,
											"end": 6582,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6444,
											"end": 6615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6444,
											"end": 6615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6621,
											"end": 6987,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 6621,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 6766,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 6848,
											"end": 6850,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 6843,
											"end": 6846,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 6784,
											"end": 6851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6851,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 6784,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6860,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 6949,
											"end": 6952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6860,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 6860,
											"end": 6953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6860,
											"end": 6953,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 6860,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6978,
											"end": 6980,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6973,
											"end": 6976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 6981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 6981,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 6981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6621,
											"end": 6987,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6621,
											"end": 6987,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6621,
											"end": 6987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6621,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6993,
											"end": 7412,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 6993,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7159,
											"end": 7163,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7197,
											"end": 7199,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7186,
											"end": 7195,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7182,
											"end": 7200,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7174,
											"end": 7200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7174,
											"end": 7200,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7246,
											"end": 7255,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7240,
											"end": 7244,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7236,
											"end": 7256,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7232,
											"end": 7233,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7230,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7217,
											"end": 7234,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7210,
											"end": 7257,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7274,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7274,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 7274,
											"end": 7405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7274,
											"end": 7405,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 7274,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7266,
											"end": 7405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7266,
											"end": 7405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6993,
											"end": 7412,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6993,
											"end": 7412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6993,
											"end": 7412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6993,
											"end": 7412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7418,
											"end": 7612,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 7418,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 7496,
											"end": 7497,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 7478,
											"end": 7498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7498,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 7478,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7473,
											"end": 7498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7473,
											"end": 7498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7512,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7512,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 7512,
											"end": 7532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7512,
											"end": 7532,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 7512,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7507,
											"end": 7532,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7507,
											"end": 7532,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7557,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7553,
											"end": 7554,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7549,
											"end": 7558,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7541,
											"end": 7558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7541,
											"end": 7558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7580,
											"end": 7581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7574,
											"end": 7578,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7571,
											"end": 7582,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7568,
											"end": 7605,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7568,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 7568,
											"end": 7605,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 7585,
											"end": 7603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7568,
											"end": 7605,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 7568,
											"end": 7605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7418,
											"end": 7612,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7418,
											"end": 7612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7418,
											"end": 7612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7418,
											"end": 7612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7418,
											"end": 7612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7618,
											"end": 7950,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 7618,
											"end": 7950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7739,
											"end": 7743,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7777,
											"end": 7779,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7766,
											"end": 7775,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7754,
											"end": 7780,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7754,
											"end": 7780,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7790,
											"end": 7861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 7858,
											"end": 7859,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7843,
											"end": 7860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7834,
											"end": 7840,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7790,
											"end": 7861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 7790,
											"end": 7861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7790,
											"end": 7861,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 7790,
											"end": 7861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7871,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 7939,
											"end": 7941,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7928,
											"end": 7937,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7915,
											"end": 7921,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7871,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 7871,
											"end": 7943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7871,
											"end": 7943,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 7871,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7618,
											"end": 7950,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7618,
											"end": 7950,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7618,
											"end": 7950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7618,
											"end": 7950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7618,
											"end": 7950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7618,
											"end": 7950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7956,
											"end": 8046,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 7956,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7990,
											"end": 7997,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8033,
											"end": 8038,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8026,
											"end": 8039,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8019,
											"end": 8040,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8008,
											"end": 8040,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8008,
											"end": 8040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7956,
											"end": 8046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7956,
											"end": 8046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7956,
											"end": 8046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7956,
											"end": 8046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8052,
											"end": 8168,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 8052,
											"end": 8168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 8137,
											"end": 8142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 8122,
											"end": 8143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8115,
											"end": 8120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8112,
											"end": 8144,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8102,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 8102,
											"end": 8162,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8158,
											"end": 8159,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8155,
											"end": 8156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8160,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8102,
											"end": 8162,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 8102,
											"end": 8162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8052,
											"end": 8168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8052,
											"end": 8168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8311,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 8174,
											"end": 8311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8228,
											"end": 8233,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8259,
											"end": 8265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8253,
											"end": 8266,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8275,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 8299,
											"end": 8304,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8275,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 8275,
											"end": 8305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8275,
											"end": 8305,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 8275,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8311,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8311,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8311,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8662,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 8317,
											"end": 8662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8384,
											"end": 8390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8433,
											"end": 8435,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8421,
											"end": 8430,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8412,
											"end": 8419,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8408,
											"end": 8431,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8404,
											"end": 8436,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8520,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 8401,
											"end": 8520,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8439,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 8439,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 8439,
											"end": 8518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8439,
											"end": 8518,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 8439,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8520,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 8401,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8559,
											"end": 8560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8584,
											"end": 8645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 8637,
											"end": 8644,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8628,
											"end": 8634,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8617,
											"end": 8626,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8584,
											"end": 8645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 8584,
											"end": 8645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8584,
											"end": 8645,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 8584,
											"end": 8645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8574,
											"end": 8645,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8574,
											"end": 8645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8530,
											"end": 8655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8662,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8662,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8668,
											"end": 8833,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 8668,
											"end": 8833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8825,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 8804,
											"end": 8805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8796,
											"end": 8802,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8792,
											"end": 8806,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 8826,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8668,
											"end": 8833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8668,
											"end": 8833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8839,
											"end": 9205,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 8839,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8981,
											"end": 8984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9002,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 9066,
											"end": 9068,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 9061,
											"end": 9064,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9002,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 9002,
											"end": 9069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9002,
											"end": 9069,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 9002,
											"end": 9069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8995,
											"end": 9069,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8995,
											"end": 9069,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9078,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 9167,
											"end": 9170,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9078,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 9078,
											"end": 9171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9078,
											"end": 9171,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 9078,
											"end": 9171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9196,
											"end": 9198,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9191,
											"end": 9194,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9187,
											"end": 9199,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9180,
											"end": 9199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9180,
											"end": 9199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8839,
											"end": 9205,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8839,
											"end": 9205,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8839,
											"end": 9205,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8839,
											"end": 9205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9211,
											"end": 9630,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 9211,
											"end": 9630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9377,
											"end": 9381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9415,
											"end": 9417,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9404,
											"end": 9413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9418,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9464,
											"end": 9473,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9458,
											"end": 9462,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9454,
											"end": 9474,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9450,
											"end": 9451,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9439,
											"end": 9448,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9435,
											"end": 9452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9428,
											"end": 9475,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9492,
											"end": 9623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 9618,
											"end": 9622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9492,
											"end": 9623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 9492,
											"end": 9623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9492,
											"end": 9623,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 9492,
											"end": 9623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9484,
											"end": 9623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9484,
											"end": 9623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9211,
											"end": 9630,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9211,
											"end": 9630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9211,
											"end": 9630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9211,
											"end": 9630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9636,
											"end": 9800,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 9636,
											"end": 9800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9776,
											"end": 9792,
											"name": "PUSH",
											"source": 5,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 9772,
											"end": 9773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9764,
											"end": 9770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9760,
											"end": 9774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9753,
											"end": 9793,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9636,
											"end": 9800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9636,
											"end": 9800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9806,
											"end": 10172,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 9806,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9948,
											"end": 9951,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9969,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 10033,
											"end": 10035,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 10028,
											"end": 10031,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9969,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 9969,
											"end": 10036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9969,
											"end": 10036,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 9969,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9962,
											"end": 10036,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9962,
											"end": 10036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10045,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 10134,
											"end": 10137,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10045,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 10045,
											"end": 10138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10045,
											"end": 10138,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 10045,
											"end": 10138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10163,
											"end": 10165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10158,
											"end": 10161,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10154,
											"end": 10166,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10147,
											"end": 10166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10147,
											"end": 10166,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9806,
											"end": 10172,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9806,
											"end": 10172,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9806,
											"end": 10172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9806,
											"end": 10172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10597,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 10178,
											"end": 10597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10344,
											"end": 10348,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10382,
											"end": 10384,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10371,
											"end": 10380,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10367,
											"end": 10385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10359,
											"end": 10385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10359,
											"end": 10385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10431,
											"end": 10440,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10425,
											"end": 10429,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10421,
											"end": 10441,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10417,
											"end": 10418,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10406,
											"end": 10415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10402,
											"end": 10419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10395,
											"end": 10442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10459,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 10585,
											"end": 10589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10459,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 10459,
											"end": 10590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10459,
											"end": 10590,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 10459,
											"end": 10590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10451,
											"end": 10590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10451,
											"end": 10590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10597,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10603,
											"end": 11045,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 10603,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10752,
											"end": 10756,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10790,
											"end": 10792,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10779,
											"end": 10788,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10775,
											"end": 10793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10767,
											"end": 10793,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10767,
											"end": 10793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10803,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 10871,
											"end": 10872,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10860,
											"end": 10869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10856,
											"end": 10873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10847,
											"end": 10853,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10803,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 10803,
											"end": 10874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10803,
											"end": 10874,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 10803,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10884,
											"end": 10956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 10952,
											"end": 10954,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10941,
											"end": 10950,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10937,
											"end": 10955,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10928,
											"end": 10934,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10884,
											"end": 10956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 10884,
											"end": 10956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10884,
											"end": 10956,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 10884,
											"end": 10956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10966,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 11034,
											"end": 11036,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11023,
											"end": 11032,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11019,
											"end": 11037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11010,
											"end": 11016,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10966,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 10966,
											"end": 11038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10966,
											"end": 11038,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 10966,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10603,
											"end": 11045,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10603,
											"end": 11045,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10603,
											"end": 11045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10603,
											"end": 11045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10603,
											"end": 11045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10603,
											"end": 11045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10603,
											"end": 11045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11051,
											"end": 11223,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 11051,
											"end": 11223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11191,
											"end": 11215,
											"name": "PUSH",
											"source": 5,
											"value": "526577617264207472616E73666572206661696C656400000000000000000000"
										},
										{
											"begin": 11187,
											"end": 11188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11179,
											"end": 11185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11175,
											"end": 11189,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11168,
											"end": 11216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11051,
											"end": 11223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11051,
											"end": 11223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11229,
											"end": 11595,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 11229,
											"end": 11595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11371,
											"end": 11374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11392,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 11456,
											"end": 11458,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 11451,
											"end": 11454,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11392,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 11392,
											"end": 11459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11392,
											"end": 11459,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 11392,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11385,
											"end": 11459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11385,
											"end": 11459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11468,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 11557,
											"end": 11560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11468,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 11468,
											"end": 11561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11468,
											"end": 11561,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 11468,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11586,
											"end": 11588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11581,
											"end": 11584,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11577,
											"end": 11589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11570,
											"end": 11589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11570,
											"end": 11589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11229,
											"end": 11595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11229,
											"end": 11595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11229,
											"end": 11595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11229,
											"end": 11595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11601,
											"end": 12020,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 11601,
											"end": 12020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11767,
											"end": 11771,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11805,
											"end": 11807,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11794,
											"end": 11803,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11790,
											"end": 11808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11782,
											"end": 11808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11782,
											"end": 11808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11854,
											"end": 11863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11848,
											"end": 11852,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11844,
											"end": 11864,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11840,
											"end": 11841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11829,
											"end": 11838,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11825,
											"end": 11842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11818,
											"end": 11865,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11882,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 12008,
											"end": 12012,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11882,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 11882,
											"end": 12013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11882,
											"end": 12013,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 11882,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11874,
											"end": 12013,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11874,
											"end": 12013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11601,
											"end": 12020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11601,
											"end": 12020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11601,
											"end": 12020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11601,
											"end": 12020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12026,
											"end": 12206,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 12026,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12074,
											"end": 12151,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12071,
											"end": 12072,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12064,
											"end": 12152,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12171,
											"end": 12175,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 12168,
											"end": 12169,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12161,
											"end": 12176,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12195,
											"end": 12199,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 12192,
											"end": 12193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12185,
											"end": 12200,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12212,
											"end": 12397,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 12212,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12252,
											"end": 12253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12269,
											"end": 12289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 12287,
											"end": 12288,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12269,
											"end": 12289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 12269,
											"end": 12289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12269,
											"end": 12289,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 12269,
											"end": 12289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12264,
											"end": 12289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12264,
											"end": 12289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12303,
											"end": 12323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 12321,
											"end": 12322,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12303,
											"end": 12323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 12303,
											"end": 12323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12303,
											"end": 12323,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 12303,
											"end": 12323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12298,
											"end": 12323,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12298,
											"end": 12323,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12342,
											"end": 12343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12332,
											"end": 12367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 12332,
											"end": 12367,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12347,
											"end": 12365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 12347,
											"end": 12365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 12347,
											"end": 12365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12347,
											"end": 12365,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 12347,
											"end": 12365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12332,
											"end": 12367,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 12332,
											"end": 12367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12389,
											"end": 12390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12386,
											"end": 12387,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12382,
											"end": 12391,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 12377,
											"end": 12391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12377,
											"end": 12391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12212,
											"end": 12397,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12212,
											"end": 12397,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12212,
											"end": 12397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12212,
											"end": 12397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12212,
											"end": 12397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12403,
											"end": 12584,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 12403,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12543,
											"end": 12576,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 12539,
											"end": 12540,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12531,
											"end": 12537,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12527,
											"end": 12541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12520,
											"end": 12577,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12403,
											"end": 12584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12403,
											"end": 12584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12590,
											"end": 12956,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 12590,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12732,
											"end": 12735,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12753,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 12817,
											"end": 12819,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 12812,
											"end": 12815,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12753,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 12753,
											"end": 12820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12753,
											"end": 12820,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 12753,
											"end": 12820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12746,
											"end": 12820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12746,
											"end": 12820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12829,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 12918,
											"end": 12921,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12829,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 12829,
											"end": 12922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12829,
											"end": 12922,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 12829,
											"end": 12922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12947,
											"end": 12949,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12942,
											"end": 12945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12938,
											"end": 12950,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12931,
											"end": 12950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12931,
											"end": 12950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12590,
											"end": 12956,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12590,
											"end": 12956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12590,
											"end": 12956,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12590,
											"end": 12956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12962,
											"end": 13381,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 12962,
											"end": 13381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13128,
											"end": 13132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13166,
											"end": 13168,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13155,
											"end": 13164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13151,
											"end": 13169,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13143,
											"end": 13169,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13143,
											"end": 13169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13215,
											"end": 13224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13209,
											"end": 13213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13205,
											"end": 13225,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13201,
											"end": 13202,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13190,
											"end": 13199,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13186,
											"end": 13203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13179,
											"end": 13226,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13243,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 13369,
											"end": 13373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13243,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 13243,
											"end": 13374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13243,
											"end": 13374,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 13243,
											"end": 13374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13235,
											"end": 13374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13235,
											"end": 13374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12962,
											"end": 13381,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12962,
											"end": 13381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12962,
											"end": 13381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12962,
											"end": 13381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/staking edu/staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MINIMUM_LOCK_PERIOD()": "21a40589",
							"claimReward()": "b88a802f",
							"getStakeInfo(address)": "c3453153",
							"owner()": "8da5cb5b",
							"pendingReward(address)": "f40f0f52",
							"renounceOwnership()": "715018a6",
							"rewardRate()": "7b0a47ee",
							"rewardToken()": "f7c618c1",
							"setRewardRate(uint256)": "9e447fc6",
							"stake(uint256)": "a694fc3a",
							"stakes(address)": "16934fc4",
							"stakingToken()": "72f702f3",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_LOCK_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"getStakeInfo(address)\":{\"params\":{\"_user\":\"Address of the user\"},\"returns\":{\"amount\":\"Amount staked (in whole tokens)\",\"lockEndTime\":\"Time when lock period ends\",\"pendingRewards\":\"Pending rewards (in wei)\",\"startTime\":\"Time when stake was created\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingReward(address)\":{\"params\":{\"_user\":\"Address of the user\"},\"returns\":{\"_0\":\"Pending reward amount\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setRewardRate(uint256)\":{\"params\":{\"_rewardRate\":\"New reward rate in basis points\"}},\"stake(uint256)\":{\"params\":{\"_amount\":\"Amount to stake (in whole tokens, not wei)\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstake(uint256)\":{\"params\":{\"_amount\":\"Amount to unstake (in whole tokens, not wei)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimReward()\":{\"notice\":\"Claim accumulated rewards\"},\"getStakeInfo(address)\":{\"notice\":\"Get staking information for a user\"},\"pendingReward(address)\":{\"notice\":\"Calculate pending rewards for a user\"},\"setRewardRate(uint256)\":{\"notice\":\"Set reward rate (owner only)\"},\"stake(uint256)\":{\"notice\":\"Stake tokens\"},\"unstake(uint256)\":{\"notice\":\"Unstake tokens after lock period\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking edu/staking.sol\":\"SimpleStaking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/staking edu/staking.sol\":{\"keccak256\":\"0xc4acd5827689661d727d79e5a7388136d4d6352de64433f6445a5cd98b312dec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542917496678527c1984d51e77bddf62aee61d7e92a91240dfdfd4363ff90940\",\"dweb:/ipfs/QmUSMF6P12JfFHpt1snmQnuy9jx5JXsefHgyrvmAYNzLca\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/staking edu/staking.sol:SimpleStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "contracts/staking edu/staking.sol:SimpleStaking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 332,
								"contract": "contracts/staking edu/staking.sol:SimpleStaking",
								"label": "stakingToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)290"
							},
							{
								"astId": 335,
								"contract": "contracts/staking edu/staking.sol:SimpleStaking",
								"label": "rewardToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)290"
							},
							{
								"astId": 341,
								"contract": "contracts/staking edu/staking.sol:SimpleStaking",
								"label": "rewardRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 353,
								"contract": "contracts/staking edu/staking.sol:SimpleStaking",
								"label": "stakes",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(StakeInfo)348_storage)"
							},
							{
								"astId": 355,
								"contract": "contracts/staking edu/staking.sol:SimpleStaking",
								"label": "totalStaked",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)290": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(StakeInfo)348_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct SimpleStaking.StakeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeInfo)348_storage"
							},
							"t_struct(StakeInfo)348_storage": {
								"encoding": "inplace",
								"label": "struct SimpleStaking.StakeInfo",
								"members": [
									{
										"astId": 343,
										"contract": "contracts/staking edu/staking.sol:SimpleStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 345,
										"contract": "contracts/staking edu/staking.sol:SimpleStaking",
										"label": "startTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 347,
										"contract": "contracts/staking edu/staking.sol:SimpleStaking",
										"label": "lastClaimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claimReward()": {
								"notice": "Claim accumulated rewards"
							},
							"getStakeInfo(address)": {
								"notice": "Get staking information for a user"
							},
							"pendingReward(address)": {
								"notice": "Calculate pending rewards for a user"
							},
							"setRewardRate(uint256)": {
								"notice": "Set reward rate (owner only)"
							},
							"stake(uint256)": {
								"notice": "Stake tokens"
							},
							"unstake(uint256)": {
								"notice": "Unstake tokens after lock period"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 290,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 290,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 290,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 290,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 290,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 290,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"contracts/staking edu/staking.sol": {
				"ast": {
					"absolutePath": "contracts/staking edu/staking.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"IERC20": [
							290
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						],
						"SimpleStaking": [
							728
						]
					},
					"id": 729,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "34:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 729,
							"sourceUnit": 291,
							"src": "62:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 729,
							"sourceUnit": 148,
							"src": "120:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 729,
							"sourceUnit": 213,
							"src": "174:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 326,
										"name": "Ownable",
										"nameLocations": [
											"266:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "266:7:4"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "266:7:4"
								},
								{
									"baseName": {
										"id": 328,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"275:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "275:15:4"
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "275:15:4"
								}
							],
							"canonicalName": "SimpleStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 728,
							"linearizedBaseContracts": [
								728,
								212,
								147,
								320
							],
							"name": "SimpleStaking",
							"nameLocation": "249:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 332,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "345:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 728,
									"src": "331:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$290",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 331,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 330,
											"name": "IERC20",
											"nameLocations": [
												"331:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "331:6:4"
										},
										"referencedDeclaration": 290,
										"src": "331:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$290",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 335,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "434:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 728,
									"src": "420:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$290",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 334,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 333,
											"name": "IERC20",
											"nameLocations": [
												"420:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "420:6:4"
										},
										"referencedDeclaration": 290,
										"src": "420:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$290",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "21a40589",
									"id": 338,
									"mutability": "constant",
									"name": "MINIMUM_LOCK_PERIOD",
									"nameLocation": "520:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 728,
									"src": "496:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 336,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "496:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 337,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "542:7:4",
										"subdenomination": "weeks",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1209600_by_1",
											"typeString": "int_const 1209600"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 341,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "639:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 728,
									"src": "624:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 339,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "624:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 340,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "652:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "SimpleStaking.StakeInfo",
									"id": 348,
									"members": [
										{
											"constant": false,
											"id": 343,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "705:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "697:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 342,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "697:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 345,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "754:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "746:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 344,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "746:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 347,
											"mutability": "mutable",
											"name": "lastClaimTime",
											"nameLocation": "817:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "809:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 346,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "809:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeInfo",
									"nameLocation": "676:9:4",
									"nodeType": "StructDefinition",
									"scope": 728,
									"src": "669:203:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 353,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "973:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 728,
									"src": "936:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$348_storage_$",
										"typeString": "mapping(address => struct SimpleStaking.StakeInfo)"
									},
									"typeName": {
										"id": 352,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 349,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "944:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "936:29:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$348_storage_$",
											"typeString": "mapping(address => struct SimpleStaking.StakeInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 351,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 350,
												"name": "StakeInfo",
												"nameLocations": [
													"955:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 348,
												"src": "955:9:4"
											},
											"referencedDeclaration": 348,
											"src": "955:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
												"typeString": "struct SimpleStaking.StakeInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 355,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "1035:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 728,
									"src": "1020:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 354,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1020:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 361,
									"name": "Staked",
									"nameLocation": "1080:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1103:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1087:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1117:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1109:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:38:4"
									},
									"src": "1074:51:4"
								},
								{
									"anonymous": false,
									"eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
									"id": 367,
									"name": "Unstaked",
									"nameLocation": "1137:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1162:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1146:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1176:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1168:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:38:4"
									},
									"src": "1131:53:4"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 373,
									"name": "RewardClaimed",
									"nameLocation": "1196:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1226:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1210:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1240:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1232:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1209:38:4"
									},
									"src": "1190:58:4"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1337:100:4",
										"statements": [
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 384,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1348:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 386,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "1370:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 385,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "1363:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1363:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "1348:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "1348:36:4"
											},
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 390,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "1395:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 392,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "1416:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 391,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "1409:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1409:20:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "1395:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1395:34:4"
											}
										]
									},
									"id": 397,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 380,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1325:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1329:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1325:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 382,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 379,
												"name": "Ownable",
												"nameLocations": [
													"1317:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1317:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1317:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "1280:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1272:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "1303:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1295:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1295:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:45:4"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1337:0:4"
									},
									"scope": 728,
									"src": "1260:177:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "1616:889:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 406,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1635:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1645:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1635:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1648:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1627:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1627:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "1627:38:4"
											},
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "amountInWei",
														"nameLocation": "1735:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "1727:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1727:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 417,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 414,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "1749:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1759:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "1749:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1727:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 419,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1848:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1852:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1848:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 418,
														"name": "_updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "1834:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1834:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "1834:25:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 426,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1964:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1968:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1964:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 430,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1984:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SimpleStaking_$728",
																				"typeString": "contract SimpleStaking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SimpleStaking_$728",
																				"typeString": "contract SimpleStaking"
																			}
																		],
																		"id": 429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1976:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 428,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1976:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1976:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 432,
																	"name": "amountInWei",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "1991:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 424,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "1938:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1951:12:4",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 289,
																"src": "1938:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1938:65:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2005:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1930:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1930:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "1930:93:4"
											},
											{
												"assignments": [
													439
												],
												"declarations": [
													{
														"constant": false,
														"id": 439,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "2099:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "2081:27:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
															"typeString": "struct SimpleStaking.StakeInfo"
														},
														"typeName": {
															"id": 438,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 437,
																"name": "StakeInfo",
																"nameLocations": [
																	"2081:9:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 348,
																"src": "2081:9:4"
															},
															"referencedDeclaration": 348,
															"src": "2081:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 444,
												"initialValue": {
													"baseExpression": {
														"id": 440,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "2111:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$348_storage_$",
															"typeString": "mapping(address => struct SimpleStaking.StakeInfo storage ref)"
														}
													},
													"id": 443,
													"indexExpression": {
														"expression": {
															"id": 441,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2118:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2122:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2118:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2111:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$348_storage",
														"typeString": "struct SimpleStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2081:48:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 445,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "2209:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 446,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2219:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 343,
														"src": "2209:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2229:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2209:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 464,
												"nodeType": "IfStatement",
												"src": "2205:147:4",
												"trueBody": {
													"id": 463,
													"nodeType": "Block",
													"src": "2232:120:4",
													"statements": [
														{
															"expression": {
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 449,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "2247:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																			"typeString": "struct SimpleStaking.StakeInfo storage pointer"
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2257:9:4",
																	"memberName": "startTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 345,
																	"src": "2247:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 452,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2269:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2275:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2269:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2247:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 455,
															"nodeType": "ExpressionStatement",
															"src": "2247:37:4"
														},
														{
															"expression": {
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 456,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "2299:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																			"typeString": "struct SimpleStaking.StakeInfo storage pointer"
																		}
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2309:13:4",
																	"memberName": "lastClaimTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2299:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 459,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2325:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2331:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2325:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2299:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "2299:41:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 465,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "2372:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2382:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 343,
														"src": "2372:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 468,
														"name": "amountInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "2392:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2372:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "2372:31:4"
											},
											{
												"expression": {
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 471,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "2414:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 472,
														"name": "amountInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "2429:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2414:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "2414:26:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 476,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2473:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2477:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2473:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "amountInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "2485:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 475,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "2466:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2466:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "EmitStatement",
												"src": "2461:36:4"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1449:107:4",
										"text": " @notice Stake tokens\n @param _amount Amount to stake (in whole tokens, not wei)"
									},
									"functionSelector": "a694fc3a",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 403,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 402,
												"name": "nonReentrant",
												"nameLocations": [
													"1603:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1603:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1603:12:4"
										}
									],
									"name": "stake",
									"nameLocation": "1571:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1585:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1577:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1576:17:4"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1616:0:4"
									},
									"scope": 728,
									"src": "1562:943:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "2708:923:4",
										"statements": [
											{
												"assignments": [
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 492,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "2737:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "2719:27:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
															"typeString": "struct SimpleStaking.StakeInfo"
														},
														"typeName": {
															"id": 491,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 490,
																"name": "StakeInfo",
																"nameLocations": [
																	"2719:9:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 348,
																"src": "2719:9:4"
															},
															"referencedDeclaration": 348,
															"src": "2719:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 497,
												"initialValue": {
													"baseExpression": {
														"id": 493,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "2749:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$348_storage_$",
															"typeString": "mapping(address => struct SimpleStaking.StakeInfo storage ref)"
														}
													},
													"id": 496,
													"indexExpression": {
														"expression": {
															"id": 494,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2756:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2760:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2756:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2749:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$348_storage",
														"typeString": "struct SimpleStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2719:48:4"
											},
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "amountInWei",
														"nameLocation": "2837:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "2829:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 498,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2829:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 500,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "2851:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2861:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "2851:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2829:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 505,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "2894:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																		"typeString": "struct SimpleStaking.StakeInfo storage pointer"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2904:6:4",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 343,
																"src": "2894:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 507,
																"name": "amountInWei",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "2914:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2894:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b656420616d6f756e74",
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2927:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
																"typeString": "literal_string \"Insufficient staked amount\""
															},
															"value": "Insufficient staked amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
																"typeString": "literal_string \"Insufficient staked amount\""
															}
														],
														"id": 504,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2886:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2886:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "2886:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 513,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2975:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2981:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2975:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 515,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "2994:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																			"typeString": "struct SimpleStaking.StakeInfo storage pointer"
																		}
																	},
																	"id": 516,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3004:9:4",
																	"memberName": "startTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 345,
																	"src": "2994:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 517,
																	"name": "MINIMUM_LOCK_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "3016:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2994:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2975:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f636b20706572696f64206e6f7420656e646564",
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3037:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157",
																"typeString": "literal_string \"Lock period not ended\""
															},
															"value": "Lock period not ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b152b2f6181340aa8d6b8b45a54d4b1ef8e73ba1cf083ff9f0c8c4d158472157",
																"typeString": "literal_string \"Lock period not ended\""
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2967:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2967:94:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "2967:94:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 524,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3146:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3150:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3146:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 523,
														"name": "_updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "3132:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3132:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "3132:25:4"
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 528,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3215:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3225:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 343,
														"src": "3215:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 531,
														"name": "amountInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "3235:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3215:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "3215:31:4"
											},
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "3257:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 535,
														"name": "amountInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "3272:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3257:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "3257:26:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 538,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3356:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3366:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 343,
														"src": "3356:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3376:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3356:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "3352:77:4",
												"trueBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "3379:50:4",
													"statements": [
														{
															"expression": {
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 542,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "3394:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																			"typeString": "struct SimpleStaking.StakeInfo storage pointer"
																		}
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3404:9:4",
																	"memberName": "startTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 345,
																	"src": "3394:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3416:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3394:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 547,
															"nodeType": "ExpressionStatement",
															"src": "3394:23:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 553,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3520:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3524:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3520:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 555,
																	"name": "amountInWei",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "3532:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "3498:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3511:8:4",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 257,
																"src": "3498:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3498:46:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3546:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3490:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3490:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "3490:74:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 561,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3599:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3603:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3599:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "amountInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "3611:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "3590:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3590:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "EmitStatement",
												"src": "3585:38:4"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2517:129:4",
										"text": " @notice Unstake tokens after lock period\n @param _amount Amount to unstake (in whole tokens, not wei)"
									},
									"functionSelector": "2e17de78",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 488,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 487,
												"name": "nonReentrant",
												"nameLocations": [
													"2695:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "2695:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2695:12:4"
										}
									],
									"name": "unstake",
									"nameLocation": "2661:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2677:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "2669:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:17:4"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2708:0:4"
									},
									"scope": 728,
									"src": "2652:979:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "3748:252:4",
										"statements": [
											{
												"assignments": [
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 574,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3767:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 601,
														"src": "3759:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 573,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3759:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 579,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 576,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3790:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3794:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3790:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 575,
														"name": "_updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "3776:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3776:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3759:42:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 580,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "3826:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3835:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3826:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "3822:171:4",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "3838:155:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 586,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "3882:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3886:6:4",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "3882:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 588,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 574,
																				"src": "3894:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 584,
																				"name": "rewardToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 335,
																				"src": "3861:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$290",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3873:8:4",
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 257,
																			"src": "3861:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3861:40:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "526577617264207472616e73666572206661696c6564",
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3903:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce",
																			"typeString": "literal_string \"Reward transfer failed\""
																		},
																		"value": "Reward transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce",
																			"typeString": "literal_string \"Reward transfer failed\""
																		}
																	],
																	"id": 583,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3853:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3853:75:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "3853:75:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 594,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3962:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3966:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3962:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "3974:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "RewardClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "3948:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3948:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "3943:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "3643:54:4",
										"text": " @notice Claim accumulated rewards"
									},
									"functionSelector": "b88a802f",
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 571,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 570,
												"name": "nonReentrant",
												"nameLocations": [
													"3735:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "3735:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3735:12:4"
										}
									],
									"name": "claimReward",
									"nameLocation": "3712:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3723:2:4"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3748:0:4"
									},
									"scope": 728,
									"src": "3703:297:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "4230:458:4",
										"statements": [
											{
												"assignments": [
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "4259:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 646,
														"src": "4241:27:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
															"typeString": "struct SimpleStaking.StakeInfo"
														},
														"typeName": {
															"id": 611,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 610,
																"name": "StakeInfo",
																"nameLocations": [
																	"4241:9:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 348,
																"src": "4241:9:4"
															},
															"referencedDeclaration": 348,
															"src": "4241:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 616,
												"initialValue": {
													"baseExpression": {
														"id": 613,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "4271:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$348_storage_$",
															"typeString": "mapping(address => struct SimpleStaking.StakeInfo storage ref)"
														}
													},
													"id": 615,
													"indexExpression": {
														"id": 614,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "4278:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4271:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$348_storage",
														"typeString": "struct SimpleStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4241:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 617,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "4309:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4319:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 343,
														"src": "4309:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4329:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4309:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 624,
												"nodeType": "IfStatement",
												"src": "4305:62:4",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "4332:35:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4354:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 609,
															"id": 622,
															"nodeType": "Return",
															"src": "4347:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "4395:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 646,
														"src": "4387:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4387:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 632,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 627,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4409:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4415:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4409:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 629,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "4427:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 630,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4437:13:4",
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 347,
														"src": "4427:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4409:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4387:63:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 633,
																			"name": "userStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "4615:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																				"typeString": "struct SimpleStaking.StakeInfo storage pointer"
																			}
																		},
																		"id": 634,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4625:6:4",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 343,
																		"src": "4615:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 635,
																		"name": "rewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "4634:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4615:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 637,
																	"name": "timeElapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "4647:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4615:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 639,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4614:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_315360000000_by_1",
																	"typeString": "int_const 315360000000"
																},
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "333635",
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4663:8:4",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "365"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4674:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "4663:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_315360000000_by_1",
																	"typeString": "int_const 315360000000"
																}
															}
														],
														"id": 643,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4662:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_315360000000_by_1",
															"typeString": "int_const 315360000000"
														}
													},
													"src": "4614:66:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 609,
												"id": 645,
												"nodeType": "Return",
												"src": "4607:73:4"
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "4012:144:4",
										"text": " @notice Calculate pending rewards for a user\n @param _user Address of the user\n @return Pending reward amount"
									},
									"functionSelector": "f40f0f52",
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingReward",
									"nameLocation": "4171:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4193:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "4185:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4185:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4184:15:4"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "4221:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:9:4"
									},
									"scope": 728,
									"src": "4162:526:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "4895:198:4",
										"statements": [
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "4914:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 676,
														"src": "4906:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 655,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4906:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 660,
												"initialValue": {
													"arguments": [
														{
															"id": 658,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "4937:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 657,
														"name": "pendingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "4923:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4923:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4906:37:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 661,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "4968:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4977:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4968:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "IfStatement",
												"src": "4964:88:4",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "4980:72:4",
													"statements": [
														{
															"expression": {
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 664,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 353,
																			"src": "4995:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$348_storage_$",
																				"typeString": "mapping(address => struct SimpleStaking.StakeInfo storage ref)"
																			}
																		},
																		"id": 666,
																		"indexExpression": {
																			"id": 665,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 650,
																			"src": "5002:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4995:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$348_storage",
																			"typeString": "struct SimpleStaking.StakeInfo storage ref"
																		}
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5009:13:4",
																	"memberName": "lastClaimTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "4995:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 668,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5025:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5031:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5025:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4995:45:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 671,
															"nodeType": "ExpressionStatement",
															"src": "4995:45:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 674,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 656,
													"src": "5079:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 654,
												"id": 675,
												"nodeType": "Return",
												"src": "5072:13:4"
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "4700:124:4",
										"text": " @notice Update reward for a user\n @param _user Address of the user\n @return Reward amount"
									},
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateReward",
									"nameLocation": "4839:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4861:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "4853:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4853:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4852:15:4"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "4886:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4885:9:4"
									},
									"scope": 728,
									"src": "4830:263:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5290:43:4",
										"statements": [
											{
												"expression": {
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 685,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "5301:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 686,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "5314:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5301:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "5301:24:4"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5105:116:4",
										"text": " @notice Set reward rate (owner only)\n @param _rewardRate New reward rate in basis points"
									},
									"functionSelector": "9e447fc6",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 683,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 682,
												"name": "onlyOwner",
												"nameLocations": [
													"5280:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5280:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5280:9:4"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "5236:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "5258:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5250:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5250:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5249:21:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5290:0:4"
									},
									"scope": 728,
									"src": "5227:106:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "5858:307:4",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "5887:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 726,
														"src": "5869:27:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
															"typeString": "struct SimpleStaking.StakeInfo"
														},
														"typeName": {
															"id": 705,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 704,
																"name": "StakeInfo",
																"nameLocations": [
																	"5869:9:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 348,
																"src": "5869:9:4"
															},
															"referencedDeclaration": 348,
															"src": "5869:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"initialValue": {
													"baseExpression": {
														"id": 707,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "5899:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$348_storage_$",
															"typeString": "mapping(address => struct SimpleStaking.StakeInfo storage ref)"
														}
													},
													"id": 709,
													"indexExpression": {
														"id": 708,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "5906:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5899:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$348_storage",
														"typeString": "struct SimpleStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5869:43:4"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 711,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "5955:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																		"typeString": "struct SimpleStaking.StakeInfo storage pointer"
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5965:6:4",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 343,
																"src": "5955:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5974:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "5955:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 715,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "6036:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																	"typeString": "struct SimpleStaking.StakeInfo storage pointer"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6046:9:4",
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 345,
															"src": "6036:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 717,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "6070:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$348_storage_ptr",
																		"typeString": "struct SimpleStaking.StakeInfo storage pointer"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6080:9:4",
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 345,
																"src": "6070:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 719,
																"name": "MINIMUM_LOCK_PERIOD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "6092:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6070:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 722,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "6140:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 721,
																"name": "pendingReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "6126:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6126:20:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 724,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5940:217:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 703,
												"id": 725,
												"nodeType": "Return",
												"src": "5933:224:4"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "5345:324:4",
										"text": " @notice Get staking information for a user\n @param _user Address of the user\n @return amount Amount staked (in whole tokens)\n @return startTime Time when stake was created\n @return lockEndTime Time when lock period ends\n @return pendingRewards Pending rewards (in wei)"
									},
									"functionSelector": "c3453153",
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakeInfo",
									"nameLocation": "5684:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5705:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "5697:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:15:4"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5753:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "5745:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5745:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "5778:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "5770:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5770:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "lockEndTime",
												"nameLocation": "5806:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "5798:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "pendingRewards",
												"nameLocation": "5836:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "5828:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5828:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5734:123:4"
									},
									"scope": 728,
									"src": "5675:490:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 729,
							"src": "240:5928:4",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								361,
								367,
								373
							]
						}
					],
					"src": "34:6184:4"
				},
				"id": 4
			}
		}
	}
}